// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-commercetools/sdk/go/commercetools/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiExtensionDestination struct {
	AccessKey           *string `pulumi:"accessKey"`
	AccessSecret        *string `pulumi:"accessSecret"`
	Arn                 *string `pulumi:"arn"`
	AuthorizationHeader *string `pulumi:"authorizationHeader"`
	AzureAuthentication *string `pulumi:"azureAuthentication"`
	Type                string  `pulumi:"type"`
	Url                 *string `pulumi:"url"`
}

// ApiExtensionDestinationInput is an input type that accepts ApiExtensionDestinationArgs and ApiExtensionDestinationOutput values.
// You can construct a concrete instance of `ApiExtensionDestinationInput` via:
//
//	ApiExtensionDestinationArgs{...}
type ApiExtensionDestinationInput interface {
	pulumi.Input

	ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput
	ToApiExtensionDestinationOutputWithContext(context.Context) ApiExtensionDestinationOutput
}

type ApiExtensionDestinationArgs struct {
	AccessKey           pulumi.StringPtrInput `pulumi:"accessKey"`
	AccessSecret        pulumi.StringPtrInput `pulumi:"accessSecret"`
	Arn                 pulumi.StringPtrInput `pulumi:"arn"`
	AuthorizationHeader pulumi.StringPtrInput `pulumi:"authorizationHeader"`
	AzureAuthentication pulumi.StringPtrInput `pulumi:"azureAuthentication"`
	Type                pulumi.StringInput    `pulumi:"type"`
	Url                 pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiExtensionDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionDestination)(nil)).Elem()
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput {
	return i.ToApiExtensionDestinationOutputWithContext(context.Background())
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationOutputWithContext(ctx context.Context) ApiExtensionDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationOutput)
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return i.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationOutput).ToApiExtensionDestinationPtrOutputWithContext(ctx)
}

// ApiExtensionDestinationPtrInput is an input type that accepts ApiExtensionDestinationArgs, ApiExtensionDestinationPtr and ApiExtensionDestinationPtrOutput values.
// You can construct a concrete instance of `ApiExtensionDestinationPtrInput` via:
//
//	        ApiExtensionDestinationArgs{...}
//
//	or:
//
//	        nil
type ApiExtensionDestinationPtrInput interface {
	pulumi.Input

	ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput
	ToApiExtensionDestinationPtrOutputWithContext(context.Context) ApiExtensionDestinationPtrOutput
}

type apiExtensionDestinationPtrType ApiExtensionDestinationArgs

func ApiExtensionDestinationPtr(v *ApiExtensionDestinationArgs) ApiExtensionDestinationPtrInput {
	return (*apiExtensionDestinationPtrType)(v)
}

func (*apiExtensionDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiExtensionDestination)(nil)).Elem()
}

func (i *apiExtensionDestinationPtrType) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return i.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (i *apiExtensionDestinationPtrType) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationPtrOutput)
}

type ApiExtensionDestinationOutput struct{ *pulumi.OutputState }

func (ApiExtensionDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionDestination)(nil)).Elem()
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput {
	return o
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationOutputWithContext(ctx context.Context) ApiExtensionDestinationOutput {
	return o
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return o.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiExtensionDestination) *ApiExtensionDestination {
		return &v
	}).(ApiExtensionDestinationPtrOutput)
}

func (o ApiExtensionDestinationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AccessSecret }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AuthorizationHeader }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AzureAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AzureAuthentication }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiExtensionDestination) string { return v.Type }).(pulumi.StringOutput)
}

func (o ApiExtensionDestinationOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiExtensionDestinationPtrOutput struct{ *pulumi.OutputState }

func (ApiExtensionDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiExtensionDestination)(nil)).Elem()
}

func (o ApiExtensionDestinationPtrOutput) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return o
}

func (o ApiExtensionDestinationPtrOutput) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return o
}

func (o ApiExtensionDestinationPtrOutput) Elem() ApiExtensionDestinationOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) ApiExtensionDestination {
		if v != nil {
			return *v
		}
		var ret ApiExtensionDestination
		return ret
	}).(ApiExtensionDestinationOutput)
}

func (o ApiExtensionDestinationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessSecret
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationHeader
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AzureAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AzureAuthentication
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ApiExtensionTrigger struct {
	// Currently, Create and Update are supported
	Actions []string `pulumi:"actions"`
	// Valid predicate that controls the conditions under which the API Extension is called.
	Condition *string `pulumi:"condition"`
	// Currently, cart, order, payment, and customer are supported
	ResourceTypeId string `pulumi:"resourceTypeId"`
}

// ApiExtensionTriggerInput is an input type that accepts ApiExtensionTriggerArgs and ApiExtensionTriggerOutput values.
// You can construct a concrete instance of `ApiExtensionTriggerInput` via:
//
//	ApiExtensionTriggerArgs{...}
type ApiExtensionTriggerInput interface {
	pulumi.Input

	ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput
	ToApiExtensionTriggerOutputWithContext(context.Context) ApiExtensionTriggerOutput
}

type ApiExtensionTriggerArgs struct {
	// Currently, Create and Update are supported
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// Valid predicate that controls the conditions under which the API Extension is called.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Currently, cart, order, payment, and customer are supported
	ResourceTypeId pulumi.StringInput `pulumi:"resourceTypeId"`
}

func (ApiExtensionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionTrigger)(nil)).Elem()
}

func (i ApiExtensionTriggerArgs) ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput {
	return i.ToApiExtensionTriggerOutputWithContext(context.Background())
}

func (i ApiExtensionTriggerArgs) ToApiExtensionTriggerOutputWithContext(ctx context.Context) ApiExtensionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionTriggerOutput)
}

// ApiExtensionTriggerArrayInput is an input type that accepts ApiExtensionTriggerArray and ApiExtensionTriggerArrayOutput values.
// You can construct a concrete instance of `ApiExtensionTriggerArrayInput` via:
//
//	ApiExtensionTriggerArray{ ApiExtensionTriggerArgs{...} }
type ApiExtensionTriggerArrayInput interface {
	pulumi.Input

	ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput
	ToApiExtensionTriggerArrayOutputWithContext(context.Context) ApiExtensionTriggerArrayOutput
}

type ApiExtensionTriggerArray []ApiExtensionTriggerInput

func (ApiExtensionTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiExtensionTrigger)(nil)).Elem()
}

func (i ApiExtensionTriggerArray) ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput {
	return i.ToApiExtensionTriggerArrayOutputWithContext(context.Background())
}

func (i ApiExtensionTriggerArray) ToApiExtensionTriggerArrayOutputWithContext(ctx context.Context) ApiExtensionTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionTriggerArrayOutput)
}

type ApiExtensionTriggerOutput struct{ *pulumi.OutputState }

func (ApiExtensionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionTrigger)(nil)).Elem()
}

func (o ApiExtensionTriggerOutput) ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput {
	return o
}

func (o ApiExtensionTriggerOutput) ToApiExtensionTriggerOutputWithContext(ctx context.Context) ApiExtensionTriggerOutput {
	return o
}

// Currently, Create and Update are supported
func (o ApiExtensionTriggerOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiExtensionTrigger) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Valid predicate that controls the conditions under which the API Extension is called.
func (o ApiExtensionTriggerOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionTrigger) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Currently, cart, order, payment, and customer are supported
func (o ApiExtensionTriggerOutput) ResourceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiExtensionTrigger) string { return v.ResourceTypeId }).(pulumi.StringOutput)
}

type ApiExtensionTriggerArrayOutput struct{ *pulumi.OutputState }

func (ApiExtensionTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiExtensionTrigger)(nil)).Elem()
}

func (o ApiExtensionTriggerArrayOutput) ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput {
	return o
}

func (o ApiExtensionTriggerArrayOutput) ToApiExtensionTriggerArrayOutputWithContext(ctx context.Context) ApiExtensionTriggerArrayOutput {
	return o
}

func (o ApiExtensionTriggerArrayOutput) Index(i pulumi.IntInput) ApiExtensionTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiExtensionTrigger {
		return vs[0].([]ApiExtensionTrigger)[vs[1].(int)]
	}).(ApiExtensionTriggerOutput)
}

type AttributeGroupAttribute struct {
	// The Attribute's name as given in its AttributeDefinition.
	Key string `pulumi:"key"`
}

// AttributeGroupAttributeInput is an input type that accepts AttributeGroupAttributeArgs and AttributeGroupAttributeOutput values.
// You can construct a concrete instance of `AttributeGroupAttributeInput` via:
//
//	AttributeGroupAttributeArgs{...}
type AttributeGroupAttributeInput interface {
	pulumi.Input

	ToAttributeGroupAttributeOutput() AttributeGroupAttributeOutput
	ToAttributeGroupAttributeOutputWithContext(context.Context) AttributeGroupAttributeOutput
}

type AttributeGroupAttributeArgs struct {
	// The Attribute's name as given in its AttributeDefinition.
	Key pulumi.StringInput `pulumi:"key"`
}

func (AttributeGroupAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeGroupAttribute)(nil)).Elem()
}

func (i AttributeGroupAttributeArgs) ToAttributeGroupAttributeOutput() AttributeGroupAttributeOutput {
	return i.ToAttributeGroupAttributeOutputWithContext(context.Background())
}

func (i AttributeGroupAttributeArgs) ToAttributeGroupAttributeOutputWithContext(ctx context.Context) AttributeGroupAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeGroupAttributeOutput)
}

// AttributeGroupAttributeArrayInput is an input type that accepts AttributeGroupAttributeArray and AttributeGroupAttributeArrayOutput values.
// You can construct a concrete instance of `AttributeGroupAttributeArrayInput` via:
//
//	AttributeGroupAttributeArray{ AttributeGroupAttributeArgs{...} }
type AttributeGroupAttributeArrayInput interface {
	pulumi.Input

	ToAttributeGroupAttributeArrayOutput() AttributeGroupAttributeArrayOutput
	ToAttributeGroupAttributeArrayOutputWithContext(context.Context) AttributeGroupAttributeArrayOutput
}

type AttributeGroupAttributeArray []AttributeGroupAttributeInput

func (AttributeGroupAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttributeGroupAttribute)(nil)).Elem()
}

func (i AttributeGroupAttributeArray) ToAttributeGroupAttributeArrayOutput() AttributeGroupAttributeArrayOutput {
	return i.ToAttributeGroupAttributeArrayOutputWithContext(context.Background())
}

func (i AttributeGroupAttributeArray) ToAttributeGroupAttributeArrayOutputWithContext(ctx context.Context) AttributeGroupAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeGroupAttributeArrayOutput)
}

type AttributeGroupAttributeOutput struct{ *pulumi.OutputState }

func (AttributeGroupAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeGroupAttribute)(nil)).Elem()
}

func (o AttributeGroupAttributeOutput) ToAttributeGroupAttributeOutput() AttributeGroupAttributeOutput {
	return o
}

func (o AttributeGroupAttributeOutput) ToAttributeGroupAttributeOutputWithContext(ctx context.Context) AttributeGroupAttributeOutput {
	return o
}

// The Attribute's name as given in its AttributeDefinition.
func (o AttributeGroupAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AttributeGroupAttribute) string { return v.Key }).(pulumi.StringOutput)
}

type AttributeGroupAttributeArrayOutput struct{ *pulumi.OutputState }

func (AttributeGroupAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttributeGroupAttribute)(nil)).Elem()
}

func (o AttributeGroupAttributeArrayOutput) ToAttributeGroupAttributeArrayOutput() AttributeGroupAttributeArrayOutput {
	return o
}

func (o AttributeGroupAttributeArrayOutput) ToAttributeGroupAttributeArrayOutputWithContext(ctx context.Context) AttributeGroupAttributeArrayOutput {
	return o
}

func (o AttributeGroupAttributeArrayOutput) Index(i pulumi.IntInput) AttributeGroupAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttributeGroupAttribute {
		return vs[0].([]AttributeGroupAttribute)[vs[1].(int)]
	}).(AttributeGroupAttributeOutput)
}

type CartDiscountCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// CartDiscountCustomInput is an input type that accepts CartDiscountCustomArgs and CartDiscountCustomOutput values.
// You can construct a concrete instance of `CartDiscountCustomInput` via:
//
//	CartDiscountCustomArgs{...}
type CartDiscountCustomInput interface {
	pulumi.Input

	ToCartDiscountCustomOutput() CartDiscountCustomOutput
	ToCartDiscountCustomOutputWithContext(context.Context) CartDiscountCustomOutput
}

type CartDiscountCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (CartDiscountCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountCustom)(nil)).Elem()
}

func (i CartDiscountCustomArgs) ToCartDiscountCustomOutput() CartDiscountCustomOutput {
	return i.ToCartDiscountCustomOutputWithContext(context.Background())
}

func (i CartDiscountCustomArgs) ToCartDiscountCustomOutputWithContext(ctx context.Context) CartDiscountCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountCustomOutput)
}

func (i CartDiscountCustomArgs) ToCartDiscountCustomPtrOutput() CartDiscountCustomPtrOutput {
	return i.ToCartDiscountCustomPtrOutputWithContext(context.Background())
}

func (i CartDiscountCustomArgs) ToCartDiscountCustomPtrOutputWithContext(ctx context.Context) CartDiscountCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountCustomOutput).ToCartDiscountCustomPtrOutputWithContext(ctx)
}

// CartDiscountCustomPtrInput is an input type that accepts CartDiscountCustomArgs, CartDiscountCustomPtr and CartDiscountCustomPtrOutput values.
// You can construct a concrete instance of `CartDiscountCustomPtrInput` via:
//
//	        CartDiscountCustomArgs{...}
//
//	or:
//
//	        nil
type CartDiscountCustomPtrInput interface {
	pulumi.Input

	ToCartDiscountCustomPtrOutput() CartDiscountCustomPtrOutput
	ToCartDiscountCustomPtrOutputWithContext(context.Context) CartDiscountCustomPtrOutput
}

type cartDiscountCustomPtrType CartDiscountCustomArgs

func CartDiscountCustomPtr(v *CartDiscountCustomArgs) CartDiscountCustomPtrInput {
	return (*cartDiscountCustomPtrType)(v)
}

func (*cartDiscountCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountCustom)(nil)).Elem()
}

func (i *cartDiscountCustomPtrType) ToCartDiscountCustomPtrOutput() CartDiscountCustomPtrOutput {
	return i.ToCartDiscountCustomPtrOutputWithContext(context.Background())
}

func (i *cartDiscountCustomPtrType) ToCartDiscountCustomPtrOutputWithContext(ctx context.Context) CartDiscountCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountCustomPtrOutput)
}

type CartDiscountCustomOutput struct{ *pulumi.OutputState }

func (CartDiscountCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountCustom)(nil)).Elem()
}

func (o CartDiscountCustomOutput) ToCartDiscountCustomOutput() CartDiscountCustomOutput {
	return o
}

func (o CartDiscountCustomOutput) ToCartDiscountCustomOutputWithContext(ctx context.Context) CartDiscountCustomOutput {
	return o
}

func (o CartDiscountCustomOutput) ToCartDiscountCustomPtrOutput() CartDiscountCustomPtrOutput {
	return o.ToCartDiscountCustomPtrOutputWithContext(context.Background())
}

func (o CartDiscountCustomOutput) ToCartDiscountCustomPtrOutputWithContext(ctx context.Context) CartDiscountCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CartDiscountCustom) *CartDiscountCustom {
		return &v
	}).(CartDiscountCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CartDiscountCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v CartDiscountCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o CartDiscountCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type CartDiscountCustomPtrOutput struct{ *pulumi.OutputState }

func (CartDiscountCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountCustom)(nil)).Elem()
}

func (o CartDiscountCustomPtrOutput) ToCartDiscountCustomPtrOutput() CartDiscountCustomPtrOutput {
	return o
}

func (o CartDiscountCustomPtrOutput) ToCartDiscountCustomPtrOutputWithContext(ctx context.Context) CartDiscountCustomPtrOutput {
	return o
}

func (o CartDiscountCustomPtrOutput) Elem() CartDiscountCustomOutput {
	return o.ApplyT(func(v *CartDiscountCustom) CartDiscountCustom {
		if v != nil {
			return *v
		}
		var ret CartDiscountCustom
		return ret
	}).(CartDiscountCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CartDiscountCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *CartDiscountCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o CartDiscountCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type CartDiscountTarget struct {
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	DiscountedQuantity *int `pulumi:"discountedQuantity"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	MaxOccurrence *int `pulumi:"maxOccurrence"`
	// LineItems, CustomLineItems, MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	Predicate *string `pulumi:"predicate"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. Can be either Cheapest or MostExpensive. If set for another target the value will be ignored
	SelectionMode *string `pulumi:"selectionMode"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	TriggerQuantity *int `pulumi:"triggerQuantity"`
	// Supports lineItems, customLineItems, multiBuyLineItems, multiBuyCustomLineItems, shipping or totalPrice
	Type string `pulumi:"type"`
}

// CartDiscountTargetInput is an input type that accepts CartDiscountTargetArgs and CartDiscountTargetOutput values.
// You can construct a concrete instance of `CartDiscountTargetInput` via:
//
//	CartDiscountTargetArgs{...}
type CartDiscountTargetInput interface {
	pulumi.Input

	ToCartDiscountTargetOutput() CartDiscountTargetOutput
	ToCartDiscountTargetOutputWithContext(context.Context) CartDiscountTargetOutput
}

type CartDiscountTargetArgs struct {
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	DiscountedQuantity pulumi.IntPtrInput `pulumi:"discountedQuantity"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	MaxOccurrence pulumi.IntPtrInput `pulumi:"maxOccurrence"`
	// LineItems, CustomLineItems, MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	Predicate pulumi.StringPtrInput `pulumi:"predicate"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. Can be either Cheapest or MostExpensive. If set for another target the value will be ignored
	SelectionMode pulumi.StringPtrInput `pulumi:"selectionMode"`
	// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
	TriggerQuantity pulumi.IntPtrInput `pulumi:"triggerQuantity"`
	// Supports lineItems, customLineItems, multiBuyLineItems, multiBuyCustomLineItems, shipping or totalPrice
	Type pulumi.StringInput `pulumi:"type"`
}

func (CartDiscountTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountTarget)(nil)).Elem()
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetOutput() CartDiscountTargetOutput {
	return i.ToCartDiscountTargetOutputWithContext(context.Background())
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetOutputWithContext(ctx context.Context) CartDiscountTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetOutput)
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return i.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetOutput).ToCartDiscountTargetPtrOutputWithContext(ctx)
}

// CartDiscountTargetPtrInput is an input type that accepts CartDiscountTargetArgs, CartDiscountTargetPtr and CartDiscountTargetPtrOutput values.
// You can construct a concrete instance of `CartDiscountTargetPtrInput` via:
//
//	        CartDiscountTargetArgs{...}
//
//	or:
//
//	        nil
type CartDiscountTargetPtrInput interface {
	pulumi.Input

	ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput
	ToCartDiscountTargetPtrOutputWithContext(context.Context) CartDiscountTargetPtrOutput
}

type cartDiscountTargetPtrType CartDiscountTargetArgs

func CartDiscountTargetPtr(v *CartDiscountTargetArgs) CartDiscountTargetPtrInput {
	return (*cartDiscountTargetPtrType)(v)
}

func (*cartDiscountTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountTarget)(nil)).Elem()
}

func (i *cartDiscountTargetPtrType) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return i.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (i *cartDiscountTargetPtrType) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetPtrOutput)
}

type CartDiscountTargetOutput struct{ *pulumi.OutputState }

func (CartDiscountTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountTarget)(nil)).Elem()
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetOutput() CartDiscountTargetOutput {
	return o
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetOutputWithContext(ctx context.Context) CartDiscountTargetOutput {
	return o
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return o.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CartDiscountTarget) *CartDiscountTarget {
		return &v
	}).(CartDiscountTargetPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetOutput) DiscountedQuantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *int { return v.DiscountedQuantity }).(pulumi.IntPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetOutput) MaxOccurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *int { return v.MaxOccurrence }).(pulumi.IntPtrOutput)
}

// LineItems, CustomLineItems, MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetOutput) Predicate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *string { return v.Predicate }).(pulumi.StringPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. Can be either Cheapest or MostExpensive. If set for another target the value will be ignored
func (o CartDiscountTargetOutput) SelectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *string { return v.SelectionMode }).(pulumi.StringPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetOutput) TriggerQuantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *int { return v.TriggerQuantity }).(pulumi.IntPtrOutput)
}

// Supports lineItems, customLineItems, multiBuyLineItems, multiBuyCustomLineItems, shipping or totalPrice
func (o CartDiscountTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountTarget) string { return v.Type }).(pulumi.StringOutput)
}

type CartDiscountTargetPtrOutput struct{ *pulumi.OutputState }

func (CartDiscountTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountTarget)(nil)).Elem()
}

func (o CartDiscountTargetPtrOutput) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return o
}

func (o CartDiscountTargetPtrOutput) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return o
}

func (o CartDiscountTargetPtrOutput) Elem() CartDiscountTargetOutput {
	return o.ApplyT(func(v *CartDiscountTarget) CartDiscountTarget {
		if v != nil {
			return *v
		}
		var ret CartDiscountTarget
		return ret
	}).(CartDiscountTargetOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetPtrOutput) DiscountedQuantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *int {
		if v == nil {
			return nil
		}
		return v.DiscountedQuantity
	}).(pulumi.IntPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetPtrOutput) MaxOccurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *int {
		if v == nil {
			return nil
		}
		return v.MaxOccurrence
	}).(pulumi.IntPtrOutput)
}

// LineItems, CustomLineItems, MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetPtrOutput) Predicate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *string {
		if v == nil {
			return nil
		}
		return v.Predicate
	}).(pulumi.StringPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. Can be either Cheapest or MostExpensive. If set for another target the value will be ignored
func (o CartDiscountTargetPtrOutput) SelectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *string {
		if v == nil {
			return nil
		}
		return v.SelectionMode
	}).(pulumi.StringPtrOutput)
}

// MultiBuyLineItems or MultiBuyCustomLineItems target specific fields. If set for another target the value will be ignored
func (o CartDiscountTargetPtrOutput) TriggerQuantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *int {
		if v == nil {
			return nil
		}
		return v.TriggerQuantity
	}).(pulumi.IntPtrOutput)
}

// Supports lineItems, customLineItems, multiBuyLineItems, multiBuyCustomLineItems, shipping or totalPrice
func (o CartDiscountTargetPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CartDiscountValue struct {
	// Channel must have the role ProductDistribution. Optional when value type is giftLineItem
	DistributionChannelId *string `pulumi:"distributionChannelId"`
	// Absolute discount specific fields
	Monies []CartDiscountValueMoney `pulumi:"monies"`
	// Relative discount specific fields
	Permyriad *int `pulumi:"permyriad"`
	// ResourceIdentifier of a Product. Required when value type is giftLineItem
	ProductId *string `pulumi:"productId"`
	// Channel must have the role InventorySupply. Optional when value type is giftLineItem
	SupplyChannelId *string `pulumi:"supplyChannelId"`
	// Currently supports absolute/relative/giftLineItem
	Type string `pulumi:"type"`
	// ProductVariant of the Product. Required when value type is giftLineItem
	VariantId *int `pulumi:"variantId"`
}

// CartDiscountValueInput is an input type that accepts CartDiscountValueArgs and CartDiscountValueOutput values.
// You can construct a concrete instance of `CartDiscountValueInput` via:
//
//	CartDiscountValueArgs{...}
type CartDiscountValueInput interface {
	pulumi.Input

	ToCartDiscountValueOutput() CartDiscountValueOutput
	ToCartDiscountValueOutputWithContext(context.Context) CartDiscountValueOutput
}

type CartDiscountValueArgs struct {
	// Channel must have the role ProductDistribution. Optional when value type is giftLineItem
	DistributionChannelId pulumi.StringPtrInput `pulumi:"distributionChannelId"`
	// Absolute discount specific fields
	Monies CartDiscountValueMoneyArrayInput `pulumi:"monies"`
	// Relative discount specific fields
	Permyriad pulumi.IntPtrInput `pulumi:"permyriad"`
	// ResourceIdentifier of a Product. Required when value type is giftLineItem
	ProductId pulumi.StringPtrInput `pulumi:"productId"`
	// Channel must have the role InventorySupply. Optional when value type is giftLineItem
	SupplyChannelId pulumi.StringPtrInput `pulumi:"supplyChannelId"`
	// Currently supports absolute/relative/giftLineItem
	Type pulumi.StringInput `pulumi:"type"`
	// ProductVariant of the Product. Required when value type is giftLineItem
	VariantId pulumi.IntPtrInput `pulumi:"variantId"`
}

func (CartDiscountValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValue)(nil)).Elem()
}

func (i CartDiscountValueArgs) ToCartDiscountValueOutput() CartDiscountValueOutput {
	return i.ToCartDiscountValueOutputWithContext(context.Background())
}

func (i CartDiscountValueArgs) ToCartDiscountValueOutputWithContext(ctx context.Context) CartDiscountValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueOutput)
}

func (i CartDiscountValueArgs) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return i.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (i CartDiscountValueArgs) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueOutput).ToCartDiscountValuePtrOutputWithContext(ctx)
}

// CartDiscountValuePtrInput is an input type that accepts CartDiscountValueArgs, CartDiscountValuePtr and CartDiscountValuePtrOutput values.
// You can construct a concrete instance of `CartDiscountValuePtrInput` via:
//
//	        CartDiscountValueArgs{...}
//
//	or:
//
//	        nil
type CartDiscountValuePtrInput interface {
	pulumi.Input

	ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput
	ToCartDiscountValuePtrOutputWithContext(context.Context) CartDiscountValuePtrOutput
}

type cartDiscountValuePtrType CartDiscountValueArgs

func CartDiscountValuePtr(v *CartDiscountValueArgs) CartDiscountValuePtrInput {
	return (*cartDiscountValuePtrType)(v)
}

func (*cartDiscountValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountValue)(nil)).Elem()
}

func (i *cartDiscountValuePtrType) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return i.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (i *cartDiscountValuePtrType) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValuePtrOutput)
}

type CartDiscountValueOutput struct{ *pulumi.OutputState }

func (CartDiscountValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValue)(nil)).Elem()
}

func (o CartDiscountValueOutput) ToCartDiscountValueOutput() CartDiscountValueOutput {
	return o
}

func (o CartDiscountValueOutput) ToCartDiscountValueOutputWithContext(ctx context.Context) CartDiscountValueOutput {
	return o
}

func (o CartDiscountValueOutput) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return o.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (o CartDiscountValueOutput) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CartDiscountValue) *CartDiscountValue {
		return &v
	}).(CartDiscountValuePtrOutput)
}

// Channel must have the role ProductDistribution. Optional when value type is giftLineItem
func (o CartDiscountValueOutput) DistributionChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.DistributionChannelId }).(pulumi.StringPtrOutput)
}

// Absolute discount specific fields
func (o CartDiscountValueOutput) Monies() CartDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v CartDiscountValue) []CartDiscountValueMoney { return v.Monies }).(CartDiscountValueMoneyArrayOutput)
}

// Relative discount specific fields
func (o CartDiscountValueOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *int { return v.Permyriad }).(pulumi.IntPtrOutput)
}

// ResourceIdentifier of a Product. Required when value type is giftLineItem
func (o CartDiscountValueOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.ProductId }).(pulumi.StringPtrOutput)
}

// Channel must have the role InventorySupply. Optional when value type is giftLineItem
func (o CartDiscountValueOutput) SupplyChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.SupplyChannelId }).(pulumi.StringPtrOutput)
}

// Currently supports absolute/relative/giftLineItem
func (o CartDiscountValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountValue) string { return v.Type }).(pulumi.StringOutput)
}

// ProductVariant of the Product. Required when value type is giftLineItem
func (o CartDiscountValueOutput) VariantId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *int { return v.VariantId }).(pulumi.IntPtrOutput)
}

type CartDiscountValuePtrOutput struct{ *pulumi.OutputState }

func (CartDiscountValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountValue)(nil)).Elem()
}

func (o CartDiscountValuePtrOutput) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return o
}

func (o CartDiscountValuePtrOutput) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return o
}

func (o CartDiscountValuePtrOutput) Elem() CartDiscountValueOutput {
	return o.ApplyT(func(v *CartDiscountValue) CartDiscountValue {
		if v != nil {
			return *v
		}
		var ret CartDiscountValue
		return ret
	}).(CartDiscountValueOutput)
}

// Channel must have the role ProductDistribution. Optional when value type is giftLineItem
func (o CartDiscountValuePtrOutput) DistributionChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.DistributionChannelId
	}).(pulumi.StringPtrOutput)
}

// Absolute discount specific fields
func (o CartDiscountValuePtrOutput) Monies() CartDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v *CartDiscountValue) []CartDiscountValueMoney {
		if v == nil {
			return nil
		}
		return v.Monies
	}).(CartDiscountValueMoneyArrayOutput)
}

// Relative discount specific fields
func (o CartDiscountValuePtrOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *int {
		if v == nil {
			return nil
		}
		return v.Permyriad
	}).(pulumi.IntPtrOutput)
}

// ResourceIdentifier of a Product. Required when value type is giftLineItem
func (o CartDiscountValuePtrOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.ProductId
	}).(pulumi.StringPtrOutput)
}

// Channel must have the role InventorySupply. Optional when value type is giftLineItem
func (o CartDiscountValuePtrOutput) SupplyChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.SupplyChannelId
	}).(pulumi.StringPtrOutput)
}

// Currently supports absolute/relative/giftLineItem
func (o CartDiscountValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// ProductVariant of the Product. Required when value type is giftLineItem
func (o CartDiscountValuePtrOutput) VariantId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *int {
		if v == nil {
			return nil
		}
		return v.VariantId
	}).(pulumi.IntPtrOutput)
}

type CartDiscountValueMoney struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount int `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode string `pulumi:"currencyCode"`
}

// CartDiscountValueMoneyInput is an input type that accepts CartDiscountValueMoneyArgs and CartDiscountValueMoneyOutput values.
// You can construct a concrete instance of `CartDiscountValueMoneyInput` via:
//
//	CartDiscountValueMoneyArgs{...}
type CartDiscountValueMoneyInput interface {
	pulumi.Input

	ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput
	ToCartDiscountValueMoneyOutputWithContext(context.Context) CartDiscountValueMoneyOutput
}

type CartDiscountValueMoneyArgs struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount pulumi.IntInput `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (CartDiscountValueMoneyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValueMoney)(nil)).Elem()
}

func (i CartDiscountValueMoneyArgs) ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput {
	return i.ToCartDiscountValueMoneyOutputWithContext(context.Background())
}

func (i CartDiscountValueMoneyArgs) ToCartDiscountValueMoneyOutputWithContext(ctx context.Context) CartDiscountValueMoneyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueMoneyOutput)
}

// CartDiscountValueMoneyArrayInput is an input type that accepts CartDiscountValueMoneyArray and CartDiscountValueMoneyArrayOutput values.
// You can construct a concrete instance of `CartDiscountValueMoneyArrayInput` via:
//
//	CartDiscountValueMoneyArray{ CartDiscountValueMoneyArgs{...} }
type CartDiscountValueMoneyArrayInput interface {
	pulumi.Input

	ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput
	ToCartDiscountValueMoneyArrayOutputWithContext(context.Context) CartDiscountValueMoneyArrayOutput
}

type CartDiscountValueMoneyArray []CartDiscountValueMoneyInput

func (CartDiscountValueMoneyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CartDiscountValueMoney)(nil)).Elem()
}

func (i CartDiscountValueMoneyArray) ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput {
	return i.ToCartDiscountValueMoneyArrayOutputWithContext(context.Background())
}

func (i CartDiscountValueMoneyArray) ToCartDiscountValueMoneyArrayOutputWithContext(ctx context.Context) CartDiscountValueMoneyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueMoneyArrayOutput)
}

type CartDiscountValueMoneyOutput struct{ *pulumi.OutputState }

func (CartDiscountValueMoneyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValueMoney)(nil)).Elem()
}

func (o CartDiscountValueMoneyOutput) ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput {
	return o
}

func (o CartDiscountValueMoneyOutput) ToCartDiscountValueMoneyOutputWithContext(ctx context.Context) CartDiscountValueMoneyOutput {
	return o
}

// The amount in cents (the smallest indivisible unit of the currency)
func (o CartDiscountValueMoneyOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v CartDiscountValueMoney) int { return v.CentAmount }).(pulumi.IntOutput)
}

// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
func (o CartDiscountValueMoneyOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountValueMoney) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type CartDiscountValueMoneyArrayOutput struct{ *pulumi.OutputState }

func (CartDiscountValueMoneyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CartDiscountValueMoney)(nil)).Elem()
}

func (o CartDiscountValueMoneyArrayOutput) ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput {
	return o
}

func (o CartDiscountValueMoneyArrayOutput) ToCartDiscountValueMoneyArrayOutputWithContext(ctx context.Context) CartDiscountValueMoneyArrayOutput {
	return o
}

func (o CartDiscountValueMoneyArrayOutput) Index(i pulumi.IntInput) CartDiscountValueMoneyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CartDiscountValueMoney {
		return vs[0].([]CartDiscountValueMoney)[vs[1].(int)]
	}).(CartDiscountValueMoneyOutput)
}

type CategoryAsset struct {
	Description map[string]interface{} `pulumi:"description"`
	Id          *string                `pulumi:"id"`
	// Optional User-defined identifier for the asset. Asset keys are unique inside their container (in this case the category)
	Key  *string                `pulumi:"key"`
	Name map[string]interface{} `pulumi:"name"`
	// Array of AssetSource, Has at least one entry
	Sources []CategoryAssetSource `pulumi:"sources"`
	Tags    []string              `pulumi:"tags"`
}

// CategoryAssetInput is an input type that accepts CategoryAssetArgs and CategoryAssetOutput values.
// You can construct a concrete instance of `CategoryAssetInput` via:
//
//	CategoryAssetArgs{...}
type CategoryAssetInput interface {
	pulumi.Input

	ToCategoryAssetOutput() CategoryAssetOutput
	ToCategoryAssetOutputWithContext(context.Context) CategoryAssetOutput
}

type CategoryAssetArgs struct {
	Description pulumi.MapInput       `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Optional User-defined identifier for the asset. Asset keys are unique inside their container (in this case the category)
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Name pulumi.MapInput       `pulumi:"name"`
	// Array of AssetSource, Has at least one entry
	Sources CategoryAssetSourceArrayInput `pulumi:"sources"`
	Tags    pulumi.StringArrayInput       `pulumi:"tags"`
}

func (CategoryAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAsset)(nil)).Elem()
}

func (i CategoryAssetArgs) ToCategoryAssetOutput() CategoryAssetOutput {
	return i.ToCategoryAssetOutputWithContext(context.Background())
}

func (i CategoryAssetArgs) ToCategoryAssetOutputWithContext(ctx context.Context) CategoryAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetOutput)
}

// CategoryAssetArrayInput is an input type that accepts CategoryAssetArray and CategoryAssetArrayOutput values.
// You can construct a concrete instance of `CategoryAssetArrayInput` via:
//
//	CategoryAssetArray{ CategoryAssetArgs{...} }
type CategoryAssetArrayInput interface {
	pulumi.Input

	ToCategoryAssetArrayOutput() CategoryAssetArrayOutput
	ToCategoryAssetArrayOutputWithContext(context.Context) CategoryAssetArrayOutput
}

type CategoryAssetArray []CategoryAssetInput

func (CategoryAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CategoryAsset)(nil)).Elem()
}

func (i CategoryAssetArray) ToCategoryAssetArrayOutput() CategoryAssetArrayOutput {
	return i.ToCategoryAssetArrayOutputWithContext(context.Background())
}

func (i CategoryAssetArray) ToCategoryAssetArrayOutputWithContext(ctx context.Context) CategoryAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetArrayOutput)
}

type CategoryAssetOutput struct{ *pulumi.OutputState }

func (CategoryAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAsset)(nil)).Elem()
}

func (o CategoryAssetOutput) ToCategoryAssetOutput() CategoryAssetOutput {
	return o
}

func (o CategoryAssetOutput) ToCategoryAssetOutputWithContext(ctx context.Context) CategoryAssetOutput {
	return o
}

func (o CategoryAssetOutput) Description() pulumi.MapOutput {
	return o.ApplyT(func(v CategoryAsset) map[string]interface{} { return v.Description }).(pulumi.MapOutput)
}

func (o CategoryAssetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryAsset) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Optional User-defined identifier for the asset. Asset keys are unique inside their container (in this case the category)
func (o CategoryAssetOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryAsset) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o CategoryAssetOutput) Name() pulumi.MapOutput {
	return o.ApplyT(func(v CategoryAsset) map[string]interface{} { return v.Name }).(pulumi.MapOutput)
}

// Array of AssetSource, Has at least one entry
func (o CategoryAssetOutput) Sources() CategoryAssetSourceArrayOutput {
	return o.ApplyT(func(v CategoryAsset) []CategoryAssetSource { return v.Sources }).(CategoryAssetSourceArrayOutput)
}

func (o CategoryAssetOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CategoryAsset) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type CategoryAssetArrayOutput struct{ *pulumi.OutputState }

func (CategoryAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CategoryAsset)(nil)).Elem()
}

func (o CategoryAssetArrayOutput) ToCategoryAssetArrayOutput() CategoryAssetArrayOutput {
	return o
}

func (o CategoryAssetArrayOutput) ToCategoryAssetArrayOutputWithContext(ctx context.Context) CategoryAssetArrayOutput {
	return o
}

func (o CategoryAssetArrayOutput) Index(i pulumi.IntInput) CategoryAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CategoryAsset {
		return vs[0].([]CategoryAsset)[vs[1].(int)]
	}).(CategoryAssetOutput)
}

type CategoryAssetSource struct {
	ContentType *string                        `pulumi:"contentType"`
	Dimensions  *CategoryAssetSourceDimensions `pulumi:"dimensions"`
	// Unique identifier, must be unique within the Asset
	Key *string `pulumi:"key"`
	Uri string  `pulumi:"uri"`
}

// CategoryAssetSourceInput is an input type that accepts CategoryAssetSourceArgs and CategoryAssetSourceOutput values.
// You can construct a concrete instance of `CategoryAssetSourceInput` via:
//
//	CategoryAssetSourceArgs{...}
type CategoryAssetSourceInput interface {
	pulumi.Input

	ToCategoryAssetSourceOutput() CategoryAssetSourceOutput
	ToCategoryAssetSourceOutputWithContext(context.Context) CategoryAssetSourceOutput
}

type CategoryAssetSourceArgs struct {
	ContentType pulumi.StringPtrInput                 `pulumi:"contentType"`
	Dimensions  CategoryAssetSourceDimensionsPtrInput `pulumi:"dimensions"`
	// Unique identifier, must be unique within the Asset
	Key pulumi.StringPtrInput `pulumi:"key"`
	Uri pulumi.StringInput    `pulumi:"uri"`
}

func (CategoryAssetSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAssetSource)(nil)).Elem()
}

func (i CategoryAssetSourceArgs) ToCategoryAssetSourceOutput() CategoryAssetSourceOutput {
	return i.ToCategoryAssetSourceOutputWithContext(context.Background())
}

func (i CategoryAssetSourceArgs) ToCategoryAssetSourceOutputWithContext(ctx context.Context) CategoryAssetSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetSourceOutput)
}

// CategoryAssetSourceArrayInput is an input type that accepts CategoryAssetSourceArray and CategoryAssetSourceArrayOutput values.
// You can construct a concrete instance of `CategoryAssetSourceArrayInput` via:
//
//	CategoryAssetSourceArray{ CategoryAssetSourceArgs{...} }
type CategoryAssetSourceArrayInput interface {
	pulumi.Input

	ToCategoryAssetSourceArrayOutput() CategoryAssetSourceArrayOutput
	ToCategoryAssetSourceArrayOutputWithContext(context.Context) CategoryAssetSourceArrayOutput
}

type CategoryAssetSourceArray []CategoryAssetSourceInput

func (CategoryAssetSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CategoryAssetSource)(nil)).Elem()
}

func (i CategoryAssetSourceArray) ToCategoryAssetSourceArrayOutput() CategoryAssetSourceArrayOutput {
	return i.ToCategoryAssetSourceArrayOutputWithContext(context.Background())
}

func (i CategoryAssetSourceArray) ToCategoryAssetSourceArrayOutputWithContext(ctx context.Context) CategoryAssetSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetSourceArrayOutput)
}

type CategoryAssetSourceOutput struct{ *pulumi.OutputState }

func (CategoryAssetSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAssetSource)(nil)).Elem()
}

func (o CategoryAssetSourceOutput) ToCategoryAssetSourceOutput() CategoryAssetSourceOutput {
	return o
}

func (o CategoryAssetSourceOutput) ToCategoryAssetSourceOutputWithContext(ctx context.Context) CategoryAssetSourceOutput {
	return o
}

func (o CategoryAssetSourceOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryAssetSource) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o CategoryAssetSourceOutput) Dimensions() CategoryAssetSourceDimensionsPtrOutput {
	return o.ApplyT(func(v CategoryAssetSource) *CategoryAssetSourceDimensions { return v.Dimensions }).(CategoryAssetSourceDimensionsPtrOutput)
}

// Unique identifier, must be unique within the Asset
func (o CategoryAssetSourceOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryAssetSource) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o CategoryAssetSourceOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CategoryAssetSource) string { return v.Uri }).(pulumi.StringOutput)
}

type CategoryAssetSourceArrayOutput struct{ *pulumi.OutputState }

func (CategoryAssetSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CategoryAssetSource)(nil)).Elem()
}

func (o CategoryAssetSourceArrayOutput) ToCategoryAssetSourceArrayOutput() CategoryAssetSourceArrayOutput {
	return o
}

func (o CategoryAssetSourceArrayOutput) ToCategoryAssetSourceArrayOutputWithContext(ctx context.Context) CategoryAssetSourceArrayOutput {
	return o
}

func (o CategoryAssetSourceArrayOutput) Index(i pulumi.IntInput) CategoryAssetSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CategoryAssetSource {
		return vs[0].([]CategoryAssetSource)[vs[1].(int)]
	}).(CategoryAssetSourceOutput)
}

type CategoryAssetSourceDimensions struct {
	// The height of the asset source
	H int `pulumi:"h"`
	// The width of the asset source
	W int `pulumi:"w"`
}

// CategoryAssetSourceDimensionsInput is an input type that accepts CategoryAssetSourceDimensionsArgs and CategoryAssetSourceDimensionsOutput values.
// You can construct a concrete instance of `CategoryAssetSourceDimensionsInput` via:
//
//	CategoryAssetSourceDimensionsArgs{...}
type CategoryAssetSourceDimensionsInput interface {
	pulumi.Input

	ToCategoryAssetSourceDimensionsOutput() CategoryAssetSourceDimensionsOutput
	ToCategoryAssetSourceDimensionsOutputWithContext(context.Context) CategoryAssetSourceDimensionsOutput
}

type CategoryAssetSourceDimensionsArgs struct {
	// The height of the asset source
	H pulumi.IntInput `pulumi:"h"`
	// The width of the asset source
	W pulumi.IntInput `pulumi:"w"`
}

func (CategoryAssetSourceDimensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAssetSourceDimensions)(nil)).Elem()
}

func (i CategoryAssetSourceDimensionsArgs) ToCategoryAssetSourceDimensionsOutput() CategoryAssetSourceDimensionsOutput {
	return i.ToCategoryAssetSourceDimensionsOutputWithContext(context.Background())
}

func (i CategoryAssetSourceDimensionsArgs) ToCategoryAssetSourceDimensionsOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetSourceDimensionsOutput)
}

func (i CategoryAssetSourceDimensionsArgs) ToCategoryAssetSourceDimensionsPtrOutput() CategoryAssetSourceDimensionsPtrOutput {
	return i.ToCategoryAssetSourceDimensionsPtrOutputWithContext(context.Background())
}

func (i CategoryAssetSourceDimensionsArgs) ToCategoryAssetSourceDimensionsPtrOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetSourceDimensionsOutput).ToCategoryAssetSourceDimensionsPtrOutputWithContext(ctx)
}

// CategoryAssetSourceDimensionsPtrInput is an input type that accepts CategoryAssetSourceDimensionsArgs, CategoryAssetSourceDimensionsPtr and CategoryAssetSourceDimensionsPtrOutput values.
// You can construct a concrete instance of `CategoryAssetSourceDimensionsPtrInput` via:
//
//	        CategoryAssetSourceDimensionsArgs{...}
//
//	or:
//
//	        nil
type CategoryAssetSourceDimensionsPtrInput interface {
	pulumi.Input

	ToCategoryAssetSourceDimensionsPtrOutput() CategoryAssetSourceDimensionsPtrOutput
	ToCategoryAssetSourceDimensionsPtrOutputWithContext(context.Context) CategoryAssetSourceDimensionsPtrOutput
}

type categoryAssetSourceDimensionsPtrType CategoryAssetSourceDimensionsArgs

func CategoryAssetSourceDimensionsPtr(v *CategoryAssetSourceDimensionsArgs) CategoryAssetSourceDimensionsPtrInput {
	return (*categoryAssetSourceDimensionsPtrType)(v)
}

func (*categoryAssetSourceDimensionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CategoryAssetSourceDimensions)(nil)).Elem()
}

func (i *categoryAssetSourceDimensionsPtrType) ToCategoryAssetSourceDimensionsPtrOutput() CategoryAssetSourceDimensionsPtrOutput {
	return i.ToCategoryAssetSourceDimensionsPtrOutputWithContext(context.Background())
}

func (i *categoryAssetSourceDimensionsPtrType) ToCategoryAssetSourceDimensionsPtrOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryAssetSourceDimensionsPtrOutput)
}

type CategoryAssetSourceDimensionsOutput struct{ *pulumi.OutputState }

func (CategoryAssetSourceDimensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryAssetSourceDimensions)(nil)).Elem()
}

func (o CategoryAssetSourceDimensionsOutput) ToCategoryAssetSourceDimensionsOutput() CategoryAssetSourceDimensionsOutput {
	return o
}

func (o CategoryAssetSourceDimensionsOutput) ToCategoryAssetSourceDimensionsOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsOutput {
	return o
}

func (o CategoryAssetSourceDimensionsOutput) ToCategoryAssetSourceDimensionsPtrOutput() CategoryAssetSourceDimensionsPtrOutput {
	return o.ToCategoryAssetSourceDimensionsPtrOutputWithContext(context.Background())
}

func (o CategoryAssetSourceDimensionsOutput) ToCategoryAssetSourceDimensionsPtrOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CategoryAssetSourceDimensions) *CategoryAssetSourceDimensions {
		return &v
	}).(CategoryAssetSourceDimensionsPtrOutput)
}

// The height of the asset source
func (o CategoryAssetSourceDimensionsOutput) H() pulumi.IntOutput {
	return o.ApplyT(func(v CategoryAssetSourceDimensions) int { return v.H }).(pulumi.IntOutput)
}

// The width of the asset source
func (o CategoryAssetSourceDimensionsOutput) W() pulumi.IntOutput {
	return o.ApplyT(func(v CategoryAssetSourceDimensions) int { return v.W }).(pulumi.IntOutput)
}

type CategoryAssetSourceDimensionsPtrOutput struct{ *pulumi.OutputState }

func (CategoryAssetSourceDimensionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CategoryAssetSourceDimensions)(nil)).Elem()
}

func (o CategoryAssetSourceDimensionsPtrOutput) ToCategoryAssetSourceDimensionsPtrOutput() CategoryAssetSourceDimensionsPtrOutput {
	return o
}

func (o CategoryAssetSourceDimensionsPtrOutput) ToCategoryAssetSourceDimensionsPtrOutputWithContext(ctx context.Context) CategoryAssetSourceDimensionsPtrOutput {
	return o
}

func (o CategoryAssetSourceDimensionsPtrOutput) Elem() CategoryAssetSourceDimensionsOutput {
	return o.ApplyT(func(v *CategoryAssetSourceDimensions) CategoryAssetSourceDimensions {
		if v != nil {
			return *v
		}
		var ret CategoryAssetSourceDimensions
		return ret
	}).(CategoryAssetSourceDimensionsOutput)
}

// The height of the asset source
func (o CategoryAssetSourceDimensionsPtrOutput) H() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CategoryAssetSourceDimensions) *int {
		if v == nil {
			return nil
		}
		return &v.H
	}).(pulumi.IntPtrOutput)
}

// The width of the asset source
func (o CategoryAssetSourceDimensionsPtrOutput) W() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CategoryAssetSourceDimensions) *int {
		if v == nil {
			return nil
		}
		return &v.W
	}).(pulumi.IntPtrOutput)
}

type CategoryCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// CategoryCustomInput is an input type that accepts CategoryCustomArgs and CategoryCustomOutput values.
// You can construct a concrete instance of `CategoryCustomInput` via:
//
//	CategoryCustomArgs{...}
type CategoryCustomInput interface {
	pulumi.Input

	ToCategoryCustomOutput() CategoryCustomOutput
	ToCategoryCustomOutputWithContext(context.Context) CategoryCustomOutput
}

type CategoryCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (CategoryCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryCustom)(nil)).Elem()
}

func (i CategoryCustomArgs) ToCategoryCustomOutput() CategoryCustomOutput {
	return i.ToCategoryCustomOutputWithContext(context.Background())
}

func (i CategoryCustomArgs) ToCategoryCustomOutputWithContext(ctx context.Context) CategoryCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryCustomOutput)
}

func (i CategoryCustomArgs) ToCategoryCustomPtrOutput() CategoryCustomPtrOutput {
	return i.ToCategoryCustomPtrOutputWithContext(context.Background())
}

func (i CategoryCustomArgs) ToCategoryCustomPtrOutputWithContext(ctx context.Context) CategoryCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryCustomOutput).ToCategoryCustomPtrOutputWithContext(ctx)
}

// CategoryCustomPtrInput is an input type that accepts CategoryCustomArgs, CategoryCustomPtr and CategoryCustomPtrOutput values.
// You can construct a concrete instance of `CategoryCustomPtrInput` via:
//
//	        CategoryCustomArgs{...}
//
//	or:
//
//	        nil
type CategoryCustomPtrInput interface {
	pulumi.Input

	ToCategoryCustomPtrOutput() CategoryCustomPtrOutput
	ToCategoryCustomPtrOutputWithContext(context.Context) CategoryCustomPtrOutput
}

type categoryCustomPtrType CategoryCustomArgs

func CategoryCustomPtr(v *CategoryCustomArgs) CategoryCustomPtrInput {
	return (*categoryCustomPtrType)(v)
}

func (*categoryCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CategoryCustom)(nil)).Elem()
}

func (i *categoryCustomPtrType) ToCategoryCustomPtrOutput() CategoryCustomPtrOutput {
	return i.ToCategoryCustomPtrOutputWithContext(context.Background())
}

func (i *categoryCustomPtrType) ToCategoryCustomPtrOutputWithContext(ctx context.Context) CategoryCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CategoryCustomPtrOutput)
}

type CategoryCustomOutput struct{ *pulumi.OutputState }

func (CategoryCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryCustom)(nil)).Elem()
}

func (o CategoryCustomOutput) ToCategoryCustomOutput() CategoryCustomOutput {
	return o
}

func (o CategoryCustomOutput) ToCategoryCustomOutputWithContext(ctx context.Context) CategoryCustomOutput {
	return o
}

func (o CategoryCustomOutput) ToCategoryCustomPtrOutput() CategoryCustomPtrOutput {
	return o.ToCategoryCustomPtrOutputWithContext(context.Background())
}

func (o CategoryCustomOutput) ToCategoryCustomPtrOutputWithContext(ctx context.Context) CategoryCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CategoryCustom) *CategoryCustom {
		return &v
	}).(CategoryCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CategoryCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v CategoryCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o CategoryCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v CategoryCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type CategoryCustomPtrOutput struct{ *pulumi.OutputState }

func (CategoryCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CategoryCustom)(nil)).Elem()
}

func (o CategoryCustomPtrOutput) ToCategoryCustomPtrOutput() CategoryCustomPtrOutput {
	return o
}

func (o CategoryCustomPtrOutput) ToCategoryCustomPtrOutputWithContext(ctx context.Context) CategoryCustomPtrOutput {
	return o
}

func (o CategoryCustomPtrOutput) Elem() CategoryCustomOutput {
	return o.ApplyT(func(v *CategoryCustom) CategoryCustom {
		if v != nil {
			return *v
		}
		var ret CategoryCustom
		return ret
	}).(CategoryCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CategoryCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *CategoryCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o CategoryCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CategoryCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type ChannelAddress struct {
	AdditionalAddressInfo *string `pulumi:"additionalAddressInfo"`
	AdditionalStreetInfo  *string `pulumi:"additionalStreetInfo"`
	Apartment             *string `pulumi:"apartment"`
	Building              *string `pulumi:"building"`
	City                  *string `pulumi:"city"`
	Company               *string `pulumi:"company"`
	Country               string  `pulumi:"country"`
	Department            *string `pulumi:"department"`
	Email                 *string `pulumi:"email"`
	ExternalId            *string `pulumi:"externalId"`
	Fax                   *string `pulumi:"fax"`
	FirstName             *string `pulumi:"firstName"`
	Id                    *string `pulumi:"id"`
	Key                   *string `pulumi:"key"`
	LastName              *string `pulumi:"lastName"`
	Mobile                *string `pulumi:"mobile"`
	Phone                 *string `pulumi:"phone"`
	PoBox                 *string `pulumi:"poBox"`
	PostalCode            *string `pulumi:"postalCode"`
	Region                *string `pulumi:"region"`
	Salutation            *string `pulumi:"salutation"`
	State                 *string `pulumi:"state"`
	StreetName            *string `pulumi:"streetName"`
	StreetNumber          *string `pulumi:"streetNumber"`
	Title                 *string `pulumi:"title"`
}

// ChannelAddressInput is an input type that accepts ChannelAddressArgs and ChannelAddressOutput values.
// You can construct a concrete instance of `ChannelAddressInput` via:
//
//	ChannelAddressArgs{...}
type ChannelAddressInput interface {
	pulumi.Input

	ToChannelAddressOutput() ChannelAddressOutput
	ToChannelAddressOutputWithContext(context.Context) ChannelAddressOutput
}

type ChannelAddressArgs struct {
	AdditionalAddressInfo pulumi.StringPtrInput `pulumi:"additionalAddressInfo"`
	AdditionalStreetInfo  pulumi.StringPtrInput `pulumi:"additionalStreetInfo"`
	Apartment             pulumi.StringPtrInput `pulumi:"apartment"`
	Building              pulumi.StringPtrInput `pulumi:"building"`
	City                  pulumi.StringPtrInput `pulumi:"city"`
	Company               pulumi.StringPtrInput `pulumi:"company"`
	Country               pulumi.StringInput    `pulumi:"country"`
	Department            pulumi.StringPtrInput `pulumi:"department"`
	Email                 pulumi.StringPtrInput `pulumi:"email"`
	ExternalId            pulumi.StringPtrInput `pulumi:"externalId"`
	Fax                   pulumi.StringPtrInput `pulumi:"fax"`
	FirstName             pulumi.StringPtrInput `pulumi:"firstName"`
	Id                    pulumi.StringPtrInput `pulumi:"id"`
	Key                   pulumi.StringPtrInput `pulumi:"key"`
	LastName              pulumi.StringPtrInput `pulumi:"lastName"`
	Mobile                pulumi.StringPtrInput `pulumi:"mobile"`
	Phone                 pulumi.StringPtrInput `pulumi:"phone"`
	PoBox                 pulumi.StringPtrInput `pulumi:"poBox"`
	PostalCode            pulumi.StringPtrInput `pulumi:"postalCode"`
	Region                pulumi.StringPtrInput `pulumi:"region"`
	Salutation            pulumi.StringPtrInput `pulumi:"salutation"`
	State                 pulumi.StringPtrInput `pulumi:"state"`
	StreetName            pulumi.StringPtrInput `pulumi:"streetName"`
	StreetNumber          pulumi.StringPtrInput `pulumi:"streetNumber"`
	Title                 pulumi.StringPtrInput `pulumi:"title"`
}

func (ChannelAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAddress)(nil)).Elem()
}

func (i ChannelAddressArgs) ToChannelAddressOutput() ChannelAddressOutput {
	return i.ToChannelAddressOutputWithContext(context.Background())
}

func (i ChannelAddressArgs) ToChannelAddressOutputWithContext(ctx context.Context) ChannelAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAddressOutput)
}

func (i ChannelAddressArgs) ToChannelAddressPtrOutput() ChannelAddressPtrOutput {
	return i.ToChannelAddressPtrOutputWithContext(context.Background())
}

func (i ChannelAddressArgs) ToChannelAddressPtrOutputWithContext(ctx context.Context) ChannelAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAddressOutput).ToChannelAddressPtrOutputWithContext(ctx)
}

// ChannelAddressPtrInput is an input type that accepts ChannelAddressArgs, ChannelAddressPtr and ChannelAddressPtrOutput values.
// You can construct a concrete instance of `ChannelAddressPtrInput` via:
//
//	        ChannelAddressArgs{...}
//
//	or:
//
//	        nil
type ChannelAddressPtrInput interface {
	pulumi.Input

	ToChannelAddressPtrOutput() ChannelAddressPtrOutput
	ToChannelAddressPtrOutputWithContext(context.Context) ChannelAddressPtrOutput
}

type channelAddressPtrType ChannelAddressArgs

func ChannelAddressPtr(v *ChannelAddressArgs) ChannelAddressPtrInput {
	return (*channelAddressPtrType)(v)
}

func (*channelAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAddress)(nil)).Elem()
}

func (i *channelAddressPtrType) ToChannelAddressPtrOutput() ChannelAddressPtrOutput {
	return i.ToChannelAddressPtrOutputWithContext(context.Background())
}

func (i *channelAddressPtrType) ToChannelAddressPtrOutputWithContext(ctx context.Context) ChannelAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAddressPtrOutput)
}

type ChannelAddressOutput struct{ *pulumi.OutputState }

func (ChannelAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAddress)(nil)).Elem()
}

func (o ChannelAddressOutput) ToChannelAddressOutput() ChannelAddressOutput {
	return o
}

func (o ChannelAddressOutput) ToChannelAddressOutputWithContext(ctx context.Context) ChannelAddressOutput {
	return o
}

func (o ChannelAddressOutput) ToChannelAddressPtrOutput() ChannelAddressPtrOutput {
	return o.ToChannelAddressPtrOutputWithContext(context.Background())
}

func (o ChannelAddressOutput) ToChannelAddressPtrOutputWithContext(ctx context.Context) ChannelAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAddress) *ChannelAddress {
		return &v
	}).(ChannelAddressPtrOutput)
}

func (o ChannelAddressOutput) AdditionalAddressInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.AdditionalAddressInfo }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) AdditionalStreetInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.AdditionalStreetInfo }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Apartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Apartment }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Building }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Company }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelAddress) string { return v.Country }).(pulumi.StringOutput)
}

func (o ChannelAddressOutput) Department() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Department }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Fax }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) PoBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.PoBox }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Salutation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Salutation }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) StreetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.StreetName }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) StreetNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.StreetNumber }).(pulumi.StringPtrOutput)
}

func (o ChannelAddressOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAddress) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ChannelAddressPtrOutput struct{ *pulumi.OutputState }

func (ChannelAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAddress)(nil)).Elem()
}

func (o ChannelAddressPtrOutput) ToChannelAddressPtrOutput() ChannelAddressPtrOutput {
	return o
}

func (o ChannelAddressPtrOutput) ToChannelAddressPtrOutputWithContext(ctx context.Context) ChannelAddressPtrOutput {
	return o
}

func (o ChannelAddressPtrOutput) Elem() ChannelAddressOutput {
	return o.ApplyT(func(v *ChannelAddress) ChannelAddress {
		if v != nil {
			return *v
		}
		var ret ChannelAddress
		return ret
	}).(ChannelAddressOutput)
}

func (o ChannelAddressPtrOutput) AdditionalAddressInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalAddressInfo
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) AdditionalStreetInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalStreetInfo
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Apartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Apartment
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Building
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Company
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Department() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Department
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Fax
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) PoBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.PoBox
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Salutation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Salutation
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) StreetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) StreetNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetNumber
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAddressPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAddress) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type ChannelCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// ChannelCustomInput is an input type that accepts ChannelCustomArgs and ChannelCustomOutput values.
// You can construct a concrete instance of `ChannelCustomInput` via:
//
//	ChannelCustomArgs{...}
type ChannelCustomInput interface {
	pulumi.Input

	ToChannelCustomOutput() ChannelCustomOutput
	ToChannelCustomOutputWithContext(context.Context) ChannelCustomOutput
}

type ChannelCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (ChannelCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustom)(nil)).Elem()
}

func (i ChannelCustomArgs) ToChannelCustomOutput() ChannelCustomOutput {
	return i.ToChannelCustomOutputWithContext(context.Background())
}

func (i ChannelCustomArgs) ToChannelCustomOutputWithContext(ctx context.Context) ChannelCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomOutput)
}

func (i ChannelCustomArgs) ToChannelCustomPtrOutput() ChannelCustomPtrOutput {
	return i.ToChannelCustomPtrOutputWithContext(context.Background())
}

func (i ChannelCustomArgs) ToChannelCustomPtrOutputWithContext(ctx context.Context) ChannelCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomOutput).ToChannelCustomPtrOutputWithContext(ctx)
}

// ChannelCustomPtrInput is an input type that accepts ChannelCustomArgs, ChannelCustomPtr and ChannelCustomPtrOutput values.
// You can construct a concrete instance of `ChannelCustomPtrInput` via:
//
//	        ChannelCustomArgs{...}
//
//	or:
//
//	        nil
type ChannelCustomPtrInput interface {
	pulumi.Input

	ToChannelCustomPtrOutput() ChannelCustomPtrOutput
	ToChannelCustomPtrOutputWithContext(context.Context) ChannelCustomPtrOutput
}

type channelCustomPtrType ChannelCustomArgs

func ChannelCustomPtr(v *ChannelCustomArgs) ChannelCustomPtrInput {
	return (*channelCustomPtrType)(v)
}

func (*channelCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustom)(nil)).Elem()
}

func (i *channelCustomPtrType) ToChannelCustomPtrOutput() ChannelCustomPtrOutput {
	return i.ToChannelCustomPtrOutputWithContext(context.Background())
}

func (i *channelCustomPtrType) ToChannelCustomPtrOutputWithContext(ctx context.Context) ChannelCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomPtrOutput)
}

type ChannelCustomOutput struct{ *pulumi.OutputState }

func (ChannelCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustom)(nil)).Elem()
}

func (o ChannelCustomOutput) ToChannelCustomOutput() ChannelCustomOutput {
	return o
}

func (o ChannelCustomOutput) ToChannelCustomOutputWithContext(ctx context.Context) ChannelCustomOutput {
	return o
}

func (o ChannelCustomOutput) ToChannelCustomPtrOutput() ChannelCustomPtrOutput {
	return o.ToChannelCustomPtrOutputWithContext(context.Background())
}

func (o ChannelCustomOutput) ToChannelCustomPtrOutputWithContext(ctx context.Context) ChannelCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCustom) *ChannelCustom {
		return &v
	}).(ChannelCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o ChannelCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v ChannelCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o ChannelCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type ChannelCustomPtrOutput struct{ *pulumi.OutputState }

func (ChannelCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustom)(nil)).Elem()
}

func (o ChannelCustomPtrOutput) ToChannelCustomPtrOutput() ChannelCustomPtrOutput {
	return o
}

func (o ChannelCustomPtrOutput) ToChannelCustomPtrOutputWithContext(ctx context.Context) ChannelCustomPtrOutput {
	return o
}

func (o ChannelCustomPtrOutput) Elem() ChannelCustomOutput {
	return o.ApplyT(func(v *ChannelCustom) ChannelCustom {
		if v != nil {
			return *v
		}
		var ret ChannelCustom
		return ret
	}).(ChannelCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o ChannelCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *ChannelCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o ChannelCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type ChannelGeolocation struct {
	Coordinates []float64 `pulumi:"coordinates"`
}

// ChannelGeolocationInput is an input type that accepts ChannelGeolocationArgs and ChannelGeolocationOutput values.
// You can construct a concrete instance of `ChannelGeolocationInput` via:
//
//	ChannelGeolocationArgs{...}
type ChannelGeolocationInput interface {
	pulumi.Input

	ToChannelGeolocationOutput() ChannelGeolocationOutput
	ToChannelGeolocationOutputWithContext(context.Context) ChannelGeolocationOutput
}

type ChannelGeolocationArgs struct {
	Coordinates pulumi.Float64ArrayInput `pulumi:"coordinates"`
}

func (ChannelGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelGeolocation)(nil)).Elem()
}

func (i ChannelGeolocationArgs) ToChannelGeolocationOutput() ChannelGeolocationOutput {
	return i.ToChannelGeolocationOutputWithContext(context.Background())
}

func (i ChannelGeolocationArgs) ToChannelGeolocationOutputWithContext(ctx context.Context) ChannelGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGeolocationOutput)
}

func (i ChannelGeolocationArgs) ToChannelGeolocationPtrOutput() ChannelGeolocationPtrOutput {
	return i.ToChannelGeolocationPtrOutputWithContext(context.Background())
}

func (i ChannelGeolocationArgs) ToChannelGeolocationPtrOutputWithContext(ctx context.Context) ChannelGeolocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGeolocationOutput).ToChannelGeolocationPtrOutputWithContext(ctx)
}

// ChannelGeolocationPtrInput is an input type that accepts ChannelGeolocationArgs, ChannelGeolocationPtr and ChannelGeolocationPtrOutput values.
// You can construct a concrete instance of `ChannelGeolocationPtrInput` via:
//
//	        ChannelGeolocationArgs{...}
//
//	or:
//
//	        nil
type ChannelGeolocationPtrInput interface {
	pulumi.Input

	ToChannelGeolocationPtrOutput() ChannelGeolocationPtrOutput
	ToChannelGeolocationPtrOutputWithContext(context.Context) ChannelGeolocationPtrOutput
}

type channelGeolocationPtrType ChannelGeolocationArgs

func ChannelGeolocationPtr(v *ChannelGeolocationArgs) ChannelGeolocationPtrInput {
	return (*channelGeolocationPtrType)(v)
}

func (*channelGeolocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelGeolocation)(nil)).Elem()
}

func (i *channelGeolocationPtrType) ToChannelGeolocationPtrOutput() ChannelGeolocationPtrOutput {
	return i.ToChannelGeolocationPtrOutputWithContext(context.Background())
}

func (i *channelGeolocationPtrType) ToChannelGeolocationPtrOutputWithContext(ctx context.Context) ChannelGeolocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGeolocationPtrOutput)
}

type ChannelGeolocationOutput struct{ *pulumi.OutputState }

func (ChannelGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelGeolocation)(nil)).Elem()
}

func (o ChannelGeolocationOutput) ToChannelGeolocationOutput() ChannelGeolocationOutput {
	return o
}

func (o ChannelGeolocationOutput) ToChannelGeolocationOutputWithContext(ctx context.Context) ChannelGeolocationOutput {
	return o
}

func (o ChannelGeolocationOutput) ToChannelGeolocationPtrOutput() ChannelGeolocationPtrOutput {
	return o.ToChannelGeolocationPtrOutputWithContext(context.Background())
}

func (o ChannelGeolocationOutput) ToChannelGeolocationPtrOutputWithContext(ctx context.Context) ChannelGeolocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelGeolocation) *ChannelGeolocation {
		return &v
	}).(ChannelGeolocationPtrOutput)
}

func (o ChannelGeolocationOutput) Coordinates() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v ChannelGeolocation) []float64 { return v.Coordinates }).(pulumi.Float64ArrayOutput)
}

type ChannelGeolocationPtrOutput struct{ *pulumi.OutputState }

func (ChannelGeolocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelGeolocation)(nil)).Elem()
}

func (o ChannelGeolocationPtrOutput) ToChannelGeolocationPtrOutput() ChannelGeolocationPtrOutput {
	return o
}

func (o ChannelGeolocationPtrOutput) ToChannelGeolocationPtrOutputWithContext(ctx context.Context) ChannelGeolocationPtrOutput {
	return o
}

func (o ChannelGeolocationPtrOutput) Elem() ChannelGeolocationOutput {
	return o.ApplyT(func(v *ChannelGeolocation) ChannelGeolocation {
		if v != nil {
			return *v
		}
		var ret ChannelGeolocation
		return ret
	}).(ChannelGeolocationOutput)
}

func (o ChannelGeolocationPtrOutput) Coordinates() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *ChannelGeolocation) []float64 {
		if v == nil {
			return nil
		}
		return v.Coordinates
	}).(pulumi.Float64ArrayOutput)
}

type CustomerGroupCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// CustomerGroupCustomInput is an input type that accepts CustomerGroupCustomArgs and CustomerGroupCustomOutput values.
// You can construct a concrete instance of `CustomerGroupCustomInput` via:
//
//	CustomerGroupCustomArgs{...}
type CustomerGroupCustomInput interface {
	pulumi.Input

	ToCustomerGroupCustomOutput() CustomerGroupCustomOutput
	ToCustomerGroupCustomOutputWithContext(context.Context) CustomerGroupCustomOutput
}

type CustomerGroupCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (CustomerGroupCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGroupCustom)(nil)).Elem()
}

func (i CustomerGroupCustomArgs) ToCustomerGroupCustomOutput() CustomerGroupCustomOutput {
	return i.ToCustomerGroupCustomOutputWithContext(context.Background())
}

func (i CustomerGroupCustomArgs) ToCustomerGroupCustomOutputWithContext(ctx context.Context) CustomerGroupCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGroupCustomOutput)
}

func (i CustomerGroupCustomArgs) ToCustomerGroupCustomPtrOutput() CustomerGroupCustomPtrOutput {
	return i.ToCustomerGroupCustomPtrOutputWithContext(context.Background())
}

func (i CustomerGroupCustomArgs) ToCustomerGroupCustomPtrOutputWithContext(ctx context.Context) CustomerGroupCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGroupCustomOutput).ToCustomerGroupCustomPtrOutputWithContext(ctx)
}

// CustomerGroupCustomPtrInput is an input type that accepts CustomerGroupCustomArgs, CustomerGroupCustomPtr and CustomerGroupCustomPtrOutput values.
// You can construct a concrete instance of `CustomerGroupCustomPtrInput` via:
//
//	        CustomerGroupCustomArgs{...}
//
//	or:
//
//	        nil
type CustomerGroupCustomPtrInput interface {
	pulumi.Input

	ToCustomerGroupCustomPtrOutput() CustomerGroupCustomPtrOutput
	ToCustomerGroupCustomPtrOutputWithContext(context.Context) CustomerGroupCustomPtrOutput
}

type customerGroupCustomPtrType CustomerGroupCustomArgs

func CustomerGroupCustomPtr(v *CustomerGroupCustomArgs) CustomerGroupCustomPtrInput {
	return (*customerGroupCustomPtrType)(v)
}

func (*customerGroupCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerGroupCustom)(nil)).Elem()
}

func (i *customerGroupCustomPtrType) ToCustomerGroupCustomPtrOutput() CustomerGroupCustomPtrOutput {
	return i.ToCustomerGroupCustomPtrOutputWithContext(context.Background())
}

func (i *customerGroupCustomPtrType) ToCustomerGroupCustomPtrOutputWithContext(ctx context.Context) CustomerGroupCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGroupCustomPtrOutput)
}

type CustomerGroupCustomOutput struct{ *pulumi.OutputState }

func (CustomerGroupCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGroupCustom)(nil)).Elem()
}

func (o CustomerGroupCustomOutput) ToCustomerGroupCustomOutput() CustomerGroupCustomOutput {
	return o
}

func (o CustomerGroupCustomOutput) ToCustomerGroupCustomOutputWithContext(ctx context.Context) CustomerGroupCustomOutput {
	return o
}

func (o CustomerGroupCustomOutput) ToCustomerGroupCustomPtrOutput() CustomerGroupCustomPtrOutput {
	return o.ToCustomerGroupCustomPtrOutputWithContext(context.Background())
}

func (o CustomerGroupCustomOutput) ToCustomerGroupCustomPtrOutputWithContext(ctx context.Context) CustomerGroupCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerGroupCustom) *CustomerGroupCustom {
		return &v
	}).(CustomerGroupCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CustomerGroupCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v CustomerGroupCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o CustomerGroupCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerGroupCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type CustomerGroupCustomPtrOutput struct{ *pulumi.OutputState }

func (CustomerGroupCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerGroupCustom)(nil)).Elem()
}

func (o CustomerGroupCustomPtrOutput) ToCustomerGroupCustomPtrOutput() CustomerGroupCustomPtrOutput {
	return o
}

func (o CustomerGroupCustomPtrOutput) ToCustomerGroupCustomPtrOutputWithContext(ctx context.Context) CustomerGroupCustomPtrOutput {
	return o
}

func (o CustomerGroupCustomPtrOutput) Elem() CustomerGroupCustomOutput {
	return o.ApplyT(func(v *CustomerGroupCustom) CustomerGroupCustom {
		if v != nil {
			return *v
		}
		var ret CustomerGroupCustom
		return ret
	}).(CustomerGroupCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o CustomerGroupCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *CustomerGroupCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o CustomerGroupCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerGroupCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type DiscountCodeCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// DiscountCodeCustomInput is an input type that accepts DiscountCodeCustomArgs and DiscountCodeCustomOutput values.
// You can construct a concrete instance of `DiscountCodeCustomInput` via:
//
//	DiscountCodeCustomArgs{...}
type DiscountCodeCustomInput interface {
	pulumi.Input

	ToDiscountCodeCustomOutput() DiscountCodeCustomOutput
	ToDiscountCodeCustomOutputWithContext(context.Context) DiscountCodeCustomOutput
}

type DiscountCodeCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (DiscountCodeCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountCodeCustom)(nil)).Elem()
}

func (i DiscountCodeCustomArgs) ToDiscountCodeCustomOutput() DiscountCodeCustomOutput {
	return i.ToDiscountCodeCustomOutputWithContext(context.Background())
}

func (i DiscountCodeCustomArgs) ToDiscountCodeCustomOutputWithContext(ctx context.Context) DiscountCodeCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscountCodeCustomOutput)
}

func (i DiscountCodeCustomArgs) ToDiscountCodeCustomPtrOutput() DiscountCodeCustomPtrOutput {
	return i.ToDiscountCodeCustomPtrOutputWithContext(context.Background())
}

func (i DiscountCodeCustomArgs) ToDiscountCodeCustomPtrOutputWithContext(ctx context.Context) DiscountCodeCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscountCodeCustomOutput).ToDiscountCodeCustomPtrOutputWithContext(ctx)
}

// DiscountCodeCustomPtrInput is an input type that accepts DiscountCodeCustomArgs, DiscountCodeCustomPtr and DiscountCodeCustomPtrOutput values.
// You can construct a concrete instance of `DiscountCodeCustomPtrInput` via:
//
//	        DiscountCodeCustomArgs{...}
//
//	or:
//
//	        nil
type DiscountCodeCustomPtrInput interface {
	pulumi.Input

	ToDiscountCodeCustomPtrOutput() DiscountCodeCustomPtrOutput
	ToDiscountCodeCustomPtrOutputWithContext(context.Context) DiscountCodeCustomPtrOutput
}

type discountCodeCustomPtrType DiscountCodeCustomArgs

func DiscountCodeCustomPtr(v *DiscountCodeCustomArgs) DiscountCodeCustomPtrInput {
	return (*discountCodeCustomPtrType)(v)
}

func (*discountCodeCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountCodeCustom)(nil)).Elem()
}

func (i *discountCodeCustomPtrType) ToDiscountCodeCustomPtrOutput() DiscountCodeCustomPtrOutput {
	return i.ToDiscountCodeCustomPtrOutputWithContext(context.Background())
}

func (i *discountCodeCustomPtrType) ToDiscountCodeCustomPtrOutputWithContext(ctx context.Context) DiscountCodeCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscountCodeCustomPtrOutput)
}

type DiscountCodeCustomOutput struct{ *pulumi.OutputState }

func (DiscountCodeCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountCodeCustom)(nil)).Elem()
}

func (o DiscountCodeCustomOutput) ToDiscountCodeCustomOutput() DiscountCodeCustomOutput {
	return o
}

func (o DiscountCodeCustomOutput) ToDiscountCodeCustomOutputWithContext(ctx context.Context) DiscountCodeCustomOutput {
	return o
}

func (o DiscountCodeCustomOutput) ToDiscountCodeCustomPtrOutput() DiscountCodeCustomPtrOutput {
	return o.ToDiscountCodeCustomPtrOutputWithContext(context.Background())
}

func (o DiscountCodeCustomOutput) ToDiscountCodeCustomPtrOutputWithContext(ctx context.Context) DiscountCodeCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountCodeCustom) *DiscountCodeCustom {
		return &v
	}).(DiscountCodeCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o DiscountCodeCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v DiscountCodeCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o DiscountCodeCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v DiscountCodeCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type DiscountCodeCustomPtrOutput struct{ *pulumi.OutputState }

func (DiscountCodeCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountCodeCustom)(nil)).Elem()
}

func (o DiscountCodeCustomPtrOutput) ToDiscountCodeCustomPtrOutput() DiscountCodeCustomPtrOutput {
	return o
}

func (o DiscountCodeCustomPtrOutput) ToDiscountCodeCustomPtrOutputWithContext(ctx context.Context) DiscountCodeCustomPtrOutput {
	return o
}

func (o DiscountCodeCustomPtrOutput) Elem() DiscountCodeCustomOutput {
	return o.ApplyT(func(v *DiscountCodeCustom) DiscountCodeCustom {
		if v != nil {
			return *v
		}
		var ret DiscountCodeCustom
		return ret
	}).(DiscountCodeCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o DiscountCodeCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *DiscountCodeCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o DiscountCodeCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscountCodeCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type ProductDiscountValue struct {
	// Absolute discount specific fields
	Monies []ProductDiscountValueMoney `pulumi:"monies"`
	// Relative discount specific fields
	Permyriad *int `pulumi:"permyriad"`
	// Currently supports absolute/relative/external
	Type string `pulumi:"type"`
}

// ProductDiscountValueInput is an input type that accepts ProductDiscountValueArgs and ProductDiscountValueOutput values.
// You can construct a concrete instance of `ProductDiscountValueInput` via:
//
//	ProductDiscountValueArgs{...}
type ProductDiscountValueInput interface {
	pulumi.Input

	ToProductDiscountValueOutput() ProductDiscountValueOutput
	ToProductDiscountValueOutputWithContext(context.Context) ProductDiscountValueOutput
}

type ProductDiscountValueArgs struct {
	// Absolute discount specific fields
	Monies ProductDiscountValueMoneyArrayInput `pulumi:"monies"`
	// Relative discount specific fields
	Permyriad pulumi.IntPtrInput `pulumi:"permyriad"`
	// Currently supports absolute/relative/external
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProductDiscountValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDiscountValue)(nil)).Elem()
}

func (i ProductDiscountValueArgs) ToProductDiscountValueOutput() ProductDiscountValueOutput {
	return i.ToProductDiscountValueOutputWithContext(context.Background())
}

func (i ProductDiscountValueArgs) ToProductDiscountValueOutputWithContext(ctx context.Context) ProductDiscountValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDiscountValueOutput)
}

func (i ProductDiscountValueArgs) ToProductDiscountValuePtrOutput() ProductDiscountValuePtrOutput {
	return i.ToProductDiscountValuePtrOutputWithContext(context.Background())
}

func (i ProductDiscountValueArgs) ToProductDiscountValuePtrOutputWithContext(ctx context.Context) ProductDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDiscountValueOutput).ToProductDiscountValuePtrOutputWithContext(ctx)
}

// ProductDiscountValuePtrInput is an input type that accepts ProductDiscountValueArgs, ProductDiscountValuePtr and ProductDiscountValuePtrOutput values.
// You can construct a concrete instance of `ProductDiscountValuePtrInput` via:
//
//	        ProductDiscountValueArgs{...}
//
//	or:
//
//	        nil
type ProductDiscountValuePtrInput interface {
	pulumi.Input

	ToProductDiscountValuePtrOutput() ProductDiscountValuePtrOutput
	ToProductDiscountValuePtrOutputWithContext(context.Context) ProductDiscountValuePtrOutput
}

type productDiscountValuePtrType ProductDiscountValueArgs

func ProductDiscountValuePtr(v *ProductDiscountValueArgs) ProductDiscountValuePtrInput {
	return (*productDiscountValuePtrType)(v)
}

func (*productDiscountValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDiscountValue)(nil)).Elem()
}

func (i *productDiscountValuePtrType) ToProductDiscountValuePtrOutput() ProductDiscountValuePtrOutput {
	return i.ToProductDiscountValuePtrOutputWithContext(context.Background())
}

func (i *productDiscountValuePtrType) ToProductDiscountValuePtrOutputWithContext(ctx context.Context) ProductDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDiscountValuePtrOutput)
}

type ProductDiscountValueOutput struct{ *pulumi.OutputState }

func (ProductDiscountValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDiscountValue)(nil)).Elem()
}

func (o ProductDiscountValueOutput) ToProductDiscountValueOutput() ProductDiscountValueOutput {
	return o
}

func (o ProductDiscountValueOutput) ToProductDiscountValueOutputWithContext(ctx context.Context) ProductDiscountValueOutput {
	return o
}

func (o ProductDiscountValueOutput) ToProductDiscountValuePtrOutput() ProductDiscountValuePtrOutput {
	return o.ToProductDiscountValuePtrOutputWithContext(context.Background())
}

func (o ProductDiscountValueOutput) ToProductDiscountValuePtrOutputWithContext(ctx context.Context) ProductDiscountValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProductDiscountValue) *ProductDiscountValue {
		return &v
	}).(ProductDiscountValuePtrOutput)
}

// Absolute discount specific fields
func (o ProductDiscountValueOutput) Monies() ProductDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v ProductDiscountValue) []ProductDiscountValueMoney { return v.Monies }).(ProductDiscountValueMoneyArrayOutput)
}

// Relative discount specific fields
func (o ProductDiscountValueOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductDiscountValue) *int { return v.Permyriad }).(pulumi.IntPtrOutput)
}

// Currently supports absolute/relative/external
func (o ProductDiscountValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductDiscountValue) string { return v.Type }).(pulumi.StringOutput)
}

type ProductDiscountValuePtrOutput struct{ *pulumi.OutputState }

func (ProductDiscountValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDiscountValue)(nil)).Elem()
}

func (o ProductDiscountValuePtrOutput) ToProductDiscountValuePtrOutput() ProductDiscountValuePtrOutput {
	return o
}

func (o ProductDiscountValuePtrOutput) ToProductDiscountValuePtrOutputWithContext(ctx context.Context) ProductDiscountValuePtrOutput {
	return o
}

func (o ProductDiscountValuePtrOutput) Elem() ProductDiscountValueOutput {
	return o.ApplyT(func(v *ProductDiscountValue) ProductDiscountValue {
		if v != nil {
			return *v
		}
		var ret ProductDiscountValue
		return ret
	}).(ProductDiscountValueOutput)
}

// Absolute discount specific fields
func (o ProductDiscountValuePtrOutput) Monies() ProductDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v *ProductDiscountValue) []ProductDiscountValueMoney {
		if v == nil {
			return nil
		}
		return v.Monies
	}).(ProductDiscountValueMoneyArrayOutput)
}

// Relative discount specific fields
func (o ProductDiscountValuePtrOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductDiscountValue) *int {
		if v == nil {
			return nil
		}
		return v.Permyriad
	}).(pulumi.IntPtrOutput)
}

// Currently supports absolute/relative/external
func (o ProductDiscountValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductDiscountValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProductDiscountValueMoney struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount int `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode string `pulumi:"currencyCode"`
	// The number of default fraction digits for the given currency, like 2 for EUR or 0 for JPY
	FractionDigits *int `pulumi:"fractionDigits"`
}

// ProductDiscountValueMoneyInput is an input type that accepts ProductDiscountValueMoneyArgs and ProductDiscountValueMoneyOutput values.
// You can construct a concrete instance of `ProductDiscountValueMoneyInput` via:
//
//	ProductDiscountValueMoneyArgs{...}
type ProductDiscountValueMoneyInput interface {
	pulumi.Input

	ToProductDiscountValueMoneyOutput() ProductDiscountValueMoneyOutput
	ToProductDiscountValueMoneyOutputWithContext(context.Context) ProductDiscountValueMoneyOutput
}

type ProductDiscountValueMoneyArgs struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount pulumi.IntInput `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// The number of default fraction digits for the given currency, like 2 for EUR or 0 for JPY
	FractionDigits pulumi.IntPtrInput `pulumi:"fractionDigits"`
}

func (ProductDiscountValueMoneyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDiscountValueMoney)(nil)).Elem()
}

func (i ProductDiscountValueMoneyArgs) ToProductDiscountValueMoneyOutput() ProductDiscountValueMoneyOutput {
	return i.ToProductDiscountValueMoneyOutputWithContext(context.Background())
}

func (i ProductDiscountValueMoneyArgs) ToProductDiscountValueMoneyOutputWithContext(ctx context.Context) ProductDiscountValueMoneyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDiscountValueMoneyOutput)
}

// ProductDiscountValueMoneyArrayInput is an input type that accepts ProductDiscountValueMoneyArray and ProductDiscountValueMoneyArrayOutput values.
// You can construct a concrete instance of `ProductDiscountValueMoneyArrayInput` via:
//
//	ProductDiscountValueMoneyArray{ ProductDiscountValueMoneyArgs{...} }
type ProductDiscountValueMoneyArrayInput interface {
	pulumi.Input

	ToProductDiscountValueMoneyArrayOutput() ProductDiscountValueMoneyArrayOutput
	ToProductDiscountValueMoneyArrayOutputWithContext(context.Context) ProductDiscountValueMoneyArrayOutput
}

type ProductDiscountValueMoneyArray []ProductDiscountValueMoneyInput

func (ProductDiscountValueMoneyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductDiscountValueMoney)(nil)).Elem()
}

func (i ProductDiscountValueMoneyArray) ToProductDiscountValueMoneyArrayOutput() ProductDiscountValueMoneyArrayOutput {
	return i.ToProductDiscountValueMoneyArrayOutputWithContext(context.Background())
}

func (i ProductDiscountValueMoneyArray) ToProductDiscountValueMoneyArrayOutputWithContext(ctx context.Context) ProductDiscountValueMoneyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDiscountValueMoneyArrayOutput)
}

type ProductDiscountValueMoneyOutput struct{ *pulumi.OutputState }

func (ProductDiscountValueMoneyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDiscountValueMoney)(nil)).Elem()
}

func (o ProductDiscountValueMoneyOutput) ToProductDiscountValueMoneyOutput() ProductDiscountValueMoneyOutput {
	return o
}

func (o ProductDiscountValueMoneyOutput) ToProductDiscountValueMoneyOutputWithContext(ctx context.Context) ProductDiscountValueMoneyOutput {
	return o
}

// The amount in cents (the smallest indivisible unit of the currency)
func (o ProductDiscountValueMoneyOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ProductDiscountValueMoney) int { return v.CentAmount }).(pulumi.IntOutput)
}

// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
func (o ProductDiscountValueMoneyOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ProductDiscountValueMoney) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// The number of default fraction digits for the given currency, like 2 for EUR or 0 for JPY
func (o ProductDiscountValueMoneyOutput) FractionDigits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductDiscountValueMoney) *int { return v.FractionDigits }).(pulumi.IntPtrOutput)
}

type ProductDiscountValueMoneyArrayOutput struct{ *pulumi.OutputState }

func (ProductDiscountValueMoneyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductDiscountValueMoney)(nil)).Elem()
}

func (o ProductDiscountValueMoneyArrayOutput) ToProductDiscountValueMoneyArrayOutput() ProductDiscountValueMoneyArrayOutput {
	return o
}

func (o ProductDiscountValueMoneyArrayOutput) ToProductDiscountValueMoneyArrayOutputWithContext(ctx context.Context) ProductDiscountValueMoneyArrayOutput {
	return o
}

func (o ProductDiscountValueMoneyArrayOutput) Index(i pulumi.IntInput) ProductDiscountValueMoneyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductDiscountValueMoney {
		return vs[0].([]ProductDiscountValueMoney)[vs[1].(int)]
	}).(ProductDiscountValueMoneyOutput)
}

type ProductTypeAttribute struct {
	// Describes how an attribute or a set of attributes should be validated across all variants of a product. See also [Attribute Constraint](https://docs.commercetools.com/api/projects/productTypes#attributeconstraint-enum)
	Constraint *string `pulumi:"constraint"`
	// Provides a visual representation type for this attribute. only relevant for text-based attribute types like TextType and LocalizableTextType
	InputHint *string `pulumi:"inputHint"`
	// Additional information about the attribute that aids content managers when setting product details
	InputTip map[string]interface{} `pulumi:"inputTip"`
	// A human-readable label for the attribute
	Label map[string]interface{} `pulumi:"label"`
	// The unique name of the attribute used in the API. The name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
	// When using the same name for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types, otherwise an AttributeDefinitionAlreadyExists error code will be returned. An exception to this are the values of an enum or lenum type and sets thereof
	Name string `pulumi:"name"`
	// Whether the attribute is required to have a value
	Required *bool `pulumi:"required"`
	// Whether the attribute's values should generally be activated in product search
	Searchable *bool `pulumi:"searchable"`
	// [AttributeType](https://docs.commercetools.com/api/projects/productTypes#attributetype)
	Type ProductTypeAttributeType `pulumi:"type"`
}

// ProductTypeAttributeInput is an input type that accepts ProductTypeAttributeArgs and ProductTypeAttributeOutput values.
// You can construct a concrete instance of `ProductTypeAttributeInput` via:
//
//	ProductTypeAttributeArgs{...}
type ProductTypeAttributeInput interface {
	pulumi.Input

	ToProductTypeAttributeOutput() ProductTypeAttributeOutput
	ToProductTypeAttributeOutputWithContext(context.Context) ProductTypeAttributeOutput
}

type ProductTypeAttributeArgs struct {
	// Describes how an attribute or a set of attributes should be validated across all variants of a product. See also [Attribute Constraint](https://docs.commercetools.com/api/projects/productTypes#attributeconstraint-enum)
	Constraint pulumi.StringPtrInput `pulumi:"constraint"`
	// Provides a visual representation type for this attribute. only relevant for text-based attribute types like TextType and LocalizableTextType
	InputHint pulumi.StringPtrInput `pulumi:"inputHint"`
	// Additional information about the attribute that aids content managers when setting product details
	InputTip pulumi.MapInput `pulumi:"inputTip"`
	// A human-readable label for the attribute
	Label pulumi.MapInput `pulumi:"label"`
	// The unique name of the attribute used in the API. The name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
	// When using the same name for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types, otherwise an AttributeDefinitionAlreadyExists error code will be returned. An exception to this are the values of an enum or lenum type and sets thereof
	Name pulumi.StringInput `pulumi:"name"`
	// Whether the attribute is required to have a value
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Whether the attribute's values should generally be activated in product search
	Searchable pulumi.BoolPtrInput `pulumi:"searchable"`
	// [AttributeType](https://docs.commercetools.com/api/projects/productTypes#attributetype)
	Type ProductTypeAttributeTypeInput `pulumi:"type"`
}

func (ProductTypeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttribute)(nil)).Elem()
}

func (i ProductTypeAttributeArgs) ToProductTypeAttributeOutput() ProductTypeAttributeOutput {
	return i.ToProductTypeAttributeOutputWithContext(context.Background())
}

func (i ProductTypeAttributeArgs) ToProductTypeAttributeOutputWithContext(ctx context.Context) ProductTypeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeOutput)
}

// ProductTypeAttributeArrayInput is an input type that accepts ProductTypeAttributeArray and ProductTypeAttributeArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeArrayInput` via:
//
//	ProductTypeAttributeArray{ ProductTypeAttributeArgs{...} }
type ProductTypeAttributeArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput
	ToProductTypeAttributeArrayOutputWithContext(context.Context) ProductTypeAttributeArrayOutput
}

type ProductTypeAttributeArray []ProductTypeAttributeInput

func (ProductTypeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttribute)(nil)).Elem()
}

func (i ProductTypeAttributeArray) ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput {
	return i.ToProductTypeAttributeArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeArray) ToProductTypeAttributeArrayOutputWithContext(ctx context.Context) ProductTypeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeArrayOutput)
}

type ProductTypeAttributeOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttribute)(nil)).Elem()
}

func (o ProductTypeAttributeOutput) ToProductTypeAttributeOutput() ProductTypeAttributeOutput {
	return o
}

func (o ProductTypeAttributeOutput) ToProductTypeAttributeOutputWithContext(ctx context.Context) ProductTypeAttributeOutput {
	return o
}

// Describes how an attribute or a set of attributes should be validated across all variants of a product. See also [Attribute Constraint](https://docs.commercetools.com/api/projects/productTypes#attributeconstraint-enum)
func (o ProductTypeAttributeOutput) Constraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *string { return v.Constraint }).(pulumi.StringPtrOutput)
}

// Provides a visual representation type for this attribute. only relevant for text-based attribute types like TextType and LocalizableTextType
func (o ProductTypeAttributeOutput) InputHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *string { return v.InputHint }).(pulumi.StringPtrOutput)
}

// Additional information about the attribute that aids content managers when setting product details
func (o ProductTypeAttributeOutput) InputTip() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttribute) map[string]interface{} { return v.InputTip }).(pulumi.MapOutput)
}

// A human-readable label for the attribute
func (o ProductTypeAttributeOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttribute) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

// The unique name of the attribute used in the API. The name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
// When using the same name for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types, otherwise an AttributeDefinitionAlreadyExists error code will be returned. An exception to this are the values of an enum or lenum type and sets thereof
func (o ProductTypeAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the attribute is required to have a value
func (o ProductTypeAttributeOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Whether the attribute's values should generally be activated in product search
func (o ProductTypeAttributeOutput) Searchable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *bool { return v.Searchable }).(pulumi.BoolPtrOutput)
}

// [AttributeType](https://docs.commercetools.com/api/projects/productTypes#attributetype)
func (o ProductTypeAttributeOutput) Type() ProductTypeAttributeTypeOutput {
	return o.ApplyT(func(v ProductTypeAttribute) ProductTypeAttributeType { return v.Type }).(ProductTypeAttributeTypeOutput)
}

type ProductTypeAttributeArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttribute)(nil)).Elem()
}

func (o ProductTypeAttributeArrayOutput) ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput {
	return o
}

func (o ProductTypeAttributeArrayOutput) ToProductTypeAttributeArrayOutputWithContext(ctx context.Context) ProductTypeAttributeArrayOutput {
	return o
}

func (o ProductTypeAttributeArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttribute {
		return vs[0].([]ProductTypeAttribute)[vs[1].(int)]
	}).(ProductTypeAttributeOutput)
}

type ProductTypeAttributeType struct {
	ElementType2 *ProductTypeAttributeTypeElementType2 `pulumi:"ElementType2"`
	// Localized values for the `lenum` type.
	LocalizedValues []ProductTypeAttributeTypeLocalizedValue `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
	Name string `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `reference`
	ReferenceTypeId *string `pulumi:"referenceTypeId"`
	// Reference to another product type. Required when type is `nested`.
	TypeReference *string `pulumi:"typeReference"`
	// Values for the `enum` type.
	Values []ProductTypeAttributeTypeValue `pulumi:"values"`
}

// ProductTypeAttributeTypeInput is an input type that accepts ProductTypeAttributeTypeArgs and ProductTypeAttributeTypeOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeInput` via:
//
//	ProductTypeAttributeTypeArgs{...}
type ProductTypeAttributeTypeInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput
	ToProductTypeAttributeTypeOutputWithContext(context.Context) ProductTypeAttributeTypeOutput
}

type ProductTypeAttributeTypeArgs struct {
	ElementType2 ProductTypeAttributeTypeElementType2PtrInput `pulumi:"ElementType2"`
	// Localized values for the `lenum` type.
	LocalizedValues ProductTypeAttributeTypeLocalizedValueArrayInput `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `reference`
	ReferenceTypeId pulumi.StringPtrInput `pulumi:"referenceTypeId"`
	// Reference to another product type. Required when type is `nested`.
	TypeReference pulumi.StringPtrInput `pulumi:"typeReference"`
	// Values for the `enum` type.
	Values ProductTypeAttributeTypeValueArrayInput `pulumi:"values"`
}

func (ProductTypeAttributeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeType)(nil)).Elem()
}

func (i ProductTypeAttributeTypeArgs) ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput {
	return i.ToProductTypeAttributeTypeOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeArgs) ToProductTypeAttributeTypeOutputWithContext(ctx context.Context) ProductTypeAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeOutput)
}

type ProductTypeAttributeTypeOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeType)(nil)).Elem()
}

func (o ProductTypeAttributeTypeOutput) ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput {
	return o
}

func (o ProductTypeAttributeTypeOutput) ToProductTypeAttributeTypeOutputWithContext(ctx context.Context) ProductTypeAttributeTypeOutput {
	return o
}

func (o ProductTypeAttributeTypeOutput) ElementType2() ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *ProductTypeAttributeTypeElementType2 { return v.ElementType2 }).(ProductTypeAttributeTypeElementType2PtrOutput)
}

// Localized values for the `lenum` type.
func (o ProductTypeAttributeTypeOutput) LocalizedValues() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) []ProductTypeAttributeTypeLocalizedValue { return v.LocalizedValues }).(ProductTypeAttributeTypeLocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
func (o ProductTypeAttributeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type the Custom Field can reference. Required when type is `reference`
func (o ProductTypeAttributeTypeOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

// Reference to another product type. Required when type is `nested`.
func (o ProductTypeAttributeTypeOutput) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *string { return v.TypeReference }).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o ProductTypeAttributeTypeOutput) Values() ProductTypeAttributeTypeValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) []ProductTypeAttributeTypeValue { return v.Values }).(ProductTypeAttributeTypeValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2 struct {
	// Localized values for the `lenum` type.
	LocalizedValues []ProductTypeAttributeTypeElementType2LocalizedValue `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
	Name string `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `reference`
	ReferenceTypeId *string `pulumi:"referenceTypeId"`
	// Reference to another product type. Required when type is `nested`.
	TypeReference *string `pulumi:"typeReference"`
	// Values for the `enum` type.
	Values []ProductTypeAttributeTypeElementType2Value `pulumi:"values"`
}

// ProductTypeAttributeTypeElementType2Input is an input type that accepts ProductTypeAttributeTypeElementType2Args and ProductTypeAttributeTypeElementType2Output values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2Input` via:
//
//	ProductTypeAttributeTypeElementType2Args{...}
type ProductTypeAttributeTypeElementType2Input interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output
	ToProductTypeAttributeTypeElementType2OutputWithContext(context.Context) ProductTypeAttributeTypeElementType2Output
}

type ProductTypeAttributeTypeElementType2Args struct {
	// Localized values for the `lenum` type.
	LocalizedValues ProductTypeAttributeTypeElementType2LocalizedValueArrayInput `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `reference`
	ReferenceTypeId pulumi.StringPtrInput `pulumi:"referenceTypeId"`
	// Reference to another product type. Required when type is `nested`.
	TypeReference pulumi.StringPtrInput `pulumi:"typeReference"`
	// Values for the `enum` type.
	Values ProductTypeAttributeTypeElementType2ValueArrayInput `pulumi:"values"`
}

func (ProductTypeAttributeTypeElementType2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output {
	return i.ToProductTypeAttributeTypeElementType2OutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2OutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2Output)
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return i.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2Output).ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx)
}

// ProductTypeAttributeTypeElementType2PtrInput is an input type that accepts ProductTypeAttributeTypeElementType2Args, ProductTypeAttributeTypeElementType2Ptr and ProductTypeAttributeTypeElementType2PtrOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2PtrInput` via:
//
//	        ProductTypeAttributeTypeElementType2Args{...}
//
//	or:
//
//	        nil
type ProductTypeAttributeTypeElementType2PtrInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput
	ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2PtrOutput
}

type productTypeAttributeTypeElementType2PtrType ProductTypeAttributeTypeElementType2Args

func ProductTypeAttributeTypeElementType2Ptr(v *ProductTypeAttributeTypeElementType2Args) ProductTypeAttributeTypeElementType2PtrInput {
	return (*productTypeAttributeTypeElementType2PtrType)(v)
}

func (*productTypeAttributeTypeElementType2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (i *productTypeAttributeTypeElementType2PtrType) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return i.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (i *productTypeAttributeTypeElementType2PtrType) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2PtrOutput)
}

type ProductTypeAttributeTypeElementType2Output struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output {
	return o
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2OutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2Output {
	return o
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProductTypeAttributeTypeElementType2) *ProductTypeAttributeTypeElementType2 {
		return &v
	}).(ProductTypeAttributeTypeElementType2PtrOutput)
}

// Localized values for the `lenum` type.
func (o ProductTypeAttributeTypeElementType2Output) LocalizedValues() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2LocalizedValue {
		return v.LocalizedValues
	}).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
func (o ProductTypeAttributeTypeElementType2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type the Custom Field can reference. Required when type is `reference`
func (o ProductTypeAttributeTypeElementType2Output) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

// Reference to another product type. Required when type is `nested`.
func (o ProductTypeAttributeTypeElementType2Output) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) *string { return v.TypeReference }).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o ProductTypeAttributeTypeElementType2Output) Values() ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2Value {
		return v.Values
	}).(ProductTypeAttributeTypeElementType2ValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2PtrOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) Elem() ProductTypeAttributeTypeElementType2Output {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) ProductTypeAttributeTypeElementType2 {
		if v != nil {
			return *v
		}
		var ret ProductTypeAttributeTypeElementType2
		return ret
	}).(ProductTypeAttributeTypeElementType2Output)
}

// Localized values for the `lenum` type.
func (o ProductTypeAttributeTypeElementType2PtrOutput) LocalizedValues() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2LocalizedValue {
		if v == nil {
			return nil
		}
		return v.LocalizedValues
	}).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it
func (o ProductTypeAttributeTypeElementType2PtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type the Custom Field can reference. Required when type is `reference`
func (o ProductTypeAttributeTypeElementType2PtrOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceTypeId
	}).(pulumi.StringPtrOutput)
}

// Reference to another product type. Required when type is `nested`.
func (o ProductTypeAttributeTypeElementType2PtrOutput) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.TypeReference
	}).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o ProductTypeAttributeTypeElementType2PtrOutput) Values() ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2Value {
		if v == nil {
			return nil
		}
		return v.Values
	}).(ProductTypeAttributeTypeElementType2ValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// ProductTypeAttributeTypeElementType2LocalizedValueInput is an input type that accepts ProductTypeAttributeTypeElementType2LocalizedValueArgs and ProductTypeAttributeTypeElementType2LocalizedValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2LocalizedValueInput` via:
//
//	ProductTypeAttributeTypeElementType2LocalizedValueArgs{...}
type ProductTypeAttributeTypeElementType2LocalizedValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput
	ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput
}

type ProductTypeAttributeTypeElementType2LocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (ProductTypeAttributeTypeElementType2LocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArgs) ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return i.ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArgs) ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2LocalizedValueOutput)
}

// ProductTypeAttributeTypeElementType2LocalizedValueArrayInput is an input type that accepts ProductTypeAttributeTypeElementType2LocalizedValueArray and ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2LocalizedValueArrayInput` via:
//
//	ProductTypeAttributeTypeElementType2LocalizedValueArray{ ProductTypeAttributeTypeElementType2LocalizedValueArgs{...} }
type ProductTypeAttributeTypeElementType2LocalizedValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput
	ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput
}

type ProductTypeAttributeTypeElementType2LocalizedValueArray []ProductTypeAttributeTypeElementType2LocalizedValueInput

func (ProductTypeAttributeTypeElementType2LocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArray) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return i.ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArray) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2LocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2LocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2LocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeElementType2LocalizedValue {
		return vs[0].([]ProductTypeAttributeTypeElementType2LocalizedValue)[vs[1].(int)]
	}).(ProductTypeAttributeTypeElementType2LocalizedValueOutput)
}

type ProductTypeAttributeTypeElementType2Value struct {
	Key   string `pulumi:"key"`
	Label string `pulumi:"label"`
}

// ProductTypeAttributeTypeElementType2ValueInput is an input type that accepts ProductTypeAttributeTypeElementType2ValueArgs and ProductTypeAttributeTypeElementType2ValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2ValueInput` via:
//
//	ProductTypeAttributeTypeElementType2ValueArgs{...}
type ProductTypeAttributeTypeElementType2ValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2ValueOutput() ProductTypeAttributeTypeElementType2ValueOutput
	ToProductTypeAttributeTypeElementType2ValueOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2ValueOutput
}

type ProductTypeAttributeTypeElementType2ValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.StringInput `pulumi:"label"`
}

func (ProductTypeAttributeTypeElementType2ValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2Value)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2ValueArgs) ToProductTypeAttributeTypeElementType2ValueOutput() ProductTypeAttributeTypeElementType2ValueOutput {
	return i.ToProductTypeAttributeTypeElementType2ValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2ValueArgs) ToProductTypeAttributeTypeElementType2ValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2ValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2ValueOutput)
}

// ProductTypeAttributeTypeElementType2ValueArrayInput is an input type that accepts ProductTypeAttributeTypeElementType2ValueArray and ProductTypeAttributeTypeElementType2ValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2ValueArrayInput` via:
//
//	ProductTypeAttributeTypeElementType2ValueArray{ ProductTypeAttributeTypeElementType2ValueArgs{...} }
type ProductTypeAttributeTypeElementType2ValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2ValueArrayOutput() ProductTypeAttributeTypeElementType2ValueArrayOutput
	ToProductTypeAttributeTypeElementType2ValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2ValueArrayOutput
}

type ProductTypeAttributeTypeElementType2ValueArray []ProductTypeAttributeTypeElementType2ValueInput

func (ProductTypeAttributeTypeElementType2ValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2Value)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2ValueArray) ToProductTypeAttributeTypeElementType2ValueArrayOutput() ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return i.ToProductTypeAttributeTypeElementType2ValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2ValueArray) ToProductTypeAttributeTypeElementType2ValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2ValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2ValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2ValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2Value)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2ValueOutput) ToProductTypeAttributeTypeElementType2ValueOutput() ProductTypeAttributeTypeElementType2ValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2ValueOutput) ToProductTypeAttributeTypeElementType2ValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2ValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2ValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2Value) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeElementType2ValueOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2Value) string { return v.Label }).(pulumi.StringOutput)
}

type ProductTypeAttributeTypeElementType2ValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2ValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2Value)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2ValueArrayOutput) ToProductTypeAttributeTypeElementType2ValueArrayOutput() ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2ValueArrayOutput) ToProductTypeAttributeTypeElementType2ValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2ValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2ValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeElementType2ValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeElementType2Value {
		return vs[0].([]ProductTypeAttributeTypeElementType2Value)[vs[1].(int)]
	}).(ProductTypeAttributeTypeElementType2ValueOutput)
}

type ProductTypeAttributeTypeLocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// ProductTypeAttributeTypeLocalizedValueInput is an input type that accepts ProductTypeAttributeTypeLocalizedValueArgs and ProductTypeAttributeTypeLocalizedValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeLocalizedValueInput` via:
//
//	ProductTypeAttributeTypeLocalizedValueArgs{...}
type ProductTypeAttributeTypeLocalizedValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput
	ToProductTypeAttributeTypeLocalizedValueOutputWithContext(context.Context) ProductTypeAttributeTypeLocalizedValueOutput
}

type ProductTypeAttributeTypeLocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (ProductTypeAttributeTypeLocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeLocalizedValueArgs) ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput {
	return i.ToProductTypeAttributeTypeLocalizedValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeLocalizedValueArgs) ToProductTypeAttributeTypeLocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeLocalizedValueOutput)
}

// ProductTypeAttributeTypeLocalizedValueArrayInput is an input type that accepts ProductTypeAttributeTypeLocalizedValueArray and ProductTypeAttributeTypeLocalizedValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeLocalizedValueArrayInput` via:
//
//	ProductTypeAttributeTypeLocalizedValueArray{ ProductTypeAttributeTypeLocalizedValueArgs{...} }
type ProductTypeAttributeTypeLocalizedValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput
	ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput
}

type ProductTypeAttributeTypeLocalizedValueArray []ProductTypeAttributeTypeLocalizedValueInput

func (ProductTypeAttributeTypeLocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeLocalizedValueArray) ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return i.ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeLocalizedValueArray) ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeLocalizedValueArrayOutput)
}

type ProductTypeAttributeTypeLocalizedValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeLocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) ToProductTypeAttributeTypeLocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeLocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeLocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeLocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeLocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeLocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeLocalizedValue {
		return vs[0].([]ProductTypeAttributeTypeLocalizedValue)[vs[1].(int)]
	}).(ProductTypeAttributeTypeLocalizedValueOutput)
}

type ProductTypeAttributeTypeValue struct {
	Key   string `pulumi:"key"`
	Label string `pulumi:"label"`
}

// ProductTypeAttributeTypeValueInput is an input type that accepts ProductTypeAttributeTypeValueArgs and ProductTypeAttributeTypeValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeValueInput` via:
//
//	ProductTypeAttributeTypeValueArgs{...}
type ProductTypeAttributeTypeValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeValueOutput() ProductTypeAttributeTypeValueOutput
	ToProductTypeAttributeTypeValueOutputWithContext(context.Context) ProductTypeAttributeTypeValueOutput
}

type ProductTypeAttributeTypeValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.StringInput `pulumi:"label"`
}

func (ProductTypeAttributeTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeValueArgs) ToProductTypeAttributeTypeValueOutput() ProductTypeAttributeTypeValueOutput {
	return i.ToProductTypeAttributeTypeValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeValueArgs) ToProductTypeAttributeTypeValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeValueOutput)
}

// ProductTypeAttributeTypeValueArrayInput is an input type that accepts ProductTypeAttributeTypeValueArray and ProductTypeAttributeTypeValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeValueArrayInput` via:
//
//	ProductTypeAttributeTypeValueArray{ ProductTypeAttributeTypeValueArgs{...} }
type ProductTypeAttributeTypeValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeValueArrayOutput() ProductTypeAttributeTypeValueArrayOutput
	ToProductTypeAttributeTypeValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeValueArrayOutput
}

type ProductTypeAttributeTypeValueArray []ProductTypeAttributeTypeValueInput

func (ProductTypeAttributeTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeValueArray) ToProductTypeAttributeTypeValueArrayOutput() ProductTypeAttributeTypeValueArrayOutput {
	return i.ToProductTypeAttributeTypeValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeValueArray) ToProductTypeAttributeTypeValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeValueArrayOutput)
}

type ProductTypeAttributeTypeValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeValueOutput) ToProductTypeAttributeTypeValueOutput() ProductTypeAttributeTypeValueOutput {
	return o
}

func (o ProductTypeAttributeTypeValueOutput) ToProductTypeAttributeTypeValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeValueOutput {
	return o
}

func (o ProductTypeAttributeTypeValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeValueOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeValue) string { return v.Label }).(pulumi.StringOutput)
}

type ProductTypeAttributeTypeValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeValueArrayOutput) ToProductTypeAttributeTypeValueArrayOutput() ProductTypeAttributeTypeValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeValueArrayOutput) ToProductTypeAttributeTypeValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeValue {
		return vs[0].([]ProductTypeAttributeTypeValue)[vs[1].(int)]
	}).(ProductTypeAttributeTypeValueOutput)
}

type ProjectSettingsCarts struct {
	// Indicates if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items
	CountryTaxRateFallbackEnabled *bool `pulumi:"countryTaxRateFallbackEnabled"`
	// Number - Optional The default value for the deleteDaysAfterLastModification parameter of the CartDraft. Initially set to 90 for projects created after December 2019.
	DeleteDaysAfterLastModification *int `pulumi:"deleteDaysAfterLastModification"`
}

// ProjectSettingsCartsInput is an input type that accepts ProjectSettingsCartsArgs and ProjectSettingsCartsOutput values.
// You can construct a concrete instance of `ProjectSettingsCartsInput` via:
//
//	ProjectSettingsCartsArgs{...}
type ProjectSettingsCartsInput interface {
	pulumi.Input

	ToProjectSettingsCartsOutput() ProjectSettingsCartsOutput
	ToProjectSettingsCartsOutputWithContext(context.Context) ProjectSettingsCartsOutput
}

type ProjectSettingsCartsArgs struct {
	// Indicates if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items
	CountryTaxRateFallbackEnabled pulumi.BoolPtrInput `pulumi:"countryTaxRateFallbackEnabled"`
	// Number - Optional The default value for the deleteDaysAfterLastModification parameter of the CartDraft. Initially set to 90 for projects created after December 2019.
	DeleteDaysAfterLastModification pulumi.IntPtrInput `pulumi:"deleteDaysAfterLastModification"`
}

func (ProjectSettingsCartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsCarts)(nil)).Elem()
}

func (i ProjectSettingsCartsArgs) ToProjectSettingsCartsOutput() ProjectSettingsCartsOutput {
	return i.ToProjectSettingsCartsOutputWithContext(context.Background())
}

func (i ProjectSettingsCartsArgs) ToProjectSettingsCartsOutputWithContext(ctx context.Context) ProjectSettingsCartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsCartsOutput)
}

func (i ProjectSettingsCartsArgs) ToProjectSettingsCartsPtrOutput() ProjectSettingsCartsPtrOutput {
	return i.ToProjectSettingsCartsPtrOutputWithContext(context.Background())
}

func (i ProjectSettingsCartsArgs) ToProjectSettingsCartsPtrOutputWithContext(ctx context.Context) ProjectSettingsCartsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsCartsOutput).ToProjectSettingsCartsPtrOutputWithContext(ctx)
}

// ProjectSettingsCartsPtrInput is an input type that accepts ProjectSettingsCartsArgs, ProjectSettingsCartsPtr and ProjectSettingsCartsPtrOutput values.
// You can construct a concrete instance of `ProjectSettingsCartsPtrInput` via:
//
//	        ProjectSettingsCartsArgs{...}
//
//	or:
//
//	        nil
type ProjectSettingsCartsPtrInput interface {
	pulumi.Input

	ToProjectSettingsCartsPtrOutput() ProjectSettingsCartsPtrOutput
	ToProjectSettingsCartsPtrOutputWithContext(context.Context) ProjectSettingsCartsPtrOutput
}

type projectSettingsCartsPtrType ProjectSettingsCartsArgs

func ProjectSettingsCartsPtr(v *ProjectSettingsCartsArgs) ProjectSettingsCartsPtrInput {
	return (*projectSettingsCartsPtrType)(v)
}

func (*projectSettingsCartsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsCarts)(nil)).Elem()
}

func (i *projectSettingsCartsPtrType) ToProjectSettingsCartsPtrOutput() ProjectSettingsCartsPtrOutput {
	return i.ToProjectSettingsCartsPtrOutputWithContext(context.Background())
}

func (i *projectSettingsCartsPtrType) ToProjectSettingsCartsPtrOutputWithContext(ctx context.Context) ProjectSettingsCartsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsCartsPtrOutput)
}

type ProjectSettingsCartsOutput struct{ *pulumi.OutputState }

func (ProjectSettingsCartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsCarts)(nil)).Elem()
}

func (o ProjectSettingsCartsOutput) ToProjectSettingsCartsOutput() ProjectSettingsCartsOutput {
	return o
}

func (o ProjectSettingsCartsOutput) ToProjectSettingsCartsOutputWithContext(ctx context.Context) ProjectSettingsCartsOutput {
	return o
}

func (o ProjectSettingsCartsOutput) ToProjectSettingsCartsPtrOutput() ProjectSettingsCartsPtrOutput {
	return o.ToProjectSettingsCartsPtrOutputWithContext(context.Background())
}

func (o ProjectSettingsCartsOutput) ToProjectSettingsCartsPtrOutputWithContext(ctx context.Context) ProjectSettingsCartsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSettingsCarts) *ProjectSettingsCarts {
		return &v
	}).(ProjectSettingsCartsPtrOutput)
}

// Indicates if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items
func (o ProjectSettingsCartsOutput) CountryTaxRateFallbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSettingsCarts) *bool { return v.CountryTaxRateFallbackEnabled }).(pulumi.BoolPtrOutput)
}

// Number - Optional The default value for the deleteDaysAfterLastModification parameter of the CartDraft. Initially set to 90 for projects created after December 2019.
func (o ProjectSettingsCartsOutput) DeleteDaysAfterLastModification() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSettingsCarts) *int { return v.DeleteDaysAfterLastModification }).(pulumi.IntPtrOutput)
}

type ProjectSettingsCartsPtrOutput struct{ *pulumi.OutputState }

func (ProjectSettingsCartsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsCarts)(nil)).Elem()
}

func (o ProjectSettingsCartsPtrOutput) ToProjectSettingsCartsPtrOutput() ProjectSettingsCartsPtrOutput {
	return o
}

func (o ProjectSettingsCartsPtrOutput) ToProjectSettingsCartsPtrOutputWithContext(ctx context.Context) ProjectSettingsCartsPtrOutput {
	return o
}

func (o ProjectSettingsCartsPtrOutput) Elem() ProjectSettingsCartsOutput {
	return o.ApplyT(func(v *ProjectSettingsCarts) ProjectSettingsCarts {
		if v != nil {
			return *v
		}
		var ret ProjectSettingsCarts
		return ret
	}).(ProjectSettingsCartsOutput)
}

// Indicates if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items
func (o ProjectSettingsCartsPtrOutput) CountryTaxRateFallbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsCarts) *bool {
		if v == nil {
			return nil
		}
		return v.CountryTaxRateFallbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// Number - Optional The default value for the deleteDaysAfterLastModification parameter of the CartDraft. Initially set to 90 for projects created after December 2019.
func (o ProjectSettingsCartsPtrOutput) DeleteDaysAfterLastModification() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsCarts) *int {
		if v == nil {
			return nil
		}
		return v.DeleteDaysAfterLastModification
	}).(pulumi.IntPtrOutput)
}

type ProjectSettingsExternalOauth struct {
	// Partially hidden on retrieval
	AuthorizationHeader *string `pulumi:"authorizationHeader"`
	Url                 *string `pulumi:"url"`
}

// ProjectSettingsExternalOauthInput is an input type that accepts ProjectSettingsExternalOauthArgs and ProjectSettingsExternalOauthOutput values.
// You can construct a concrete instance of `ProjectSettingsExternalOauthInput` via:
//
//	ProjectSettingsExternalOauthArgs{...}
type ProjectSettingsExternalOauthInput interface {
	pulumi.Input

	ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput
	ToProjectSettingsExternalOauthOutputWithContext(context.Context) ProjectSettingsExternalOauthOutput
}

type ProjectSettingsExternalOauthArgs struct {
	// Partially hidden on retrieval
	AuthorizationHeader pulumi.StringPtrInput `pulumi:"authorizationHeader"`
	Url                 pulumi.StringPtrInput `pulumi:"url"`
}

func (ProjectSettingsExternalOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsExternalOauth)(nil)).Elem()
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput {
	return i.ToProjectSettingsExternalOauthOutputWithContext(context.Background())
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthOutput)
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return i.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthOutput).ToProjectSettingsExternalOauthPtrOutputWithContext(ctx)
}

// ProjectSettingsExternalOauthPtrInput is an input type that accepts ProjectSettingsExternalOauthArgs, ProjectSettingsExternalOauthPtr and ProjectSettingsExternalOauthPtrOutput values.
// You can construct a concrete instance of `ProjectSettingsExternalOauthPtrInput` via:
//
//	        ProjectSettingsExternalOauthArgs{...}
//
//	or:
//
//	        nil
type ProjectSettingsExternalOauthPtrInput interface {
	pulumi.Input

	ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput
	ToProjectSettingsExternalOauthPtrOutputWithContext(context.Context) ProjectSettingsExternalOauthPtrOutput
}

type projectSettingsExternalOauthPtrType ProjectSettingsExternalOauthArgs

func ProjectSettingsExternalOauthPtr(v *ProjectSettingsExternalOauthArgs) ProjectSettingsExternalOauthPtrInput {
	return (*projectSettingsExternalOauthPtrType)(v)
}

func (*projectSettingsExternalOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsExternalOauth)(nil)).Elem()
}

func (i *projectSettingsExternalOauthPtrType) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return i.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (i *projectSettingsExternalOauthPtrType) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthPtrOutput)
}

type ProjectSettingsExternalOauthOutput struct{ *pulumi.OutputState }

func (ProjectSettingsExternalOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsExternalOauth)(nil)).Elem()
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput {
	return o
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthOutput {
	return o
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return o.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSettingsExternalOauth) *ProjectSettingsExternalOauth {
		return &v
	}).(ProjectSettingsExternalOauthPtrOutput)
}

// Partially hidden on retrieval
func (o ProjectSettingsExternalOauthOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSettingsExternalOauth) *string { return v.AuthorizationHeader }).(pulumi.StringPtrOutput)
}

func (o ProjectSettingsExternalOauthOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSettingsExternalOauth) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ProjectSettingsExternalOauthPtrOutput struct{ *pulumi.OutputState }

func (ProjectSettingsExternalOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsExternalOauth)(nil)).Elem()
}

func (o ProjectSettingsExternalOauthPtrOutput) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return o
}

func (o ProjectSettingsExternalOauthPtrOutput) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return o
}

func (o ProjectSettingsExternalOauthPtrOutput) Elem() ProjectSettingsExternalOauthOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) ProjectSettingsExternalOauth {
		if v != nil {
			return *v
		}
		var ret ProjectSettingsExternalOauth
		return ret
	}).(ProjectSettingsExternalOauthOutput)
}

// Partially hidden on retrieval
func (o ProjectSettingsExternalOauthPtrOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationHeader
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSettingsExternalOauthPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ProjectSettingsMessages struct {
	// Specifies the number of days each Message should be available via the Messages Query API
	DeleteDaysAfterCreation *int `pulumi:"deleteDaysAfterCreation"`
	// When true the creation of messages on the Messages Query HTTP API is enabled
	Enabled *bool `pulumi:"enabled"`
}

// ProjectSettingsMessagesInput is an input type that accepts ProjectSettingsMessagesArgs and ProjectSettingsMessagesOutput values.
// You can construct a concrete instance of `ProjectSettingsMessagesInput` via:
//
//	ProjectSettingsMessagesArgs{...}
type ProjectSettingsMessagesInput interface {
	pulumi.Input

	ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput
	ToProjectSettingsMessagesOutputWithContext(context.Context) ProjectSettingsMessagesOutput
}

type ProjectSettingsMessagesArgs struct {
	// Specifies the number of days each Message should be available via the Messages Query API
	DeleteDaysAfterCreation pulumi.IntPtrInput `pulumi:"deleteDaysAfterCreation"`
	// When true the creation of messages on the Messages Query HTTP API is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ProjectSettingsMessagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsMessages)(nil)).Elem()
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput {
	return i.ToProjectSettingsMessagesOutputWithContext(context.Background())
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesOutputWithContext(ctx context.Context) ProjectSettingsMessagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesOutput)
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return i.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesOutput).ToProjectSettingsMessagesPtrOutputWithContext(ctx)
}

// ProjectSettingsMessagesPtrInput is an input type that accepts ProjectSettingsMessagesArgs, ProjectSettingsMessagesPtr and ProjectSettingsMessagesPtrOutput values.
// You can construct a concrete instance of `ProjectSettingsMessagesPtrInput` via:
//
//	        ProjectSettingsMessagesArgs{...}
//
//	or:
//
//	        nil
type ProjectSettingsMessagesPtrInput interface {
	pulumi.Input

	ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput
	ToProjectSettingsMessagesPtrOutputWithContext(context.Context) ProjectSettingsMessagesPtrOutput
}

type projectSettingsMessagesPtrType ProjectSettingsMessagesArgs

func ProjectSettingsMessagesPtr(v *ProjectSettingsMessagesArgs) ProjectSettingsMessagesPtrInput {
	return (*projectSettingsMessagesPtrType)(v)
}

func (*projectSettingsMessagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsMessages)(nil)).Elem()
}

func (i *projectSettingsMessagesPtrType) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return i.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (i *projectSettingsMessagesPtrType) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesPtrOutput)
}

type ProjectSettingsMessagesOutput struct{ *pulumi.OutputState }

func (ProjectSettingsMessagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsMessages)(nil)).Elem()
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput {
	return o
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesOutputWithContext(ctx context.Context) ProjectSettingsMessagesOutput {
	return o
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return o.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSettingsMessages) *ProjectSettingsMessages {
		return &v
	}).(ProjectSettingsMessagesPtrOutput)
}

// Specifies the number of days each Message should be available via the Messages Query API
func (o ProjectSettingsMessagesOutput) DeleteDaysAfterCreation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSettingsMessages) *int { return v.DeleteDaysAfterCreation }).(pulumi.IntPtrOutput)
}

// When true the creation of messages on the Messages Query HTTP API is enabled
func (o ProjectSettingsMessagesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSettingsMessages) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ProjectSettingsMessagesPtrOutput struct{ *pulumi.OutputState }

func (ProjectSettingsMessagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsMessages)(nil)).Elem()
}

func (o ProjectSettingsMessagesPtrOutput) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return o
}

func (o ProjectSettingsMessagesPtrOutput) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return o
}

func (o ProjectSettingsMessagesPtrOutput) Elem() ProjectSettingsMessagesOutput {
	return o.ApplyT(func(v *ProjectSettingsMessages) ProjectSettingsMessages {
		if v != nil {
			return *v
		}
		var ret ProjectSettingsMessages
		return ret
	}).(ProjectSettingsMessagesOutput)
}

// Specifies the number of days each Message should be available via the Messages Query API
func (o ProjectSettingsMessagesPtrOutput) DeleteDaysAfterCreation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsMessages) *int {
		if v == nil {
			return nil
		}
		return v.DeleteDaysAfterCreation
	}).(pulumi.IntPtrOutput)
}

// When true the creation of messages on the Messages Query HTTP API is enabled
func (o ProjectSettingsMessagesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsMessages) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ProjectSettingsShippingRateCartClassificationValue struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/Projects#changeProject)
	Key   string            `pulumi:"key"`
	Label map[string]string `pulumi:"label"`
}

// ProjectSettingsShippingRateCartClassificationValueInput is an input type that accepts ProjectSettingsShippingRateCartClassificationValueArgs and ProjectSettingsShippingRateCartClassificationValueOutput values.
// You can construct a concrete instance of `ProjectSettingsShippingRateCartClassificationValueInput` via:
//
//	ProjectSettingsShippingRateCartClassificationValueArgs{...}
type ProjectSettingsShippingRateCartClassificationValueInput interface {
	pulumi.Input

	ToProjectSettingsShippingRateCartClassificationValueOutput() ProjectSettingsShippingRateCartClassificationValueOutput
	ToProjectSettingsShippingRateCartClassificationValueOutputWithContext(context.Context) ProjectSettingsShippingRateCartClassificationValueOutput
}

type ProjectSettingsShippingRateCartClassificationValueArgs struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/Projects#changeProject)
	Key   pulumi.StringInput    `pulumi:"key"`
	Label pulumi.StringMapInput `pulumi:"label"`
}

func (ProjectSettingsShippingRateCartClassificationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsShippingRateCartClassificationValue)(nil)).Elem()
}

func (i ProjectSettingsShippingRateCartClassificationValueArgs) ToProjectSettingsShippingRateCartClassificationValueOutput() ProjectSettingsShippingRateCartClassificationValueOutput {
	return i.ToProjectSettingsShippingRateCartClassificationValueOutputWithContext(context.Background())
}

func (i ProjectSettingsShippingRateCartClassificationValueArgs) ToProjectSettingsShippingRateCartClassificationValueOutputWithContext(ctx context.Context) ProjectSettingsShippingRateCartClassificationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsShippingRateCartClassificationValueOutput)
}

// ProjectSettingsShippingRateCartClassificationValueArrayInput is an input type that accepts ProjectSettingsShippingRateCartClassificationValueArray and ProjectSettingsShippingRateCartClassificationValueArrayOutput values.
// You can construct a concrete instance of `ProjectSettingsShippingRateCartClassificationValueArrayInput` via:
//
//	ProjectSettingsShippingRateCartClassificationValueArray{ ProjectSettingsShippingRateCartClassificationValueArgs{...} }
type ProjectSettingsShippingRateCartClassificationValueArrayInput interface {
	pulumi.Input

	ToProjectSettingsShippingRateCartClassificationValueArrayOutput() ProjectSettingsShippingRateCartClassificationValueArrayOutput
	ToProjectSettingsShippingRateCartClassificationValueArrayOutputWithContext(context.Context) ProjectSettingsShippingRateCartClassificationValueArrayOutput
}

type ProjectSettingsShippingRateCartClassificationValueArray []ProjectSettingsShippingRateCartClassificationValueInput

func (ProjectSettingsShippingRateCartClassificationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSettingsShippingRateCartClassificationValue)(nil)).Elem()
}

func (i ProjectSettingsShippingRateCartClassificationValueArray) ToProjectSettingsShippingRateCartClassificationValueArrayOutput() ProjectSettingsShippingRateCartClassificationValueArrayOutput {
	return i.ToProjectSettingsShippingRateCartClassificationValueArrayOutputWithContext(context.Background())
}

func (i ProjectSettingsShippingRateCartClassificationValueArray) ToProjectSettingsShippingRateCartClassificationValueArrayOutputWithContext(ctx context.Context) ProjectSettingsShippingRateCartClassificationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsShippingRateCartClassificationValueArrayOutput)
}

type ProjectSettingsShippingRateCartClassificationValueOutput struct{ *pulumi.OutputState }

func (ProjectSettingsShippingRateCartClassificationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsShippingRateCartClassificationValue)(nil)).Elem()
}

func (o ProjectSettingsShippingRateCartClassificationValueOutput) ToProjectSettingsShippingRateCartClassificationValueOutput() ProjectSettingsShippingRateCartClassificationValueOutput {
	return o
}

func (o ProjectSettingsShippingRateCartClassificationValueOutput) ToProjectSettingsShippingRateCartClassificationValueOutputWithContext(ctx context.Context) ProjectSettingsShippingRateCartClassificationValueOutput {
	return o
}

// [Resource Type ID](https://docs.commercetools.com/api/projects/Projects#changeProject)
func (o ProjectSettingsShippingRateCartClassificationValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSettingsShippingRateCartClassificationValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProjectSettingsShippingRateCartClassificationValueOutput) Label() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectSettingsShippingRateCartClassificationValue) map[string]string { return v.Label }).(pulumi.StringMapOutput)
}

type ProjectSettingsShippingRateCartClassificationValueArrayOutput struct{ *pulumi.OutputState }

func (ProjectSettingsShippingRateCartClassificationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSettingsShippingRateCartClassificationValue)(nil)).Elem()
}

func (o ProjectSettingsShippingRateCartClassificationValueArrayOutput) ToProjectSettingsShippingRateCartClassificationValueArrayOutput() ProjectSettingsShippingRateCartClassificationValueArrayOutput {
	return o
}

func (o ProjectSettingsShippingRateCartClassificationValueArrayOutput) ToProjectSettingsShippingRateCartClassificationValueArrayOutputWithContext(ctx context.Context) ProjectSettingsShippingRateCartClassificationValueArrayOutput {
	return o
}

func (o ProjectSettingsShippingRateCartClassificationValueArrayOutput) Index(i pulumi.IntInput) ProjectSettingsShippingRateCartClassificationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSettingsShippingRateCartClassificationValue {
		return vs[0].([]ProjectSettingsShippingRateCartClassificationValue)[vs[1].(int)]
	}).(ProjectSettingsShippingRateCartClassificationValueOutput)
}

type ShippingMethodCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// ShippingMethodCustomInput is an input type that accepts ShippingMethodCustomArgs and ShippingMethodCustomOutput values.
// You can construct a concrete instance of `ShippingMethodCustomInput` via:
//
//	ShippingMethodCustomArgs{...}
type ShippingMethodCustomInput interface {
	pulumi.Input

	ToShippingMethodCustomOutput() ShippingMethodCustomOutput
	ToShippingMethodCustomOutputWithContext(context.Context) ShippingMethodCustomOutput
}

type ShippingMethodCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (ShippingMethodCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingMethodCustom)(nil)).Elem()
}

func (i ShippingMethodCustomArgs) ToShippingMethodCustomOutput() ShippingMethodCustomOutput {
	return i.ToShippingMethodCustomOutputWithContext(context.Background())
}

func (i ShippingMethodCustomArgs) ToShippingMethodCustomOutputWithContext(ctx context.Context) ShippingMethodCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingMethodCustomOutput)
}

func (i ShippingMethodCustomArgs) ToShippingMethodCustomPtrOutput() ShippingMethodCustomPtrOutput {
	return i.ToShippingMethodCustomPtrOutputWithContext(context.Background())
}

func (i ShippingMethodCustomArgs) ToShippingMethodCustomPtrOutputWithContext(ctx context.Context) ShippingMethodCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingMethodCustomOutput).ToShippingMethodCustomPtrOutputWithContext(ctx)
}

// ShippingMethodCustomPtrInput is an input type that accepts ShippingMethodCustomArgs, ShippingMethodCustomPtr and ShippingMethodCustomPtrOutput values.
// You can construct a concrete instance of `ShippingMethodCustomPtrInput` via:
//
//	        ShippingMethodCustomArgs{...}
//
//	or:
//
//	        nil
type ShippingMethodCustomPtrInput interface {
	pulumi.Input

	ToShippingMethodCustomPtrOutput() ShippingMethodCustomPtrOutput
	ToShippingMethodCustomPtrOutputWithContext(context.Context) ShippingMethodCustomPtrOutput
}

type shippingMethodCustomPtrType ShippingMethodCustomArgs

func ShippingMethodCustomPtr(v *ShippingMethodCustomArgs) ShippingMethodCustomPtrInput {
	return (*shippingMethodCustomPtrType)(v)
}

func (*shippingMethodCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingMethodCustom)(nil)).Elem()
}

func (i *shippingMethodCustomPtrType) ToShippingMethodCustomPtrOutput() ShippingMethodCustomPtrOutput {
	return i.ToShippingMethodCustomPtrOutputWithContext(context.Background())
}

func (i *shippingMethodCustomPtrType) ToShippingMethodCustomPtrOutputWithContext(ctx context.Context) ShippingMethodCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingMethodCustomPtrOutput)
}

type ShippingMethodCustomOutput struct{ *pulumi.OutputState }

func (ShippingMethodCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingMethodCustom)(nil)).Elem()
}

func (o ShippingMethodCustomOutput) ToShippingMethodCustomOutput() ShippingMethodCustomOutput {
	return o
}

func (o ShippingMethodCustomOutput) ToShippingMethodCustomOutputWithContext(ctx context.Context) ShippingMethodCustomOutput {
	return o
}

func (o ShippingMethodCustomOutput) ToShippingMethodCustomPtrOutput() ShippingMethodCustomPtrOutput {
	return o.ToShippingMethodCustomPtrOutputWithContext(context.Background())
}

func (o ShippingMethodCustomOutput) ToShippingMethodCustomPtrOutputWithContext(ctx context.Context) ShippingMethodCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingMethodCustom) *ShippingMethodCustom {
		return &v
	}).(ShippingMethodCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o ShippingMethodCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v ShippingMethodCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o ShippingMethodCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingMethodCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type ShippingMethodCustomPtrOutput struct{ *pulumi.OutputState }

func (ShippingMethodCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingMethodCustom)(nil)).Elem()
}

func (o ShippingMethodCustomPtrOutput) ToShippingMethodCustomPtrOutput() ShippingMethodCustomPtrOutput {
	return o
}

func (o ShippingMethodCustomPtrOutput) ToShippingMethodCustomPtrOutputWithContext(ctx context.Context) ShippingMethodCustomPtrOutput {
	return o
}

func (o ShippingMethodCustomPtrOutput) Elem() ShippingMethodCustomOutput {
	return o.ApplyT(func(v *ShippingMethodCustom) ShippingMethodCustom {
		if v != nil {
			return *v
		}
		var ret ShippingMethodCustom
		return ret
	}).(ShippingMethodCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o ShippingMethodCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *ShippingMethodCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o ShippingMethodCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingMethodCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type ShippingZoneLocation struct {
	// A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
	Country string  `pulumi:"country"`
	State   *string `pulumi:"state"`
}

// ShippingZoneLocationInput is an input type that accepts ShippingZoneLocationArgs and ShippingZoneLocationOutput values.
// You can construct a concrete instance of `ShippingZoneLocationInput` via:
//
//	ShippingZoneLocationArgs{...}
type ShippingZoneLocationInput interface {
	pulumi.Input

	ToShippingZoneLocationOutput() ShippingZoneLocationOutput
	ToShippingZoneLocationOutputWithContext(context.Context) ShippingZoneLocationOutput
}

type ShippingZoneLocationArgs struct {
	// A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
	Country pulumi.StringInput    `pulumi:"country"`
	State   pulumi.StringPtrInput `pulumi:"state"`
}

func (ShippingZoneLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneLocation)(nil)).Elem()
}

func (i ShippingZoneLocationArgs) ToShippingZoneLocationOutput() ShippingZoneLocationOutput {
	return i.ToShippingZoneLocationOutputWithContext(context.Background())
}

func (i ShippingZoneLocationArgs) ToShippingZoneLocationOutputWithContext(ctx context.Context) ShippingZoneLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneLocationOutput)
}

// ShippingZoneLocationArrayInput is an input type that accepts ShippingZoneLocationArray and ShippingZoneLocationArrayOutput values.
// You can construct a concrete instance of `ShippingZoneLocationArrayInput` via:
//
//	ShippingZoneLocationArray{ ShippingZoneLocationArgs{...} }
type ShippingZoneLocationArrayInput interface {
	pulumi.Input

	ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput
	ToShippingZoneLocationArrayOutputWithContext(context.Context) ShippingZoneLocationArrayOutput
}

type ShippingZoneLocationArray []ShippingZoneLocationInput

func (ShippingZoneLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneLocation)(nil)).Elem()
}

func (i ShippingZoneLocationArray) ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput {
	return i.ToShippingZoneLocationArrayOutputWithContext(context.Background())
}

func (i ShippingZoneLocationArray) ToShippingZoneLocationArrayOutputWithContext(ctx context.Context) ShippingZoneLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneLocationArrayOutput)
}

type ShippingZoneLocationOutput struct{ *pulumi.OutputState }

func (ShippingZoneLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneLocation)(nil)).Elem()
}

func (o ShippingZoneLocationOutput) ToShippingZoneLocationOutput() ShippingZoneLocationOutput {
	return o
}

func (o ShippingZoneLocationOutput) ToShippingZoneLocationOutputWithContext(ctx context.Context) ShippingZoneLocationOutput {
	return o
}

// A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
func (o ShippingZoneLocationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneLocation) string { return v.Country }).(pulumi.StringOutput)
}

func (o ShippingZoneLocationOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingZoneLocation) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ShippingZoneLocationArrayOutput struct{ *pulumi.OutputState }

func (ShippingZoneLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneLocation)(nil)).Elem()
}

func (o ShippingZoneLocationArrayOutput) ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput {
	return o
}

func (o ShippingZoneLocationArrayOutput) ToShippingZoneLocationArrayOutputWithContext(ctx context.Context) ShippingZoneLocationArrayOutput {
	return o
}

func (o ShippingZoneLocationArrayOutput) Index(i pulumi.IntInput) ShippingZoneLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShippingZoneLocation {
		return vs[0].([]ShippingZoneLocation)[vs[1].(int)]
	}).(ShippingZoneLocationOutput)
}

type ShippingZoneRateFreeAbove struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount int `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode string `pulumi:"currencyCode"`
}

// ShippingZoneRateFreeAboveInput is an input type that accepts ShippingZoneRateFreeAboveArgs and ShippingZoneRateFreeAboveOutput values.
// You can construct a concrete instance of `ShippingZoneRateFreeAboveInput` via:
//
//	ShippingZoneRateFreeAboveArgs{...}
type ShippingZoneRateFreeAboveInput interface {
	pulumi.Input

	ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput
	ToShippingZoneRateFreeAboveOutputWithContext(context.Context) ShippingZoneRateFreeAboveOutput
}

type ShippingZoneRateFreeAboveArgs struct {
	// The amount in cents (the smallest indivisible unit of the currency)
	CentAmount pulumi.IntInput `pulumi:"centAmount"`
	// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (ShippingZoneRateFreeAboveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput {
	return i.ToShippingZoneRateFreeAboveOutputWithContext(context.Background())
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAboveOutputWithContext(ctx context.Context) ShippingZoneRateFreeAboveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAboveOutput)
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return i.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAboveOutput).ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx)
}

// ShippingZoneRateFreeAbovePtrInput is an input type that accepts ShippingZoneRateFreeAboveArgs, ShippingZoneRateFreeAbovePtr and ShippingZoneRateFreeAbovePtrOutput values.
// You can construct a concrete instance of `ShippingZoneRateFreeAbovePtrInput` via:
//
//	        ShippingZoneRateFreeAboveArgs{...}
//
//	or:
//
//	        nil
type ShippingZoneRateFreeAbovePtrInput interface {
	pulumi.Input

	ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput
	ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Context) ShippingZoneRateFreeAbovePtrOutput
}

type shippingZoneRateFreeAbovePtrType ShippingZoneRateFreeAboveArgs

func ShippingZoneRateFreeAbovePtr(v *ShippingZoneRateFreeAboveArgs) ShippingZoneRateFreeAbovePtrInput {
	return (*shippingZoneRateFreeAbovePtrType)(v)
}

func (*shippingZoneRateFreeAbovePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (i *shippingZoneRateFreeAbovePtrType) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return i.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (i *shippingZoneRateFreeAbovePtrType) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAbovePtrOutput)
}

type ShippingZoneRateFreeAboveOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateFreeAboveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput {
	return o
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAboveOutputWithContext(ctx context.Context) ShippingZoneRateFreeAboveOutput {
	return o
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return o.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingZoneRateFreeAbove) *ShippingZoneRateFreeAbove {
		return &v
	}).(ShippingZoneRateFreeAbovePtrOutput)
}

// The amount in cents (the smallest indivisible unit of the currency)
func (o ShippingZoneRateFreeAboveOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingZoneRateFreeAbove) int { return v.CentAmount }).(pulumi.IntOutput)
}

// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
func (o ShippingZoneRateFreeAboveOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateFreeAbove) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type ShippingZoneRateFreeAbovePtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateFreeAbovePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (o ShippingZoneRateFreeAbovePtrOutput) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return o
}

func (o ShippingZoneRateFreeAbovePtrOutput) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return o
}

func (o ShippingZoneRateFreeAbovePtrOutput) Elem() ShippingZoneRateFreeAboveOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) ShippingZoneRateFreeAbove {
		if v != nil {
			return *v
		}
		var ret ShippingZoneRateFreeAbove
		return ret
	}).(ShippingZoneRateFreeAboveOutput)
}

// The amount in cents (the smallest indivisible unit of the currency)
func (o ShippingZoneRateFreeAbovePtrOutput) CentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) *int {
		if v == nil {
			return nil
		}
		return &v.CentAmount
	}).(pulumi.IntPtrOutput)
}

// The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
func (o ShippingZoneRateFreeAbovePtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

type ShippingZoneRatePrice struct {
	CentAmount   int    `pulumi:"centAmount"`
	CurrencyCode string `pulumi:"currencyCode"`
}

// ShippingZoneRatePriceInput is an input type that accepts ShippingZoneRatePriceArgs and ShippingZoneRatePriceOutput values.
// You can construct a concrete instance of `ShippingZoneRatePriceInput` via:
//
//	ShippingZoneRatePriceArgs{...}
type ShippingZoneRatePriceInput interface {
	pulumi.Input

	ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput
	ToShippingZoneRatePriceOutputWithContext(context.Context) ShippingZoneRatePriceOutput
}

type ShippingZoneRatePriceArgs struct {
	CentAmount   pulumi.IntInput    `pulumi:"centAmount"`
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (ShippingZoneRatePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRatePrice)(nil)).Elem()
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput {
	return i.ToShippingZoneRatePriceOutputWithContext(context.Background())
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePriceOutputWithContext(ctx context.Context) ShippingZoneRatePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePriceOutput)
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return i.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePriceOutput).ToShippingZoneRatePricePtrOutputWithContext(ctx)
}

// ShippingZoneRatePricePtrInput is an input type that accepts ShippingZoneRatePriceArgs, ShippingZoneRatePricePtr and ShippingZoneRatePricePtrOutput values.
// You can construct a concrete instance of `ShippingZoneRatePricePtrInput` via:
//
//	        ShippingZoneRatePriceArgs{...}
//
//	or:
//
//	        nil
type ShippingZoneRatePricePtrInput interface {
	pulumi.Input

	ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput
	ToShippingZoneRatePricePtrOutputWithContext(context.Context) ShippingZoneRatePricePtrOutput
}

type shippingZoneRatePricePtrType ShippingZoneRatePriceArgs

func ShippingZoneRatePricePtr(v *ShippingZoneRatePriceArgs) ShippingZoneRatePricePtrInput {
	return (*shippingZoneRatePricePtrType)(v)
}

func (*shippingZoneRatePricePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRatePrice)(nil)).Elem()
}

func (i *shippingZoneRatePricePtrType) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return i.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (i *shippingZoneRatePricePtrType) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePricePtrOutput)
}

type ShippingZoneRatePriceOutput struct{ *pulumi.OutputState }

func (ShippingZoneRatePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRatePrice)(nil)).Elem()
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput {
	return o
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePriceOutputWithContext(ctx context.Context) ShippingZoneRatePriceOutput {
	return o
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return o.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingZoneRatePrice) *ShippingZoneRatePrice {
		return &v
	}).(ShippingZoneRatePricePtrOutput)
}

func (o ShippingZoneRatePriceOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingZoneRatePrice) int { return v.CentAmount }).(pulumi.IntOutput)
}

func (o ShippingZoneRatePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRatePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type ShippingZoneRatePricePtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRatePricePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRatePrice)(nil)).Elem()
}

func (o ShippingZoneRatePricePtrOutput) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return o
}

func (o ShippingZoneRatePricePtrOutput) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return o
}

func (o ShippingZoneRatePricePtrOutput) Elem() ShippingZoneRatePriceOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) ShippingZoneRatePrice {
		if v != nil {
			return *v
		}
		var ret ShippingZoneRatePrice
		return ret
	}).(ShippingZoneRatePriceOutput)
}

func (o ShippingZoneRatePricePtrOutput) CentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) *int {
		if v == nil {
			return nil
		}
		return &v.CentAmount
	}).(pulumi.IntPtrOutput)
}

func (o ShippingZoneRatePricePtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

type ShippingZoneRateShippingRatePriceTier struct {
	// If type is CartValue this represents the cent amount of the tier
	MinimumCentAmount *int `pulumi:"minimumCentAmount"`
	// The price of the score, value or minimumCentAmount tier
	Price *ShippingZoneRateShippingRatePriceTierPrice `pulumi:"price"`
	// If type is CartScore. Allows to calculate a price dynamically for the score.
	PriceFunction *ShippingZoneRateShippingRatePriceTierPriceFunction `pulumi:"priceFunction"`
	// If type is CartScore. Sets a fixed price for this score value
	Score *int `pulumi:"score"`
	// CartValue, CartScore or CartClassification
	Type string `pulumi:"type"`
	// If type is CartClassification, must be a valid key of the CartClassification
	Value *string `pulumi:"value"`
}

// ShippingZoneRateShippingRatePriceTierInput is an input type that accepts ShippingZoneRateShippingRatePriceTierArgs and ShippingZoneRateShippingRatePriceTierOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierInput` via:
//
//	ShippingZoneRateShippingRatePriceTierArgs{...}
type ShippingZoneRateShippingRatePriceTierInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierOutput() ShippingZoneRateShippingRatePriceTierOutput
	ToShippingZoneRateShippingRatePriceTierOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierOutput
}

type ShippingZoneRateShippingRatePriceTierArgs struct {
	// If type is CartValue this represents the cent amount of the tier
	MinimumCentAmount pulumi.IntPtrInput `pulumi:"minimumCentAmount"`
	// The price of the score, value or minimumCentAmount tier
	Price ShippingZoneRateShippingRatePriceTierPricePtrInput `pulumi:"price"`
	// If type is CartScore. Allows to calculate a price dynamically for the score.
	PriceFunction ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput `pulumi:"priceFunction"`
	// If type is CartScore. Sets a fixed price for this score value
	Score pulumi.IntPtrInput `pulumi:"score"`
	// CartValue, CartScore or CartClassification
	Type pulumi.StringInput `pulumi:"type"`
	// If type is CartClassification, must be a valid key of the CartClassification
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ShippingZoneRateShippingRatePriceTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTier)(nil)).Elem()
}

func (i ShippingZoneRateShippingRatePriceTierArgs) ToShippingZoneRateShippingRatePriceTierOutput() ShippingZoneRateShippingRatePriceTierOutput {
	return i.ToShippingZoneRateShippingRatePriceTierOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierArgs) ToShippingZoneRateShippingRatePriceTierOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierOutput)
}

// ShippingZoneRateShippingRatePriceTierArrayInput is an input type that accepts ShippingZoneRateShippingRatePriceTierArray and ShippingZoneRateShippingRatePriceTierArrayOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierArrayInput` via:
//
//	ShippingZoneRateShippingRatePriceTierArray{ ShippingZoneRateShippingRatePriceTierArgs{...} }
type ShippingZoneRateShippingRatePriceTierArrayInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierArrayOutput() ShippingZoneRateShippingRatePriceTierArrayOutput
	ToShippingZoneRateShippingRatePriceTierArrayOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierArrayOutput
}

type ShippingZoneRateShippingRatePriceTierArray []ShippingZoneRateShippingRatePriceTierInput

func (ShippingZoneRateShippingRatePriceTierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneRateShippingRatePriceTier)(nil)).Elem()
}

func (i ShippingZoneRateShippingRatePriceTierArray) ToShippingZoneRateShippingRatePriceTierArrayOutput() ShippingZoneRateShippingRatePriceTierArrayOutput {
	return i.ToShippingZoneRateShippingRatePriceTierArrayOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierArray) ToShippingZoneRateShippingRatePriceTierArrayOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierArrayOutput)
}

type ShippingZoneRateShippingRatePriceTierOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTier)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierOutput) ToShippingZoneRateShippingRatePriceTierOutput() ShippingZoneRateShippingRatePriceTierOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierOutput) ToShippingZoneRateShippingRatePriceTierOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierOutput {
	return o
}

// If type is CartValue this represents the cent amount of the tier
func (o ShippingZoneRateShippingRatePriceTierOutput) MinimumCentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) *int { return v.MinimumCentAmount }).(pulumi.IntPtrOutput)
}

// The price of the score, value or minimumCentAmount tier
func (o ShippingZoneRateShippingRatePriceTierOutput) Price() ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) *ShippingZoneRateShippingRatePriceTierPrice {
		return v.Price
	}).(ShippingZoneRateShippingRatePriceTierPricePtrOutput)
}

// If type is CartScore. Allows to calculate a price dynamically for the score.
func (o ShippingZoneRateShippingRatePriceTierOutput) PriceFunction() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) *ShippingZoneRateShippingRatePriceTierPriceFunction {
		return v.PriceFunction
	}).(ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput)
}

// If type is CartScore. Sets a fixed price for this score value
func (o ShippingZoneRateShippingRatePriceTierOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// CartValue, CartScore or CartClassification
func (o ShippingZoneRateShippingRatePriceTierOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) string { return v.Type }).(pulumi.StringOutput)
}

// If type is CartClassification, must be a valid key of the CartClassification
func (o ShippingZoneRateShippingRatePriceTierOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTier) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ShippingZoneRateShippingRatePriceTierArrayOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneRateShippingRatePriceTier)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierArrayOutput) ToShippingZoneRateShippingRatePriceTierArrayOutput() ShippingZoneRateShippingRatePriceTierArrayOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierArrayOutput) ToShippingZoneRateShippingRatePriceTierArrayOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierArrayOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierArrayOutput) Index(i pulumi.IntInput) ShippingZoneRateShippingRatePriceTierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShippingZoneRateShippingRatePriceTier {
		return vs[0].([]ShippingZoneRateShippingRatePriceTier)[vs[1].(int)]
	}).(ShippingZoneRateShippingRatePriceTierOutput)
}

type ShippingZoneRateShippingRatePriceTierPrice struct {
	CentAmount   int    `pulumi:"centAmount"`
	CurrencyCode string `pulumi:"currencyCode"`
}

// ShippingZoneRateShippingRatePriceTierPriceInput is an input type that accepts ShippingZoneRateShippingRatePriceTierPriceArgs and ShippingZoneRateShippingRatePriceTierPriceOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierPriceInput` via:
//
//	ShippingZoneRateShippingRatePriceTierPriceArgs{...}
type ShippingZoneRateShippingRatePriceTierPriceInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierPriceOutput() ShippingZoneRateShippingRatePriceTierPriceOutput
	ToShippingZoneRateShippingRatePriceTierPriceOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierPriceOutput
}

type ShippingZoneRateShippingRatePriceTierPriceArgs struct {
	CentAmount   pulumi.IntInput    `pulumi:"centAmount"`
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (ShippingZoneRateShippingRatePriceTierPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPrice)(nil)).Elem()
}

func (i ShippingZoneRateShippingRatePriceTierPriceArgs) ToShippingZoneRateShippingRatePriceTierPriceOutput() ShippingZoneRateShippingRatePriceTierPriceOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPriceOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierPriceArgs) ToShippingZoneRateShippingRatePriceTierPriceOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPriceOutput)
}

func (i ShippingZoneRateShippingRatePriceTierPriceArgs) ToShippingZoneRateShippingRatePriceTierPricePtrOutput() ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierPriceArgs) ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPriceOutput).ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(ctx)
}

// ShippingZoneRateShippingRatePriceTierPricePtrInput is an input type that accepts ShippingZoneRateShippingRatePriceTierPriceArgs, ShippingZoneRateShippingRatePriceTierPricePtr and ShippingZoneRateShippingRatePriceTierPricePtrOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierPricePtrInput` via:
//
//	        ShippingZoneRateShippingRatePriceTierPriceArgs{...}
//
//	or:
//
//	        nil
type ShippingZoneRateShippingRatePriceTierPricePtrInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierPricePtrOutput() ShippingZoneRateShippingRatePriceTierPricePtrOutput
	ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierPricePtrOutput
}

type shippingZoneRateShippingRatePriceTierPricePtrType ShippingZoneRateShippingRatePriceTierPriceArgs

func ShippingZoneRateShippingRatePriceTierPricePtr(v *ShippingZoneRateShippingRatePriceTierPriceArgs) ShippingZoneRateShippingRatePriceTierPricePtrInput {
	return (*shippingZoneRateShippingRatePriceTierPricePtrType)(v)
}

func (*shippingZoneRateShippingRatePriceTierPricePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateShippingRatePriceTierPrice)(nil)).Elem()
}

func (i *shippingZoneRateShippingRatePriceTierPricePtrType) ToShippingZoneRateShippingRatePriceTierPricePtrOutput() ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(context.Background())
}

func (i *shippingZoneRateShippingRatePriceTierPricePtrType) ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPricePtrOutput)
}

type ShippingZoneRateShippingRatePriceTierPriceOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPrice)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) ToShippingZoneRateShippingRatePriceTierPriceOutput() ShippingZoneRateShippingRatePriceTierPriceOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) ToShippingZoneRateShippingRatePriceTierPriceOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) ToShippingZoneRateShippingRatePriceTierPricePtrOutput() ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return o.ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(context.Background())
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingZoneRateShippingRatePriceTierPrice) *ShippingZoneRateShippingRatePriceTierPrice {
		return &v
	}).(ShippingZoneRateShippingRatePriceTierPricePtrOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTierPrice) int { return v.CentAmount }).(pulumi.IntOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTierPrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type ShippingZoneRateShippingRatePriceTierPricePtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierPricePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateShippingRatePriceTierPrice)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierPricePtrOutput) ToShippingZoneRateShippingRatePriceTierPricePtrOutput() ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPricePtrOutput) ToShippingZoneRateShippingRatePriceTierPricePtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPricePtrOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPricePtrOutput) Elem() ShippingZoneRateShippingRatePriceTierPriceOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPrice) ShippingZoneRateShippingRatePriceTierPrice {
		if v != nil {
			return *v
		}
		var ret ShippingZoneRateShippingRatePriceTierPrice
		return ret
	}).(ShippingZoneRateShippingRatePriceTierPriceOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPricePtrOutput) CentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPrice) *int {
		if v == nil {
			return nil
		}
		return &v.CentAmount
	}).(pulumi.IntPtrOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPricePtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPrice) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

type ShippingZoneRateShippingRatePriceTierPriceFunction struct {
	CurrencyCode string `pulumi:"currencyCode"`
	Function     string `pulumi:"function"`
}

// ShippingZoneRateShippingRatePriceTierPriceFunctionInput is an input type that accepts ShippingZoneRateShippingRatePriceTierPriceFunctionArgs and ShippingZoneRateShippingRatePriceTierPriceFunctionOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierPriceFunctionInput` via:
//
//	ShippingZoneRateShippingRatePriceTierPriceFunctionArgs{...}
type ShippingZoneRateShippingRatePriceTierPriceFunctionInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierPriceFunctionOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionOutput
	ToShippingZoneRateShippingRatePriceTierPriceFunctionOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionOutput
}

type ShippingZoneRateShippingRatePriceTierPriceFunctionArgs struct {
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	Function     pulumi.StringInput `pulumi:"function"`
}

func (ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPriceFunction)(nil)).Elem()
}

func (i ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ToShippingZoneRateShippingRatePriceTierPriceFunctionOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPriceFunctionOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ToShippingZoneRateShippingRatePriceTierPriceFunctionOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPriceFunctionOutput)
}

func (i ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(context.Background())
}

func (i ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPriceFunctionOutput).ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(ctx)
}

// ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput is an input type that accepts ShippingZoneRateShippingRatePriceTierPriceFunctionArgs, ShippingZoneRateShippingRatePriceTierPriceFunctionPtr and ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput values.
// You can construct a concrete instance of `ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput` via:
//
//	        ShippingZoneRateShippingRatePriceTierPriceFunctionArgs{...}
//
//	or:
//
//	        nil
type ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput interface {
	pulumi.Input

	ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput
	ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput
}

type shippingZoneRateShippingRatePriceTierPriceFunctionPtrType ShippingZoneRateShippingRatePriceTierPriceFunctionArgs

func ShippingZoneRateShippingRatePriceTierPriceFunctionPtr(v *ShippingZoneRateShippingRatePriceTierPriceFunctionArgs) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput {
	return (*shippingZoneRateShippingRatePriceTierPriceFunctionPtrType)(v)
}

func (*shippingZoneRateShippingRatePriceTierPriceFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateShippingRatePriceTierPriceFunction)(nil)).Elem()
}

func (i *shippingZoneRateShippingRatePriceTierPriceFunctionPtrType) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return i.ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(context.Background())
}

func (i *shippingZoneRateShippingRatePriceTierPriceFunctionPtrType) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput)
}

type ShippingZoneRateShippingRatePriceTierPriceFunctionOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPriceFunction)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return o.ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(context.Background())
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingZoneRateShippingRatePriceTierPriceFunction) *ShippingZoneRateShippingRatePriceTierPriceFunction {
		return &v
	}).(ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTierPriceFunction) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateShippingRatePriceTierPriceFunction) string { return v.Function }).(pulumi.StringOutput)
}

type ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateShippingRatePriceTierPriceFunction)(nil)).Elem()
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput() ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) ToShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutputWithContext(ctx context.Context) ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput {
	return o
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) Elem() ShippingZoneRateShippingRatePriceTierPriceFunctionOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPriceFunction) ShippingZoneRateShippingRatePriceTierPriceFunction {
		if v != nil {
			return *v
		}
		var ret ShippingZoneRateShippingRatePriceTierPriceFunction
		return ret
	}).(ShippingZoneRateShippingRatePriceTierPriceFunctionOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPriceFunction) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

func (o ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateShippingRatePriceTierPriceFunction) *string {
		if v == nil {
			return nil
		}
		return &v.Function
	}).(pulumi.StringPtrOutput)
}

type StoreCustom struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields map[string]interface{} `pulumi:"fields"`
	TypeId string                 `pulumi:"typeId"`
}

// StoreCustomInput is an input type that accepts StoreCustomArgs and StoreCustomOutput values.
// You can construct a concrete instance of `StoreCustomInput` via:
//
//	StoreCustomArgs{...}
type StoreCustomInput interface {
	pulumi.Input

	ToStoreCustomOutput() StoreCustomOutput
	ToStoreCustomOutputWithContext(context.Context) StoreCustomOutput
}

type StoreCustomArgs struct {
	// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
	Fields pulumi.MapInput    `pulumi:"fields"`
	TypeId pulumi.StringInput `pulumi:"typeId"`
}

func (StoreCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StoreCustom)(nil)).Elem()
}

func (i StoreCustomArgs) ToStoreCustomOutput() StoreCustomOutput {
	return i.ToStoreCustomOutputWithContext(context.Background())
}

func (i StoreCustomArgs) ToStoreCustomOutputWithContext(ctx context.Context) StoreCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoreCustomOutput)
}

func (i StoreCustomArgs) ToStoreCustomPtrOutput() StoreCustomPtrOutput {
	return i.ToStoreCustomPtrOutputWithContext(context.Background())
}

func (i StoreCustomArgs) ToStoreCustomPtrOutputWithContext(ctx context.Context) StoreCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoreCustomOutput).ToStoreCustomPtrOutputWithContext(ctx)
}

// StoreCustomPtrInput is an input type that accepts StoreCustomArgs, StoreCustomPtr and StoreCustomPtrOutput values.
// You can construct a concrete instance of `StoreCustomPtrInput` via:
//
//	        StoreCustomArgs{...}
//
//	or:
//
//	        nil
type StoreCustomPtrInput interface {
	pulumi.Input

	ToStoreCustomPtrOutput() StoreCustomPtrOutput
	ToStoreCustomPtrOutputWithContext(context.Context) StoreCustomPtrOutput
}

type storeCustomPtrType StoreCustomArgs

func StoreCustomPtr(v *StoreCustomArgs) StoreCustomPtrInput {
	return (*storeCustomPtrType)(v)
}

func (*storeCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StoreCustom)(nil)).Elem()
}

func (i *storeCustomPtrType) ToStoreCustomPtrOutput() StoreCustomPtrOutput {
	return i.ToStoreCustomPtrOutputWithContext(context.Background())
}

func (i *storeCustomPtrType) ToStoreCustomPtrOutputWithContext(ctx context.Context) StoreCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoreCustomPtrOutput)
}

type StoreCustomOutput struct{ *pulumi.OutputState }

func (StoreCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoreCustom)(nil)).Elem()
}

func (o StoreCustomOutput) ToStoreCustomOutput() StoreCustomOutput {
	return o
}

func (o StoreCustomOutput) ToStoreCustomOutputWithContext(ctx context.Context) StoreCustomOutput {
	return o
}

func (o StoreCustomOutput) ToStoreCustomPtrOutput() StoreCustomPtrOutput {
	return o.ToStoreCustomPtrOutputWithContext(context.Background())
}

func (o StoreCustomOutput) ToStoreCustomPtrOutputWithContext(ctx context.Context) StoreCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StoreCustom) *StoreCustom {
		return &v
	}).(StoreCustomPtrOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o StoreCustomOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v StoreCustom) map[string]interface{} { return v.Fields }).(pulumi.MapOutput)
}

func (o StoreCustomOutput) TypeId() pulumi.StringOutput {
	return o.ApplyT(func(v StoreCustom) string { return v.TypeId }).(pulumi.StringOutput)
}

type StoreCustomPtrOutput struct{ *pulumi.OutputState }

func (StoreCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StoreCustom)(nil)).Elem()
}

func (o StoreCustomPtrOutput) ToStoreCustomPtrOutput() StoreCustomPtrOutput {
	return o
}

func (o StoreCustomPtrOutput) ToStoreCustomPtrOutputWithContext(ctx context.Context) StoreCustomPtrOutput {
	return o
}

func (o StoreCustomPtrOutput) Elem() StoreCustomOutput {
	return o.ApplyT(func(v *StoreCustom) StoreCustom {
		if v != nil {
			return *v
		}
		var ret StoreCustom
		return ret
	}).(StoreCustomOutput)
}

// Custom fields for this resource. Note that the values need to be provided as JSON encoded strings: `my-value = jsonencode({"key": "value"})`
func (o StoreCustomPtrOutput) Fields() pulumi.MapOutput {
	return o.ApplyT(func(v *StoreCustom) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.MapOutput)
}

func (o StoreCustomPtrOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoreCustom) *string {
		if v == nil {
			return nil
		}
		return &v.TypeId
	}).(pulumi.StringPtrOutput)
}

type StoreProductSelection struct {
	// If true, all Products assigned to this Product Selection are part of the Store's assortment
	Active bool `pulumi:"active"`
	// Resource Identifier of a ProductSelection
	ProductSelectionId string `pulumi:"productSelectionId"`
}

// StoreProductSelectionInput is an input type that accepts StoreProductSelectionArgs and StoreProductSelectionOutput values.
// You can construct a concrete instance of `StoreProductSelectionInput` via:
//
//	StoreProductSelectionArgs{...}
type StoreProductSelectionInput interface {
	pulumi.Input

	ToStoreProductSelectionOutput() StoreProductSelectionOutput
	ToStoreProductSelectionOutputWithContext(context.Context) StoreProductSelectionOutput
}

type StoreProductSelectionArgs struct {
	// If true, all Products assigned to this Product Selection are part of the Store's assortment
	Active pulumi.BoolInput `pulumi:"active"`
	// Resource Identifier of a ProductSelection
	ProductSelectionId pulumi.StringInput `pulumi:"productSelectionId"`
}

func (StoreProductSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StoreProductSelection)(nil)).Elem()
}

func (i StoreProductSelectionArgs) ToStoreProductSelectionOutput() StoreProductSelectionOutput {
	return i.ToStoreProductSelectionOutputWithContext(context.Background())
}

func (i StoreProductSelectionArgs) ToStoreProductSelectionOutputWithContext(ctx context.Context) StoreProductSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoreProductSelectionOutput)
}

// StoreProductSelectionArrayInput is an input type that accepts StoreProductSelectionArray and StoreProductSelectionArrayOutput values.
// You can construct a concrete instance of `StoreProductSelectionArrayInput` via:
//
//	StoreProductSelectionArray{ StoreProductSelectionArgs{...} }
type StoreProductSelectionArrayInput interface {
	pulumi.Input

	ToStoreProductSelectionArrayOutput() StoreProductSelectionArrayOutput
	ToStoreProductSelectionArrayOutputWithContext(context.Context) StoreProductSelectionArrayOutput
}

type StoreProductSelectionArray []StoreProductSelectionInput

func (StoreProductSelectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StoreProductSelection)(nil)).Elem()
}

func (i StoreProductSelectionArray) ToStoreProductSelectionArrayOutput() StoreProductSelectionArrayOutput {
	return i.ToStoreProductSelectionArrayOutputWithContext(context.Background())
}

func (i StoreProductSelectionArray) ToStoreProductSelectionArrayOutputWithContext(ctx context.Context) StoreProductSelectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoreProductSelectionArrayOutput)
}

type StoreProductSelectionOutput struct{ *pulumi.OutputState }

func (StoreProductSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoreProductSelection)(nil)).Elem()
}

func (o StoreProductSelectionOutput) ToStoreProductSelectionOutput() StoreProductSelectionOutput {
	return o
}

func (o StoreProductSelectionOutput) ToStoreProductSelectionOutputWithContext(ctx context.Context) StoreProductSelectionOutput {
	return o
}

// If true, all Products assigned to this Product Selection are part of the Store's assortment
func (o StoreProductSelectionOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v StoreProductSelection) bool { return v.Active }).(pulumi.BoolOutput)
}

// Resource Identifier of a ProductSelection
func (o StoreProductSelectionOutput) ProductSelectionId() pulumi.StringOutput {
	return o.ApplyT(func(v StoreProductSelection) string { return v.ProductSelectionId }).(pulumi.StringOutput)
}

type StoreProductSelectionArrayOutput struct{ *pulumi.OutputState }

func (StoreProductSelectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StoreProductSelection)(nil)).Elem()
}

func (o StoreProductSelectionArrayOutput) ToStoreProductSelectionArrayOutput() StoreProductSelectionArrayOutput {
	return o
}

func (o StoreProductSelectionArrayOutput) ToStoreProductSelectionArrayOutputWithContext(ctx context.Context) StoreProductSelectionArrayOutput {
	return o
}

func (o StoreProductSelectionArrayOutput) Index(i pulumi.IntInput) StoreProductSelectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StoreProductSelection {
		return vs[0].([]StoreProductSelection)[vs[1].(int)]
	}).(StoreProductSelectionOutput)
}

type SubscriptionChange struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
	ResourceTypeIds []string `pulumi:"resourceTypeIds"`
}

// SubscriptionChangeInput is an input type that accepts SubscriptionChangeArgs and SubscriptionChangeOutput values.
// You can construct a concrete instance of `SubscriptionChangeInput` via:
//
//	SubscriptionChangeArgs{...}
type SubscriptionChangeInput interface {
	pulumi.Input

	ToSubscriptionChangeOutput() SubscriptionChangeOutput
	ToSubscriptionChangeOutputWithContext(context.Context) SubscriptionChangeOutput
}

type SubscriptionChangeArgs struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
	ResourceTypeIds pulumi.StringArrayInput `pulumi:"resourceTypeIds"`
}

func (SubscriptionChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionChange)(nil)).Elem()
}

func (i SubscriptionChangeArgs) ToSubscriptionChangeOutput() SubscriptionChangeOutput {
	return i.ToSubscriptionChangeOutputWithContext(context.Background())
}

func (i SubscriptionChangeArgs) ToSubscriptionChangeOutputWithContext(ctx context.Context) SubscriptionChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionChangeOutput)
}

// SubscriptionChangeArrayInput is an input type that accepts SubscriptionChangeArray and SubscriptionChangeArrayOutput values.
// You can construct a concrete instance of `SubscriptionChangeArrayInput` via:
//
//	SubscriptionChangeArray{ SubscriptionChangeArgs{...} }
type SubscriptionChangeArrayInput interface {
	pulumi.Input

	ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput
	ToSubscriptionChangeArrayOutputWithContext(context.Context) SubscriptionChangeArrayOutput
}

type SubscriptionChangeArray []SubscriptionChangeInput

func (SubscriptionChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionChange)(nil)).Elem()
}

func (i SubscriptionChangeArray) ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput {
	return i.ToSubscriptionChangeArrayOutputWithContext(context.Background())
}

func (i SubscriptionChangeArray) ToSubscriptionChangeArrayOutputWithContext(ctx context.Context) SubscriptionChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionChangeArrayOutput)
}

type SubscriptionChangeOutput struct{ *pulumi.OutputState }

func (SubscriptionChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionChange)(nil)).Elem()
}

func (o SubscriptionChangeOutput) ToSubscriptionChangeOutput() SubscriptionChangeOutput {
	return o
}

func (o SubscriptionChangeOutput) ToSubscriptionChangeOutputWithContext(ctx context.Context) SubscriptionChangeOutput {
	return o
}

// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
func (o SubscriptionChangeOutput) ResourceTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionChange) []string { return v.ResourceTypeIds }).(pulumi.StringArrayOutput)
}

type SubscriptionChangeArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionChange)(nil)).Elem()
}

func (o SubscriptionChangeArrayOutput) ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput {
	return o
}

func (o SubscriptionChangeArrayOutput) ToSubscriptionChangeArrayOutputWithContext(ctx context.Context) SubscriptionChangeArrayOutput {
	return o
}

func (o SubscriptionChangeArrayOutput) Index(i pulumi.IntInput) SubscriptionChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionChange {
		return vs[0].([]SubscriptionChange)[vs[1].(int)]
	}).(SubscriptionChangeOutput)
}

type SubscriptionDestination struct {
	// The access key of the SQS queue, SNS topic or EventBridge topic
	AccessKey *string `pulumi:"accessKey"`
	// The access secret of the SQS queue, SNS topic or EventBridge topic
	AccessSecret *string `pulumi:"accessSecret"`
	// The AWS account ID of the SNS topic or EventBridge topic
	AccountId *string `pulumi:"accountId"`
	// The acks value of the Confluent Cloud topic
	Acks *string `pulumi:"acks"`
	// The API key of the Confluent Cloud topic
	ApiKey *string `pulumi:"apiKey"`
	// The API secret of the Confluent Cloud topic
	ApiSecret *string `pulumi:"apiSecret"`
	// The bootstrap server of the Confluent Cloud topic
	BootstrapServer *string `pulumi:"bootstrapServer"`
	// The connection string of the Azure Service Bus
	ConnectionString *string `pulumi:"connectionString"`
	// The key of the Confluent Cloud topic
	Key *string `pulumi:"key"`
	// The project ID of the Google Cloud Pub/Sub
	ProjectId *string `pulumi:"projectId"`
	// The URL of the SQS queue
	QueueUrl *string `pulumi:"queueUrl"`
	// The region of the SQS queue, SNS topic or EventBridge topic
	Region *string `pulumi:"region"`
	// The topic of the Google Cloud Pub/Sub or Confluent Cloud topic
	Topic *string `pulumi:"topic"`
	// The ARN of the SNS topic
	TopicArn *string `pulumi:"topicArn"`
	// The type of the destination. See [Destination](https://docs.commercetools.com/api/projects/subscriptions#destination) for more information
	Type string `pulumi:"type"`
	// The URI of the EventGrid topic
	Uri *string `pulumi:"uri"`
}

// SubscriptionDestinationInput is an input type that accepts SubscriptionDestinationArgs and SubscriptionDestinationOutput values.
// You can construct a concrete instance of `SubscriptionDestinationInput` via:
//
//	SubscriptionDestinationArgs{...}
type SubscriptionDestinationInput interface {
	pulumi.Input

	ToSubscriptionDestinationOutput() SubscriptionDestinationOutput
	ToSubscriptionDestinationOutputWithContext(context.Context) SubscriptionDestinationOutput
}

type SubscriptionDestinationArgs struct {
	// The access key of the SQS queue, SNS topic or EventBridge topic
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// The access secret of the SQS queue, SNS topic or EventBridge topic
	AccessSecret pulumi.StringPtrInput `pulumi:"accessSecret"`
	// The AWS account ID of the SNS topic or EventBridge topic
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The acks value of the Confluent Cloud topic
	Acks pulumi.StringPtrInput `pulumi:"acks"`
	// The API key of the Confluent Cloud topic
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The API secret of the Confluent Cloud topic
	ApiSecret pulumi.StringPtrInput `pulumi:"apiSecret"`
	// The bootstrap server of the Confluent Cloud topic
	BootstrapServer pulumi.StringPtrInput `pulumi:"bootstrapServer"`
	// The connection string of the Azure Service Bus
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The key of the Confluent Cloud topic
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The project ID of the Google Cloud Pub/Sub
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The URL of the SQS queue
	QueueUrl pulumi.StringPtrInput `pulumi:"queueUrl"`
	// The region of the SQS queue, SNS topic or EventBridge topic
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The topic of the Google Cloud Pub/Sub or Confluent Cloud topic
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// The ARN of the SNS topic
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
	// The type of the destination. See [Destination](https://docs.commercetools.com/api/projects/subscriptions#destination) for more information
	Type pulumi.StringInput `pulumi:"type"`
	// The URI of the EventGrid topic
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (SubscriptionDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionDestination)(nil)).Elem()
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationOutput() SubscriptionDestinationOutput {
	return i.ToSubscriptionDestinationOutputWithContext(context.Background())
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationOutputWithContext(ctx context.Context) SubscriptionDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationOutput)
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return i.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationOutput).ToSubscriptionDestinationPtrOutputWithContext(ctx)
}

// SubscriptionDestinationPtrInput is an input type that accepts SubscriptionDestinationArgs, SubscriptionDestinationPtr and SubscriptionDestinationPtrOutput values.
// You can construct a concrete instance of `SubscriptionDestinationPtrInput` via:
//
//	        SubscriptionDestinationArgs{...}
//
//	or:
//
//	        nil
type SubscriptionDestinationPtrInput interface {
	pulumi.Input

	ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput
	ToSubscriptionDestinationPtrOutputWithContext(context.Context) SubscriptionDestinationPtrOutput
}

type subscriptionDestinationPtrType SubscriptionDestinationArgs

func SubscriptionDestinationPtr(v *SubscriptionDestinationArgs) SubscriptionDestinationPtrInput {
	return (*subscriptionDestinationPtrType)(v)
}

func (*subscriptionDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionDestination)(nil)).Elem()
}

func (i *subscriptionDestinationPtrType) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return i.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (i *subscriptionDestinationPtrType) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationPtrOutput)
}

type SubscriptionDestinationOutput struct{ *pulumi.OutputState }

func (SubscriptionDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionDestination)(nil)).Elem()
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationOutput() SubscriptionDestinationOutput {
	return o
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationOutputWithContext(ctx context.Context) SubscriptionDestinationOutput {
	return o
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return o.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionDestination) *SubscriptionDestination {
		return &v
	}).(SubscriptionDestinationPtrOutput)
}

// The access key of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The access secret of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.AccessSecret }).(pulumi.StringPtrOutput)
}

// The AWS account ID of the SNS topic or EventBridge topic
func (o SubscriptionDestinationOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The acks value of the Confluent Cloud topic
func (o SubscriptionDestinationOutput) Acks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Acks }).(pulumi.StringPtrOutput)
}

// The API key of the Confluent Cloud topic
func (o SubscriptionDestinationOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The API secret of the Confluent Cloud topic
func (o SubscriptionDestinationOutput) ApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ApiSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap server of the Confluent Cloud topic
func (o SubscriptionDestinationOutput) BootstrapServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.BootstrapServer }).(pulumi.StringPtrOutput)
}

// The connection string of the Azure Service Bus
func (o SubscriptionDestinationOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The key of the Confluent Cloud topic
func (o SubscriptionDestinationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The project ID of the Google Cloud Pub/Sub
func (o SubscriptionDestinationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The URL of the SQS queue
func (o SubscriptionDestinationOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.QueueUrl }).(pulumi.StringPtrOutput)
}

// The region of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The topic of the Google Cloud Pub/Sub or Confluent Cloud topic
func (o SubscriptionDestinationOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// The ARN of the SNS topic
func (o SubscriptionDestinationOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

// The type of the destination. See [Destination](https://docs.commercetools.com/api/projects/subscriptions#destination) for more information
func (o SubscriptionDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionDestination) string { return v.Type }).(pulumi.StringOutput)
}

// The URI of the EventGrid topic
func (o SubscriptionDestinationOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type SubscriptionDestinationPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionDestination)(nil)).Elem()
}

func (o SubscriptionDestinationPtrOutput) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return o
}

func (o SubscriptionDestinationPtrOutput) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return o
}

func (o SubscriptionDestinationPtrOutput) Elem() SubscriptionDestinationOutput {
	return o.ApplyT(func(v *SubscriptionDestination) SubscriptionDestination {
		if v != nil {
			return *v
		}
		var ret SubscriptionDestination
		return ret
	}).(SubscriptionDestinationOutput)
}

// The access key of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The access secret of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationPtrOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessSecret
	}).(pulumi.StringPtrOutput)
}

// The AWS account ID of the SNS topic or EventBridge topic
func (o SubscriptionDestinationPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccountId
	}).(pulumi.StringPtrOutput)
}

// The acks value of the Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) Acks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Acks
	}).(pulumi.StringPtrOutput)
}

// The API key of the Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The API secret of the Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) ApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ApiSecret
	}).(pulumi.StringPtrOutput)
}

// The bootstrap server of the Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) BootstrapServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapServer
	}).(pulumi.StringPtrOutput)
}

// The connection string of the Azure Service Bus
func (o SubscriptionDestinationPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The key of the Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The project ID of the Google Cloud Pub/Sub
func (o SubscriptionDestinationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The URL of the SQS queue
func (o SubscriptionDestinationPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

// The region of the SQS queue, SNS topic or EventBridge topic
func (o SubscriptionDestinationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The topic of the Google Cloud Pub/Sub or Confluent Cloud topic
func (o SubscriptionDestinationPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// The ARN of the SNS topic
func (o SubscriptionDestinationPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// The type of the destination. See [Destination](https://docs.commercetools.com/api/projects/subscriptions#destination) for more information
func (o SubscriptionDestinationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The URI of the EventGrid topic
func (o SubscriptionDestinationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type SubscriptionFormat struct {
	// For CloudEvents
	CloudEventsVersion *string `pulumi:"cloudEventsVersion"`
	Type               *string `pulumi:"type"`
}

// SubscriptionFormatInput is an input type that accepts SubscriptionFormatArgs and SubscriptionFormatOutput values.
// You can construct a concrete instance of `SubscriptionFormatInput` via:
//
//	SubscriptionFormatArgs{...}
type SubscriptionFormatInput interface {
	pulumi.Input

	ToSubscriptionFormatOutput() SubscriptionFormatOutput
	ToSubscriptionFormatOutputWithContext(context.Context) SubscriptionFormatOutput
}

type SubscriptionFormatArgs struct {
	// For CloudEvents
	CloudEventsVersion pulumi.StringPtrInput `pulumi:"cloudEventsVersion"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
}

func (SubscriptionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionFormat)(nil)).Elem()
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatOutput() SubscriptionFormatOutput {
	return i.ToSubscriptionFormatOutputWithContext(context.Background())
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatOutputWithContext(ctx context.Context) SubscriptionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatOutput)
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return i.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatOutput).ToSubscriptionFormatPtrOutputWithContext(ctx)
}

// SubscriptionFormatPtrInput is an input type that accepts SubscriptionFormatArgs, SubscriptionFormatPtr and SubscriptionFormatPtrOutput values.
// You can construct a concrete instance of `SubscriptionFormatPtrInput` via:
//
//	        SubscriptionFormatArgs{...}
//
//	or:
//
//	        nil
type SubscriptionFormatPtrInput interface {
	pulumi.Input

	ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput
	ToSubscriptionFormatPtrOutputWithContext(context.Context) SubscriptionFormatPtrOutput
}

type subscriptionFormatPtrType SubscriptionFormatArgs

func SubscriptionFormatPtr(v *SubscriptionFormatArgs) SubscriptionFormatPtrInput {
	return (*subscriptionFormatPtrType)(v)
}

func (*subscriptionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionFormat)(nil)).Elem()
}

func (i *subscriptionFormatPtrType) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return i.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (i *subscriptionFormatPtrType) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatPtrOutput)
}

type SubscriptionFormatOutput struct{ *pulumi.OutputState }

func (SubscriptionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionFormat)(nil)).Elem()
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatOutput() SubscriptionFormatOutput {
	return o
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatOutputWithContext(ctx context.Context) SubscriptionFormatOutput {
	return o
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return o.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionFormat) *SubscriptionFormat {
		return &v
	}).(SubscriptionFormatPtrOutput)
}

// For CloudEvents
func (o SubscriptionFormatOutput) CloudEventsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionFormat) *string { return v.CloudEventsVersion }).(pulumi.StringPtrOutput)
}

func (o SubscriptionFormatOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionFormat) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubscriptionFormatPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionFormat)(nil)).Elem()
}

func (o SubscriptionFormatPtrOutput) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return o
}

func (o SubscriptionFormatPtrOutput) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return o
}

func (o SubscriptionFormatPtrOutput) Elem() SubscriptionFormatOutput {
	return o.ApplyT(func(v *SubscriptionFormat) SubscriptionFormat {
		if v != nil {
			return *v
		}
		var ret SubscriptionFormat
		return ret
	}).(SubscriptionFormatOutput)
}

// For CloudEvents
func (o SubscriptionFormatPtrOutput) CloudEventsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionFormat) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventsVersion
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionFormatPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionFormat) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubscriptionMessage struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
	ResourceTypeId string `pulumi:"resourceTypeId"`
	// types must contain valid message types for this resource, for example for resource type product the message type ProductPublished is valid. If no types of messages are given, the subscription is valid for all messages of this resource
	Types []string `pulumi:"types"`
}

// SubscriptionMessageInput is an input type that accepts SubscriptionMessageArgs and SubscriptionMessageOutput values.
// You can construct a concrete instance of `SubscriptionMessageInput` via:
//
//	SubscriptionMessageArgs{...}
type SubscriptionMessageInput interface {
	pulumi.Input

	ToSubscriptionMessageOutput() SubscriptionMessageOutput
	ToSubscriptionMessageOutputWithContext(context.Context) SubscriptionMessageOutput
}

type SubscriptionMessageArgs struct {
	// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
	ResourceTypeId pulumi.StringInput `pulumi:"resourceTypeId"`
	// types must contain valid message types for this resource, for example for resource type product the message type ProductPublished is valid. If no types of messages are given, the subscription is valid for all messages of this resource
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SubscriptionMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionMessage)(nil)).Elem()
}

func (i SubscriptionMessageArgs) ToSubscriptionMessageOutput() SubscriptionMessageOutput {
	return i.ToSubscriptionMessageOutputWithContext(context.Background())
}

func (i SubscriptionMessageArgs) ToSubscriptionMessageOutputWithContext(ctx context.Context) SubscriptionMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionMessageOutput)
}

// SubscriptionMessageArrayInput is an input type that accepts SubscriptionMessageArray and SubscriptionMessageArrayOutput values.
// You can construct a concrete instance of `SubscriptionMessageArrayInput` via:
//
//	SubscriptionMessageArray{ SubscriptionMessageArgs{...} }
type SubscriptionMessageArrayInput interface {
	pulumi.Input

	ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput
	ToSubscriptionMessageArrayOutputWithContext(context.Context) SubscriptionMessageArrayOutput
}

type SubscriptionMessageArray []SubscriptionMessageInput

func (SubscriptionMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionMessage)(nil)).Elem()
}

func (i SubscriptionMessageArray) ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput {
	return i.ToSubscriptionMessageArrayOutputWithContext(context.Background())
}

func (i SubscriptionMessageArray) ToSubscriptionMessageArrayOutputWithContext(ctx context.Context) SubscriptionMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionMessageArrayOutput)
}

type SubscriptionMessageOutput struct{ *pulumi.OutputState }

func (SubscriptionMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionMessage)(nil)).Elem()
}

func (o SubscriptionMessageOutput) ToSubscriptionMessageOutput() SubscriptionMessageOutput {
	return o
}

func (o SubscriptionMessageOutput) ToSubscriptionMessageOutputWithContext(ctx context.Context) SubscriptionMessageOutput {
	return o
}

// [Resource Type ID](https://docs.commercetools.com/api/projects/subscriptions#changesubscription)
func (o SubscriptionMessageOutput) ResourceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionMessage) string { return v.ResourceTypeId }).(pulumi.StringOutput)
}

// types must contain valid message types for this resource, for example for resource type product the message type ProductPublished is valid. If no types of messages are given, the subscription is valid for all messages of this resource
func (o SubscriptionMessageOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionMessage) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SubscriptionMessageArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionMessage)(nil)).Elem()
}

func (o SubscriptionMessageArrayOutput) ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput {
	return o
}

func (o SubscriptionMessageArrayOutput) ToSubscriptionMessageArrayOutputWithContext(ctx context.Context) SubscriptionMessageArrayOutput {
	return o
}

func (o SubscriptionMessageArrayOutput) Index(i pulumi.IntInput) SubscriptionMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionMessage {
		return vs[0].([]SubscriptionMessage)[vs[1].(int)]
	}).(SubscriptionMessageOutput)
}

type TaxCategoryRateSubRate struct {
	// Number Percentage in the range of [0..1]
	Amount float64 `pulumi:"amount"`
	Name   string  `pulumi:"name"`
}

// TaxCategoryRateSubRateInput is an input type that accepts TaxCategoryRateSubRateArgs and TaxCategoryRateSubRateOutput values.
// You can construct a concrete instance of `TaxCategoryRateSubRateInput` via:
//
//	TaxCategoryRateSubRateArgs{...}
type TaxCategoryRateSubRateInput interface {
	pulumi.Input

	ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput
	ToTaxCategoryRateSubRateOutputWithContext(context.Context) TaxCategoryRateSubRateOutput
}

type TaxCategoryRateSubRateArgs struct {
	// Number Percentage in the range of [0..1]
	Amount pulumi.Float64Input `pulumi:"amount"`
	Name   pulumi.StringInput  `pulumi:"name"`
}

func (TaxCategoryRateSubRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaxCategoryRateSubRate)(nil)).Elem()
}

func (i TaxCategoryRateSubRateArgs) ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput {
	return i.ToTaxCategoryRateSubRateOutputWithContext(context.Background())
}

func (i TaxCategoryRateSubRateArgs) ToTaxCategoryRateSubRateOutputWithContext(ctx context.Context) TaxCategoryRateSubRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxCategoryRateSubRateOutput)
}

// TaxCategoryRateSubRateArrayInput is an input type that accepts TaxCategoryRateSubRateArray and TaxCategoryRateSubRateArrayOutput values.
// You can construct a concrete instance of `TaxCategoryRateSubRateArrayInput` via:
//
//	TaxCategoryRateSubRateArray{ TaxCategoryRateSubRateArgs{...} }
type TaxCategoryRateSubRateArrayInput interface {
	pulumi.Input

	ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput
	ToTaxCategoryRateSubRateArrayOutputWithContext(context.Context) TaxCategoryRateSubRateArrayOutput
}

type TaxCategoryRateSubRateArray []TaxCategoryRateSubRateInput

func (TaxCategoryRateSubRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxCategoryRateSubRate)(nil)).Elem()
}

func (i TaxCategoryRateSubRateArray) ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput {
	return i.ToTaxCategoryRateSubRateArrayOutputWithContext(context.Background())
}

func (i TaxCategoryRateSubRateArray) ToTaxCategoryRateSubRateArrayOutputWithContext(ctx context.Context) TaxCategoryRateSubRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxCategoryRateSubRateArrayOutput)
}

type TaxCategoryRateSubRateOutput struct{ *pulumi.OutputState }

func (TaxCategoryRateSubRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaxCategoryRateSubRate)(nil)).Elem()
}

func (o TaxCategoryRateSubRateOutput) ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput {
	return o
}

func (o TaxCategoryRateSubRateOutput) ToTaxCategoryRateSubRateOutputWithContext(ctx context.Context) TaxCategoryRateSubRateOutput {
	return o
}

// Number Percentage in the range of [0..1]
func (o TaxCategoryRateSubRateOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v TaxCategoryRateSubRate) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o TaxCategoryRateSubRateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaxCategoryRateSubRate) string { return v.Name }).(pulumi.StringOutput)
}

type TaxCategoryRateSubRateArrayOutput struct{ *pulumi.OutputState }

func (TaxCategoryRateSubRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxCategoryRateSubRate)(nil)).Elem()
}

func (o TaxCategoryRateSubRateArrayOutput) ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput {
	return o
}

func (o TaxCategoryRateSubRateArrayOutput) ToTaxCategoryRateSubRateArrayOutputWithContext(ctx context.Context) TaxCategoryRateSubRateArrayOutput {
	return o
}

func (o TaxCategoryRateSubRateArrayOutput) Index(i pulumi.IntInput) TaxCategoryRateSubRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaxCategoryRateSubRate {
		return vs[0].([]TaxCategoryRateSubRate)[vs[1].(int)]
	}).(TaxCategoryRateSubRateOutput)
}

type TypeField struct {
	// [TextInputHint](https://docs.commercetools.com/api/projects/types#textinputhint) Provides a visual representation type for this field. It is only relevant for string-based field types like StringType and LocalizedStringType
	InputHint *string `pulumi:"inputHint"`
	// A human-readable label for the field
	Label map[string]interface{} `pulumi:"label"`
	// The name of the field.
	// The name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
	// The name must be unique for a given resource type ID. In case there is a field with the same name in another type it has to have the same FieldType also
	Name string `pulumi:"name"`
	// Whether the field is required to have a value
	Required *bool `pulumi:"required"`
	// Describes the [type](https://docs.commercetools.com/api/projects/types#fieldtype) of the field
	Type TypeFieldType `pulumi:"type"`
}

// TypeFieldInput is an input type that accepts TypeFieldArgs and TypeFieldOutput values.
// You can construct a concrete instance of `TypeFieldInput` via:
//
//	TypeFieldArgs{...}
type TypeFieldInput interface {
	pulumi.Input

	ToTypeFieldOutput() TypeFieldOutput
	ToTypeFieldOutputWithContext(context.Context) TypeFieldOutput
}

type TypeFieldArgs struct {
	// [TextInputHint](https://docs.commercetools.com/api/projects/types#textinputhint) Provides a visual representation type for this field. It is only relevant for string-based field types like StringType and LocalizedStringType
	InputHint pulumi.StringPtrInput `pulumi:"inputHint"`
	// A human-readable label for the field
	Label pulumi.MapInput `pulumi:"label"`
	// The name of the field.
	// The name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
	// The name must be unique for a given resource type ID. In case there is a field with the same name in another type it has to have the same FieldType also
	Name pulumi.StringInput `pulumi:"name"`
	// Whether the field is required to have a value
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Describes the [type](https://docs.commercetools.com/api/projects/types#fieldtype) of the field
	Type TypeFieldTypeInput `pulumi:"type"`
}

func (TypeFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeField)(nil)).Elem()
}

func (i TypeFieldArgs) ToTypeFieldOutput() TypeFieldOutput {
	return i.ToTypeFieldOutputWithContext(context.Background())
}

func (i TypeFieldArgs) ToTypeFieldOutputWithContext(ctx context.Context) TypeFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldOutput)
}

// TypeFieldArrayInput is an input type that accepts TypeFieldArray and TypeFieldArrayOutput values.
// You can construct a concrete instance of `TypeFieldArrayInput` via:
//
//	TypeFieldArray{ TypeFieldArgs{...} }
type TypeFieldArrayInput interface {
	pulumi.Input

	ToTypeFieldArrayOutput() TypeFieldArrayOutput
	ToTypeFieldArrayOutputWithContext(context.Context) TypeFieldArrayOutput
}

type TypeFieldArray []TypeFieldInput

func (TypeFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeField)(nil)).Elem()
}

func (i TypeFieldArray) ToTypeFieldArrayOutput() TypeFieldArrayOutput {
	return i.ToTypeFieldArrayOutputWithContext(context.Background())
}

func (i TypeFieldArray) ToTypeFieldArrayOutputWithContext(ctx context.Context) TypeFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldArrayOutput)
}

type TypeFieldOutput struct{ *pulumi.OutputState }

func (TypeFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeField)(nil)).Elem()
}

func (o TypeFieldOutput) ToTypeFieldOutput() TypeFieldOutput {
	return o
}

func (o TypeFieldOutput) ToTypeFieldOutputWithContext(ctx context.Context) TypeFieldOutput {
	return o
}

// [TextInputHint](https://docs.commercetools.com/api/projects/types#textinputhint) Provides a visual representation type for this field. It is only relevant for string-based field types like StringType and LocalizedStringType
func (o TypeFieldOutput) InputHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeField) *string { return v.InputHint }).(pulumi.StringPtrOutput)
}

// A human-readable label for the field
func (o TypeFieldOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeField) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

// The name of the field.
// The name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-).
// The name must be unique for a given resource type ID. In case there is a field with the same name in another type it has to have the same FieldType also
func (o TypeFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeField) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the field is required to have a value
func (o TypeFieldOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TypeField) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Describes the [type](https://docs.commercetools.com/api/projects/types#fieldtype) of the field
func (o TypeFieldOutput) Type() TypeFieldTypeOutput {
	return o.ApplyT(func(v TypeField) TypeFieldType { return v.Type }).(TypeFieldTypeOutput)
}

type TypeFieldArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeField)(nil)).Elem()
}

func (o TypeFieldArrayOutput) ToTypeFieldArrayOutput() TypeFieldArrayOutput {
	return o
}

func (o TypeFieldArrayOutput) ToTypeFieldArrayOutputWithContext(ctx context.Context) TypeFieldArrayOutput {
	return o
}

func (o TypeFieldArrayOutput) Index(i pulumi.IntInput) TypeFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeField {
		return vs[0].([]TypeField)[vs[1].(int)]
	}).(TypeFieldOutput)
}

type TypeFieldType struct {
	ElementType2 *TypeFieldTypeElementType2 `pulumi:"ElementType2"`
	// Localized values for the `lenum` type.
	LocalizedValues []TypeFieldTypeLocalizedValue `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
	Name string `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `Reference`
	ReferenceTypeId *string `pulumi:"referenceTypeId"`
	// Values for the `enum` type.
	Values []TypeFieldTypeValue `pulumi:"values"`
}

// TypeFieldTypeInput is an input type that accepts TypeFieldTypeArgs and TypeFieldTypeOutput values.
// You can construct a concrete instance of `TypeFieldTypeInput` via:
//
//	TypeFieldTypeArgs{...}
type TypeFieldTypeInput interface {
	pulumi.Input

	ToTypeFieldTypeOutput() TypeFieldTypeOutput
	ToTypeFieldTypeOutputWithContext(context.Context) TypeFieldTypeOutput
}

type TypeFieldTypeArgs struct {
	ElementType2 TypeFieldTypeElementType2PtrInput `pulumi:"ElementType2"`
	// Localized values for the `lenum` type.
	LocalizedValues TypeFieldTypeLocalizedValueArrayInput `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `Reference`
	ReferenceTypeId pulumi.StringPtrInput `pulumi:"referenceTypeId"`
	// Values for the `enum` type.
	Values TypeFieldTypeValueArrayInput `pulumi:"values"`
}

func (TypeFieldTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldType)(nil)).Elem()
}

func (i TypeFieldTypeArgs) ToTypeFieldTypeOutput() TypeFieldTypeOutput {
	return i.ToTypeFieldTypeOutputWithContext(context.Background())
}

func (i TypeFieldTypeArgs) ToTypeFieldTypeOutputWithContext(ctx context.Context) TypeFieldTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeOutput)
}

type TypeFieldTypeOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldType)(nil)).Elem()
}

func (o TypeFieldTypeOutput) ToTypeFieldTypeOutput() TypeFieldTypeOutput {
	return o
}

func (o TypeFieldTypeOutput) ToTypeFieldTypeOutputWithContext(ctx context.Context) TypeFieldTypeOutput {
	return o
}

func (o TypeFieldTypeOutput) ElementType2() TypeFieldTypeElementType2PtrOutput {
	return o.ApplyT(func(v TypeFieldType) *TypeFieldTypeElementType2 { return v.ElementType2 }).(TypeFieldTypeElementType2PtrOutput)
}

// Localized values for the `lenum` type.
func (o TypeFieldTypeOutput) LocalizedValues() TypeFieldTypeLocalizedValueArrayOutput {
	return o.ApplyT(func(v TypeFieldType) []TypeFieldTypeLocalizedValue { return v.LocalizedValues }).(TypeFieldTypeLocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
func (o TypeFieldTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldType) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type the Custom Field can reference. Required when type is `Reference`
func (o TypeFieldTypeOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeFieldType) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o TypeFieldTypeOutput) Values() TypeFieldTypeValueArrayOutput {
	return o.ApplyT(func(v TypeFieldType) []TypeFieldTypeValue { return v.Values }).(TypeFieldTypeValueArrayOutput)
}

type TypeFieldTypeElementType2 struct {
	// Localized values for the `lenum` type.
	LocalizedValues []TypeFieldTypeElementType2LocalizedValue `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
	Name string `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `Reference`
	ReferenceTypeId *string `pulumi:"referenceTypeId"`
	// Values for the `enum` type.
	Values []TypeFieldTypeElementType2Value `pulumi:"values"`
}

// TypeFieldTypeElementType2Input is an input type that accepts TypeFieldTypeElementType2Args and TypeFieldTypeElementType2Output values.
// You can construct a concrete instance of `TypeFieldTypeElementType2Input` via:
//
//	TypeFieldTypeElementType2Args{...}
type TypeFieldTypeElementType2Input interface {
	pulumi.Input

	ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output
	ToTypeFieldTypeElementType2OutputWithContext(context.Context) TypeFieldTypeElementType2Output
}

type TypeFieldTypeElementType2Args struct {
	// Localized values for the `lenum` type.
	LocalizedValues TypeFieldTypeElementType2LocalizedValueArrayInput `pulumi:"localizedValues"`
	// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type the Custom Field can reference. Required when type is `Reference`
	ReferenceTypeId pulumi.StringPtrInput `pulumi:"referenceTypeId"`
	// Values for the `enum` type.
	Values TypeFieldTypeElementType2ValueArrayInput `pulumi:"values"`
}

func (TypeFieldTypeElementType2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2)(nil)).Elem()
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output {
	return i.ToTypeFieldTypeElementType2OutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2OutputWithContext(ctx context.Context) TypeFieldTypeElementType2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2Output)
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return i.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2Output).ToTypeFieldTypeElementType2PtrOutputWithContext(ctx)
}

// TypeFieldTypeElementType2PtrInput is an input type that accepts TypeFieldTypeElementType2Args, TypeFieldTypeElementType2Ptr and TypeFieldTypeElementType2PtrOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2PtrInput` via:
//
//	        TypeFieldTypeElementType2Args{...}
//
//	or:
//
//	        nil
type TypeFieldTypeElementType2PtrInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput
	ToTypeFieldTypeElementType2PtrOutputWithContext(context.Context) TypeFieldTypeElementType2PtrOutput
}

type typeFieldTypeElementType2PtrType TypeFieldTypeElementType2Args

func TypeFieldTypeElementType2Ptr(v *TypeFieldTypeElementType2Args) TypeFieldTypeElementType2PtrInput {
	return (*typeFieldTypeElementType2PtrType)(v)
}

func (*typeFieldTypeElementType2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeFieldTypeElementType2)(nil)).Elem()
}

func (i *typeFieldTypeElementType2PtrType) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return i.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (i *typeFieldTypeElementType2PtrType) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2PtrOutput)
}

type TypeFieldTypeElementType2Output struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2)(nil)).Elem()
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output {
	return o
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2OutputWithContext(ctx context.Context) TypeFieldTypeElementType2Output {
	return o
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return o.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TypeFieldTypeElementType2) *TypeFieldTypeElementType2 {
		return &v
	}).(TypeFieldTypeElementType2PtrOutput)
}

// Localized values for the `lenum` type.
func (o TypeFieldTypeElementType2Output) LocalizedValues() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) []TypeFieldTypeElementType2LocalizedValue { return v.LocalizedValues }).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
func (o TypeFieldTypeElementType2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type the Custom Field can reference. Required when type is `Reference`
func (o TypeFieldTypeElementType2Output) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o TypeFieldTypeElementType2Output) Values() TypeFieldTypeElementType2ValueArrayOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) []TypeFieldTypeElementType2Value { return v.Values }).(TypeFieldTypeElementType2ValueArrayOutput)
}

type TypeFieldTypeElementType2PtrOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeFieldTypeElementType2)(nil)).Elem()
}

func (o TypeFieldTypeElementType2PtrOutput) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return o
}

func (o TypeFieldTypeElementType2PtrOutput) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return o
}

func (o TypeFieldTypeElementType2PtrOutput) Elem() TypeFieldTypeElementType2Output {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) TypeFieldTypeElementType2 {
		if v != nil {
			return *v
		}
		var ret TypeFieldTypeElementType2
		return ret
	}).(TypeFieldTypeElementType2Output)
}

// Localized values for the `lenum` type.
func (o TypeFieldTypeElementType2PtrOutput) LocalizedValues() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) []TypeFieldTypeElementType2LocalizedValue {
		if v == nil {
			return nil
		}
		return v.LocalizedValues
	}).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

// Name of the field type. Some types require extra fields to be set. Note that changing the type after creating is not supported. You need to delete the attribute and re-add it.
func (o TypeFieldTypeElementType2PtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type the Custom Field can reference. Required when type is `Reference`
func (o TypeFieldTypeElementType2PtrOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceTypeId
	}).(pulumi.StringPtrOutput)
}

// Values for the `enum` type.
func (o TypeFieldTypeElementType2PtrOutput) Values() TypeFieldTypeElementType2ValueArrayOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) []TypeFieldTypeElementType2Value {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TypeFieldTypeElementType2ValueArrayOutput)
}

type TypeFieldTypeElementType2LocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// TypeFieldTypeElementType2LocalizedValueInput is an input type that accepts TypeFieldTypeElementType2LocalizedValueArgs and TypeFieldTypeElementType2LocalizedValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2LocalizedValueInput` via:
//
//	TypeFieldTypeElementType2LocalizedValueArgs{...}
type TypeFieldTypeElementType2LocalizedValueInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput
	ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(context.Context) TypeFieldTypeElementType2LocalizedValueOutput
}

type TypeFieldTypeElementType2LocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (TypeFieldTypeElementType2LocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeElementType2LocalizedValueArgs) ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput {
	return i.ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2LocalizedValueArgs) ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2LocalizedValueOutput)
}

// TypeFieldTypeElementType2LocalizedValueArrayInput is an input type that accepts TypeFieldTypeElementType2LocalizedValueArray and TypeFieldTypeElementType2LocalizedValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2LocalizedValueArrayInput` via:
//
//	TypeFieldTypeElementType2LocalizedValueArray{ TypeFieldTypeElementType2LocalizedValueArgs{...} }
type TypeFieldTypeElementType2LocalizedValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput
	ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput
}

type TypeFieldTypeElementType2LocalizedValueArray []TypeFieldTypeElementType2LocalizedValueInput

func (TypeFieldTypeElementType2LocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeElementType2LocalizedValueArray) ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return i.ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2LocalizedValueArray) ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

type TypeFieldTypeElementType2LocalizedValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2LocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2LocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2LocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type TypeFieldTypeElementType2LocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2LocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeElementType2LocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeElementType2LocalizedValue {
		return vs[0].([]TypeFieldTypeElementType2LocalizedValue)[vs[1].(int)]
	}).(TypeFieldTypeElementType2LocalizedValueOutput)
}

type TypeFieldTypeElementType2Value struct {
	Key   string `pulumi:"key"`
	Label string `pulumi:"label"`
}

// TypeFieldTypeElementType2ValueInput is an input type that accepts TypeFieldTypeElementType2ValueArgs and TypeFieldTypeElementType2ValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2ValueInput` via:
//
//	TypeFieldTypeElementType2ValueArgs{...}
type TypeFieldTypeElementType2ValueInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2ValueOutput() TypeFieldTypeElementType2ValueOutput
	ToTypeFieldTypeElementType2ValueOutputWithContext(context.Context) TypeFieldTypeElementType2ValueOutput
}

type TypeFieldTypeElementType2ValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.StringInput `pulumi:"label"`
}

func (TypeFieldTypeElementType2ValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2Value)(nil)).Elem()
}

func (i TypeFieldTypeElementType2ValueArgs) ToTypeFieldTypeElementType2ValueOutput() TypeFieldTypeElementType2ValueOutput {
	return i.ToTypeFieldTypeElementType2ValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2ValueArgs) ToTypeFieldTypeElementType2ValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2ValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2ValueOutput)
}

// TypeFieldTypeElementType2ValueArrayInput is an input type that accepts TypeFieldTypeElementType2ValueArray and TypeFieldTypeElementType2ValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2ValueArrayInput` via:
//
//	TypeFieldTypeElementType2ValueArray{ TypeFieldTypeElementType2ValueArgs{...} }
type TypeFieldTypeElementType2ValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2ValueArrayOutput() TypeFieldTypeElementType2ValueArrayOutput
	ToTypeFieldTypeElementType2ValueArrayOutputWithContext(context.Context) TypeFieldTypeElementType2ValueArrayOutput
}

type TypeFieldTypeElementType2ValueArray []TypeFieldTypeElementType2ValueInput

func (TypeFieldTypeElementType2ValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2Value)(nil)).Elem()
}

func (i TypeFieldTypeElementType2ValueArray) ToTypeFieldTypeElementType2ValueArrayOutput() TypeFieldTypeElementType2ValueArrayOutput {
	return i.ToTypeFieldTypeElementType2ValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2ValueArray) ToTypeFieldTypeElementType2ValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2ValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2ValueArrayOutput)
}

type TypeFieldTypeElementType2ValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2ValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2Value)(nil)).Elem()
}

func (o TypeFieldTypeElementType2ValueOutput) ToTypeFieldTypeElementType2ValueOutput() TypeFieldTypeElementType2ValueOutput {
	return o
}

func (o TypeFieldTypeElementType2ValueOutput) ToTypeFieldTypeElementType2ValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2ValueOutput {
	return o
}

func (o TypeFieldTypeElementType2ValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2Value) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeElementType2ValueOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2Value) string { return v.Label }).(pulumi.StringOutput)
}

type TypeFieldTypeElementType2ValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2ValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2Value)(nil)).Elem()
}

func (o TypeFieldTypeElementType2ValueArrayOutput) ToTypeFieldTypeElementType2ValueArrayOutput() TypeFieldTypeElementType2ValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2ValueArrayOutput) ToTypeFieldTypeElementType2ValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2ValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2ValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeElementType2ValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeElementType2Value {
		return vs[0].([]TypeFieldTypeElementType2Value)[vs[1].(int)]
	}).(TypeFieldTypeElementType2ValueOutput)
}

type TypeFieldTypeLocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// TypeFieldTypeLocalizedValueInput is an input type that accepts TypeFieldTypeLocalizedValueArgs and TypeFieldTypeLocalizedValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeLocalizedValueInput` via:
//
//	TypeFieldTypeLocalizedValueArgs{...}
type TypeFieldTypeLocalizedValueInput interface {
	pulumi.Input

	ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput
	ToTypeFieldTypeLocalizedValueOutputWithContext(context.Context) TypeFieldTypeLocalizedValueOutput
}

type TypeFieldTypeLocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (TypeFieldTypeLocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeLocalizedValueArgs) ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput {
	return i.ToTypeFieldTypeLocalizedValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeLocalizedValueArgs) ToTypeFieldTypeLocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeLocalizedValueOutput)
}

// TypeFieldTypeLocalizedValueArrayInput is an input type that accepts TypeFieldTypeLocalizedValueArray and TypeFieldTypeLocalizedValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeLocalizedValueArrayInput` via:
//
//	TypeFieldTypeLocalizedValueArray{ TypeFieldTypeLocalizedValueArgs{...} }
type TypeFieldTypeLocalizedValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput
	ToTypeFieldTypeLocalizedValueArrayOutputWithContext(context.Context) TypeFieldTypeLocalizedValueArrayOutput
}

type TypeFieldTypeLocalizedValueArray []TypeFieldTypeLocalizedValueInput

func (TypeFieldTypeLocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeLocalizedValueArray) ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput {
	return i.ToTypeFieldTypeLocalizedValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeLocalizedValueArray) ToTypeFieldTypeLocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeLocalizedValueArrayOutput)
}

type TypeFieldTypeLocalizedValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeLocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeLocalizedValueOutput) ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueOutput) ToTypeFieldTypeLocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeLocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeLocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldTypeLocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type TypeFieldTypeLocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeLocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeLocalizedValueArrayOutput) ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueArrayOutput) ToTypeFieldTypeLocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeLocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeLocalizedValue {
		return vs[0].([]TypeFieldTypeLocalizedValue)[vs[1].(int)]
	}).(TypeFieldTypeLocalizedValueOutput)
}

type TypeFieldTypeValue struct {
	Key   string `pulumi:"key"`
	Label string `pulumi:"label"`
}

// TypeFieldTypeValueInput is an input type that accepts TypeFieldTypeValueArgs and TypeFieldTypeValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeValueInput` via:
//
//	TypeFieldTypeValueArgs{...}
type TypeFieldTypeValueInput interface {
	pulumi.Input

	ToTypeFieldTypeValueOutput() TypeFieldTypeValueOutput
	ToTypeFieldTypeValueOutputWithContext(context.Context) TypeFieldTypeValueOutput
}

type TypeFieldTypeValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.StringInput `pulumi:"label"`
}

func (TypeFieldTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeValue)(nil)).Elem()
}

func (i TypeFieldTypeValueArgs) ToTypeFieldTypeValueOutput() TypeFieldTypeValueOutput {
	return i.ToTypeFieldTypeValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeValueArgs) ToTypeFieldTypeValueOutputWithContext(ctx context.Context) TypeFieldTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeValueOutput)
}

// TypeFieldTypeValueArrayInput is an input type that accepts TypeFieldTypeValueArray and TypeFieldTypeValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeValueArrayInput` via:
//
//	TypeFieldTypeValueArray{ TypeFieldTypeValueArgs{...} }
type TypeFieldTypeValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeValueArrayOutput() TypeFieldTypeValueArrayOutput
	ToTypeFieldTypeValueArrayOutputWithContext(context.Context) TypeFieldTypeValueArrayOutput
}

type TypeFieldTypeValueArray []TypeFieldTypeValueInput

func (TypeFieldTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeValue)(nil)).Elem()
}

func (i TypeFieldTypeValueArray) ToTypeFieldTypeValueArrayOutput() TypeFieldTypeValueArrayOutput {
	return i.ToTypeFieldTypeValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeValueArray) ToTypeFieldTypeValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeValueArrayOutput)
}

type TypeFieldTypeValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeValue)(nil)).Elem()
}

func (o TypeFieldTypeValueOutput) ToTypeFieldTypeValueOutput() TypeFieldTypeValueOutput {
	return o
}

func (o TypeFieldTypeValueOutput) ToTypeFieldTypeValueOutputWithContext(ctx context.Context) TypeFieldTypeValueOutput {
	return o
}

func (o TypeFieldTypeValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeValueOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeValue) string { return v.Label }).(pulumi.StringOutput)
}

type TypeFieldTypeValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeValue)(nil)).Elem()
}

func (o TypeFieldTypeValueArrayOutput) ToTypeFieldTypeValueArrayOutput() TypeFieldTypeValueArrayOutput {
	return o
}

func (o TypeFieldTypeValueArrayOutput) ToTypeFieldTypeValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeValueArrayOutput {
	return o
}

func (o TypeFieldTypeValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeValue {
		return vs[0].([]TypeFieldTypeValue)[vs[1].(int)]
	}).(TypeFieldTypeValueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiExtensionDestinationInput)(nil)).Elem(), ApiExtensionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiExtensionDestinationPtrInput)(nil)).Elem(), ApiExtensionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiExtensionTriggerInput)(nil)).Elem(), ApiExtensionTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiExtensionTriggerArrayInput)(nil)).Elem(), ApiExtensionTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeGroupAttributeInput)(nil)).Elem(), AttributeGroupAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeGroupAttributeArrayInput)(nil)).Elem(), AttributeGroupAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountCustomInput)(nil)).Elem(), CartDiscountCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountCustomPtrInput)(nil)).Elem(), CartDiscountCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountTargetInput)(nil)).Elem(), CartDiscountTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountTargetPtrInput)(nil)).Elem(), CartDiscountTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountValueInput)(nil)).Elem(), CartDiscountValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountValuePtrInput)(nil)).Elem(), CartDiscountValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountValueMoneyInput)(nil)).Elem(), CartDiscountValueMoneyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CartDiscountValueMoneyArrayInput)(nil)).Elem(), CartDiscountValueMoneyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetInput)(nil)).Elem(), CategoryAssetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetArrayInput)(nil)).Elem(), CategoryAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetSourceInput)(nil)).Elem(), CategoryAssetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetSourceArrayInput)(nil)).Elem(), CategoryAssetSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetSourceDimensionsInput)(nil)).Elem(), CategoryAssetSourceDimensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryAssetSourceDimensionsPtrInput)(nil)).Elem(), CategoryAssetSourceDimensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryCustomInput)(nil)).Elem(), CategoryCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CategoryCustomPtrInput)(nil)).Elem(), CategoryCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelAddressInput)(nil)).Elem(), ChannelAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelAddressPtrInput)(nil)).Elem(), ChannelAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomInput)(nil)).Elem(), ChannelCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomPtrInput)(nil)).Elem(), ChannelCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelGeolocationInput)(nil)).Elem(), ChannelGeolocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelGeolocationPtrInput)(nil)).Elem(), ChannelGeolocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerGroupCustomInput)(nil)).Elem(), CustomerGroupCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerGroupCustomPtrInput)(nil)).Elem(), CustomerGroupCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscountCodeCustomInput)(nil)).Elem(), DiscountCodeCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscountCodeCustomPtrInput)(nil)).Elem(), DiscountCodeCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductDiscountValueInput)(nil)).Elem(), ProductDiscountValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductDiscountValuePtrInput)(nil)).Elem(), ProductDiscountValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductDiscountValueMoneyInput)(nil)).Elem(), ProductDiscountValueMoneyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductDiscountValueMoneyArrayInput)(nil)).Elem(), ProductDiscountValueMoneyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeInput)(nil)).Elem(), ProductTypeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeArrayInput)(nil)).Elem(), ProductTypeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeInput)(nil)).Elem(), ProductTypeAttributeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2Input)(nil)).Elem(), ProductTypeAttributeTypeElementType2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2PtrInput)(nil)).Elem(), ProductTypeAttributeTypeElementType2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValueInput)(nil)).Elem(), ProductTypeAttributeTypeElementType2LocalizedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValueArrayInput)(nil)).Elem(), ProductTypeAttributeTypeElementType2LocalizedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2ValueInput)(nil)).Elem(), ProductTypeAttributeTypeElementType2ValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeElementType2ValueArrayInput)(nil)).Elem(), ProductTypeAttributeTypeElementType2ValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValueInput)(nil)).Elem(), ProductTypeAttributeTypeLocalizedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValueArrayInput)(nil)).Elem(), ProductTypeAttributeTypeLocalizedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeValueInput)(nil)).Elem(), ProductTypeAttributeTypeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductTypeAttributeTypeValueArrayInput)(nil)).Elem(), ProductTypeAttributeTypeValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsCartsInput)(nil)).Elem(), ProjectSettingsCartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsCartsPtrInput)(nil)).Elem(), ProjectSettingsCartsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsExternalOauthInput)(nil)).Elem(), ProjectSettingsExternalOauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsExternalOauthPtrInput)(nil)).Elem(), ProjectSettingsExternalOauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsMessagesInput)(nil)).Elem(), ProjectSettingsMessagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsMessagesPtrInput)(nil)).Elem(), ProjectSettingsMessagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsShippingRateCartClassificationValueInput)(nil)).Elem(), ProjectSettingsShippingRateCartClassificationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSettingsShippingRateCartClassificationValueArrayInput)(nil)).Elem(), ProjectSettingsShippingRateCartClassificationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingMethodCustomInput)(nil)).Elem(), ShippingMethodCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingMethodCustomPtrInput)(nil)).Elem(), ShippingMethodCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneLocationInput)(nil)).Elem(), ShippingZoneLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneLocationArrayInput)(nil)).Elem(), ShippingZoneLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateFreeAboveInput)(nil)).Elem(), ShippingZoneRateFreeAboveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateFreeAbovePtrInput)(nil)).Elem(), ShippingZoneRateFreeAboveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRatePriceInput)(nil)).Elem(), ShippingZoneRatePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRatePricePtrInput)(nil)).Elem(), ShippingZoneRatePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierArrayInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPriceInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPricePtrInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPriceFunctionInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierPriceFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingZoneRateShippingRatePriceTierPriceFunctionPtrInput)(nil)).Elem(), ShippingZoneRateShippingRatePriceTierPriceFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoreCustomInput)(nil)).Elem(), StoreCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoreCustomPtrInput)(nil)).Elem(), StoreCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoreProductSelectionInput)(nil)).Elem(), StoreProductSelectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StoreProductSelectionArrayInput)(nil)).Elem(), StoreProductSelectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionChangeInput)(nil)).Elem(), SubscriptionChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionChangeArrayInput)(nil)).Elem(), SubscriptionChangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionDestinationInput)(nil)).Elem(), SubscriptionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionDestinationPtrInput)(nil)).Elem(), SubscriptionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionFormatInput)(nil)).Elem(), SubscriptionFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionFormatPtrInput)(nil)).Elem(), SubscriptionFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionMessageInput)(nil)).Elem(), SubscriptionMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionMessageArrayInput)(nil)).Elem(), SubscriptionMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaxCategoryRateSubRateInput)(nil)).Elem(), TaxCategoryRateSubRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaxCategoryRateSubRateArrayInput)(nil)).Elem(), TaxCategoryRateSubRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldInput)(nil)).Elem(), TypeFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldArrayInput)(nil)).Elem(), TypeFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeInput)(nil)).Elem(), TypeFieldTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2Input)(nil)).Elem(), TypeFieldTypeElementType2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2PtrInput)(nil)).Elem(), TypeFieldTypeElementType2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValueInput)(nil)).Elem(), TypeFieldTypeElementType2LocalizedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValueArrayInput)(nil)).Elem(), TypeFieldTypeElementType2LocalizedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2ValueInput)(nil)).Elem(), TypeFieldTypeElementType2ValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeElementType2ValueArrayInput)(nil)).Elem(), TypeFieldTypeElementType2ValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeLocalizedValueInput)(nil)).Elem(), TypeFieldTypeLocalizedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeLocalizedValueArrayInput)(nil)).Elem(), TypeFieldTypeLocalizedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeValueInput)(nil)).Elem(), TypeFieldTypeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TypeFieldTypeValueArrayInput)(nil)).Elem(), TypeFieldTypeValueArray{})
	pulumi.RegisterOutputType(ApiExtensionDestinationOutput{})
	pulumi.RegisterOutputType(ApiExtensionDestinationPtrOutput{})
	pulumi.RegisterOutputType(ApiExtensionTriggerOutput{})
	pulumi.RegisterOutputType(ApiExtensionTriggerArrayOutput{})
	pulumi.RegisterOutputType(AttributeGroupAttributeOutput{})
	pulumi.RegisterOutputType(AttributeGroupAttributeArrayOutput{})
	pulumi.RegisterOutputType(CartDiscountCustomOutput{})
	pulumi.RegisterOutputType(CartDiscountCustomPtrOutput{})
	pulumi.RegisterOutputType(CartDiscountTargetOutput{})
	pulumi.RegisterOutputType(CartDiscountTargetPtrOutput{})
	pulumi.RegisterOutputType(CartDiscountValueOutput{})
	pulumi.RegisterOutputType(CartDiscountValuePtrOutput{})
	pulumi.RegisterOutputType(CartDiscountValueMoneyOutput{})
	pulumi.RegisterOutputType(CartDiscountValueMoneyArrayOutput{})
	pulumi.RegisterOutputType(CategoryAssetOutput{})
	pulumi.RegisterOutputType(CategoryAssetArrayOutput{})
	pulumi.RegisterOutputType(CategoryAssetSourceOutput{})
	pulumi.RegisterOutputType(CategoryAssetSourceArrayOutput{})
	pulumi.RegisterOutputType(CategoryAssetSourceDimensionsOutput{})
	pulumi.RegisterOutputType(CategoryAssetSourceDimensionsPtrOutput{})
	pulumi.RegisterOutputType(CategoryCustomOutput{})
	pulumi.RegisterOutputType(CategoryCustomPtrOutput{})
	pulumi.RegisterOutputType(ChannelAddressOutput{})
	pulumi.RegisterOutputType(ChannelAddressPtrOutput{})
	pulumi.RegisterOutputType(ChannelCustomOutput{})
	pulumi.RegisterOutputType(ChannelCustomPtrOutput{})
	pulumi.RegisterOutputType(ChannelGeolocationOutput{})
	pulumi.RegisterOutputType(ChannelGeolocationPtrOutput{})
	pulumi.RegisterOutputType(CustomerGroupCustomOutput{})
	pulumi.RegisterOutputType(CustomerGroupCustomPtrOutput{})
	pulumi.RegisterOutputType(DiscountCodeCustomOutput{})
	pulumi.RegisterOutputType(DiscountCodeCustomPtrOutput{})
	pulumi.RegisterOutputType(ProductDiscountValueOutput{})
	pulumi.RegisterOutputType(ProductDiscountValuePtrOutput{})
	pulumi.RegisterOutputType(ProductDiscountValueMoneyOutput{})
	pulumi.RegisterOutputType(ProductDiscountValueMoneyArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2Output{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2PtrOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2LocalizedValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2ValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2ValueArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeLocalizedValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeLocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeValueArrayOutput{})
	pulumi.RegisterOutputType(ProjectSettingsCartsOutput{})
	pulumi.RegisterOutputType(ProjectSettingsCartsPtrOutput{})
	pulumi.RegisterOutputType(ProjectSettingsExternalOauthOutput{})
	pulumi.RegisterOutputType(ProjectSettingsExternalOauthPtrOutput{})
	pulumi.RegisterOutputType(ProjectSettingsMessagesOutput{})
	pulumi.RegisterOutputType(ProjectSettingsMessagesPtrOutput{})
	pulumi.RegisterOutputType(ProjectSettingsShippingRateCartClassificationValueOutput{})
	pulumi.RegisterOutputType(ProjectSettingsShippingRateCartClassificationValueArrayOutput{})
	pulumi.RegisterOutputType(ShippingMethodCustomOutput{})
	pulumi.RegisterOutputType(ShippingMethodCustomPtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneLocationOutput{})
	pulumi.RegisterOutputType(ShippingZoneLocationArrayOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateFreeAboveOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateFreeAbovePtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneRatePriceOutput{})
	pulumi.RegisterOutputType(ShippingZoneRatePricePtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierArrayOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierPriceOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierPricePtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierPriceFunctionOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateShippingRatePriceTierPriceFunctionPtrOutput{})
	pulumi.RegisterOutputType(StoreCustomOutput{})
	pulumi.RegisterOutputType(StoreCustomPtrOutput{})
	pulumi.RegisterOutputType(StoreProductSelectionOutput{})
	pulumi.RegisterOutputType(StoreProductSelectionArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionChangeOutput{})
	pulumi.RegisterOutputType(SubscriptionChangeArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionDestinationOutput{})
	pulumi.RegisterOutputType(SubscriptionDestinationPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionFormatOutput{})
	pulumi.RegisterOutputType(SubscriptionFormatPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionMessageOutput{})
	pulumi.RegisterOutputType(SubscriptionMessageArrayOutput{})
	pulumi.RegisterOutputType(TaxCategoryRateSubRateOutput{})
	pulumi.RegisterOutputType(TaxCategoryRateSubRateArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldOutput{})
	pulumi.RegisterOutputType(TypeFieldArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2Output{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2PtrOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2LocalizedValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2LocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2ValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2ValueArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeLocalizedValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeLocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeValueArrayOutput{})
}
