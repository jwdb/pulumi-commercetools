// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-commercetools/sdk/go/commercetools/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupState(ctx *pulumi.Context, args *LookupStateArgs, opts ...pulumi.InvokeOption) (*LookupStateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStateResult
	err := ctx.Invoke("commercetools:index/getState:getState", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getState.
type LookupStateArgs struct {
	Key string `pulumi:"key"`
}

// A collection of values returned by getState.
type LookupStateResult struct {
	Id  string `pulumi:"id"`
	Key string `pulumi:"key"`
}

func LookupStateOutput(ctx *pulumi.Context, args LookupStateOutputArgs, opts ...pulumi.InvokeOption) LookupStateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStateResult, error) {
			args := v.(LookupStateArgs)
			r, err := LookupState(ctx, &args, opts...)
			var s LookupStateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStateResultOutput)
}

// A collection of arguments for invoking getState.
type LookupStateOutputArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (LookupStateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStateArgs)(nil)).Elem()
}

// A collection of values returned by getState.
type LookupStateResultOutput struct{ *pulumi.OutputState }

func (LookupStateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStateResult)(nil)).Elem()
}

func (o LookupStateResultOutput) ToLookupStateResultOutput() LookupStateResultOutput {
	return o
}

func (o LookupStateResultOutput) ToLookupStateResultOutputWithContext(ctx context.Context) LookupStateResultOutput {
	return o
}

func (o LookupStateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStateResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStateResult) string { return v.Key }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStateResultOutput{})
}
