// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Commercetools
{
    [CommercetoolsResourceType("commercetools:index/productDiscount:ProductDiscount")]
    public partial class ProductDiscount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        [Output("description")]
        public Output<ImmutableDictionary<string, object>?> Description { get; private set; } = null!;

        /// <summary>
        /// When set the product discount is applied to products matching the predicate
        /// </summary>
        [Output("isActive")]
        public Output<bool?> IsActive { get; private set; } = null!;

        /// <summary>
        /// User-defined unique identifier for the ProductDiscount. Must be unique across a project
        /// </summary>
        [Output("key")]
        public Output<string?> Key { get; private set; } = null!;

        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        [Output("name")]
        public Output<ImmutableDictionary<string, object>> Name { get; private set; } = null!;

        /// <summary>
        /// A valid [Product Predicate](https://docs.commercetools.com/api/projects/predicates#product-predicates)
        /// </summary>
        [Output("predicate")]
        public Output<string> Predicate { get; private set; } = null!;

        /// <summary>
        /// The string must contain a number between 0 and 1. All matching product discounts are applied to a product in the order
        /// defined by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order.
        /// The sort order is unambiguous among all product discounts
        /// </summary>
        [Output("sortOrder")]
        public Output<string> SortOrder { get; private set; } = null!;

        [Output("validFrom")]
        public Output<string?> ValidFrom { get; private set; } = null!;

        [Output("validUntil")]
        public Output<string?> ValidUntil { get; private set; } = null!;

        /// <summary>
        /// Defines the effect the discount will have.
        /// [ProductDiscountValue](https://docs.commercetools.com/api/projects/productDiscounts#productdiscountvalue)
        /// </summary>
        [Output("value")]
        public Output<Outputs.ProductDiscountValue> Value { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ProductDiscount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProductDiscount(string name, ProductDiscountArgs args, CustomResourceOptions? options = null)
            : base("commercetools:index/productDiscount:ProductDiscount", name, args ?? new ProductDiscountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProductDiscount(string name, Input<string> id, ProductDiscountState? state = null, CustomResourceOptions? options = null)
            : base("commercetools:index/productDiscount:ProductDiscount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProductDiscount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProductDiscount Get(string name, Input<string> id, ProductDiscountState? state = null, CustomResourceOptions? options = null)
        {
            return new ProductDiscount(name, id, state, options);
        }
    }

    public sealed class ProductDiscountArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        private InputMap<object>? _description;

        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        public InputMap<object> Description
        {
            get => _description ?? (_description = new InputMap<object>());
            set => _description = value;
        }

        /// <summary>
        /// When set the product discount is applied to products matching the predicate
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// User-defined unique identifier for the ProductDiscount. Must be unique across a project
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("name")]
        private InputMap<object>? _name;

        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        public InputMap<object> Name
        {
            get => _name ?? (_name = new InputMap<object>());
            set => _name = value;
        }

        /// <summary>
        /// A valid [Product Predicate](https://docs.commercetools.com/api/projects/predicates#product-predicates)
        /// </summary>
        [Input("predicate", required: true)]
        public Input<string> Predicate { get; set; } = null!;

        /// <summary>
        /// The string must contain a number between 0 and 1. All matching product discounts are applied to a product in the order
        /// defined by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order.
        /// The sort order is unambiguous among all product discounts
        /// </summary>
        [Input("sortOrder", required: true)]
        public Input<string> SortOrder { get; set; } = null!;

        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        /// <summary>
        /// Defines the effect the discount will have.
        /// [ProductDiscountValue](https://docs.commercetools.com/api/projects/productDiscounts#productdiscountvalue)
        /// </summary>
        [Input("value", required: true)]
        public Input<Inputs.ProductDiscountValueArgs> Value { get; set; } = null!;

        public ProductDiscountArgs()
        {
        }
        public static new ProductDiscountArgs Empty => new ProductDiscountArgs();
    }

    public sealed class ProductDiscountState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        private InputMap<object>? _description;

        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        public InputMap<object> Description
        {
            get => _description ?? (_description = new InputMap<object>());
            set => _description = value;
        }

        /// <summary>
        /// When set the product discount is applied to products matching the predicate
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// User-defined unique identifier for the ProductDiscount. Must be unique across a project
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("name")]
        private InputMap<object>? _name;

        /// <summary>
        /// [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
        /// </summary>
        public InputMap<object> Name
        {
            get => _name ?? (_name = new InputMap<object>());
            set => _name = value;
        }

        /// <summary>
        /// A valid [Product Predicate](https://docs.commercetools.com/api/projects/predicates#product-predicates)
        /// </summary>
        [Input("predicate")]
        public Input<string>? Predicate { get; set; }

        /// <summary>
        /// The string must contain a number between 0 and 1. All matching product discounts are applied to a product in the order
        /// defined by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order.
        /// The sort order is unambiguous among all product discounts
        /// </summary>
        [Input("sortOrder")]
        public Input<string>? SortOrder { get; set; }

        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        /// <summary>
        /// Defines the effect the discount will have.
        /// [ProductDiscountValue](https://docs.commercetools.com/api/projects/productDiscounts#productdiscountvalue)
        /// </summary>
        [Input("value")]
        public Input<Inputs.ProductDiscountValueGetArgs>? Value { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public ProductDiscountState()
        {
        }
        public static new ProductDiscountState Empty => new ProductDiscountState();
    }
}
