// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Commercetools
{
    [CommercetoolsResourceType("commercetools:index/associateRole:AssociateRole")]
    public partial class AssociateRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the AssociateRole can be assigned to an Associate by a buyer. If false, the AssociateRole can only be assigned
        /// using the general endpoint.
        /// </summary>
        [Output("buyerAssignable")]
        public Output<bool?> BuyerAssignable { get; private set; } = null!;

        /// <summary>
        /// User-defined unique identifier of the AssociateRole.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Name of the AssociateRole.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of Permissions for the AssociateRole.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<string>> Permissions { get; private set; } = null!;

        /// <summary>
        /// Current version of the AssociateRole.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a AssociateRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssociateRole(string name, AssociateRoleArgs args, CustomResourceOptions? options = null)
            : base("commercetools:index/associateRole:AssociateRole", name, args ?? new AssociateRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssociateRole(string name, Input<string> id, AssociateRoleState? state = null, CustomResourceOptions? options = null)
            : base("commercetools:index/associateRole:AssociateRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssociateRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssociateRole Get(string name, Input<string> id, AssociateRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new AssociateRole(name, id, state, options);
        }
    }

    public sealed class AssociateRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the AssociateRole can be assigned to an Associate by a buyer. If false, the AssociateRole can only be assigned
        /// using the general endpoint.
        /// </summary>
        [Input("buyerAssignable")]
        public Input<bool>? BuyerAssignable { get; set; }

        /// <summary>
        /// User-defined unique identifier of the AssociateRole.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Name of the AssociateRole.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions", required: true)]
        private InputList<string>? _permissions;

        /// <summary>
        /// List of Permissions for the AssociateRole.
        /// </summary>
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        public AssociateRoleArgs()
        {
        }
        public static new AssociateRoleArgs Empty => new AssociateRoleArgs();
    }

    public sealed class AssociateRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the AssociateRole can be assigned to an Associate by a buyer. If false, the AssociateRole can only be assigned
        /// using the general endpoint.
        /// </summary>
        [Input("buyerAssignable")]
        public Input<bool>? BuyerAssignable { get; set; }

        /// <summary>
        /// User-defined unique identifier of the AssociateRole.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Name of the AssociateRole.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        private InputList<string>? _permissions;

        /// <summary>
        /// List of Permissions for the AssociateRole.
        /// </summary>
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        /// <summary>
        /// Current version of the AssociateRole.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public AssociateRoleState()
        {
        }
        public static new AssociateRoleState Empty => new AssociateRoleState();
    }
}
