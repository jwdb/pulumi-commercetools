// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CartDiscount extends pulumi.CustomResource {
    /**
     * Get an existing CartDiscount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CartDiscountState, opts?: pulumi.CustomResourceOptions): CartDiscount {
        return new CartDiscount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/cartDiscount:CartDiscount';

    /**
     * Returns true if the given object is an instance of CartDiscount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CartDiscount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CartDiscount.__pulumiType;
    }

    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    public readonly description!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Only active discount can be applied to the cart
     */
    public readonly isActive!: pulumi.Output<boolean | undefined>;
    /**
     * User-specific unique identifier for a cart discount. Must be unique across a project
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    public readonly name!: pulumi.Output<{[key: string]: any}>;
    /**
     * A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)
     */
    public readonly predicate!: pulumi.Output<string>;
    /**
     * States whether the discount can only be used in a connection with a
     * [DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)
     */
    public readonly requiresDiscountCode!: pulumi.Output<boolean | undefined>;
    /**
     * The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined
     * by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort
     * order is unambiguous among all cart discounts
     */
    public readonly sortOrder!: pulumi.Output<string>;
    /**
     * Specifies whether the application of this discount causes the following discounts to be ignored
     */
    public readonly stackingMode!: pulumi.Output<string | undefined>;
    /**
     * Empty when the value has type giftLineItem, otherwise a
     * [CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)
     */
    public readonly target!: pulumi.Output<outputs.CartDiscountTarget | undefined>;
    public readonly validFrom!: pulumi.Output<string | undefined>;
    public readonly validUntil!: pulumi.Output<string | undefined>;
    /**
     * Defines the effect the discount will have.
     * [CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)
     */
    public readonly value!: pulumi.Output<outputs.CartDiscountValue>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CartDiscount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CartDiscountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CartDiscountArgs | CartDiscountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CartDiscountState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isActive"] = state ? state.isActive : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["predicate"] = state ? state.predicate : undefined;
            resourceInputs["requiresDiscountCode"] = state ? state.requiresDiscountCode : undefined;
            resourceInputs["sortOrder"] = state ? state.sortOrder : undefined;
            resourceInputs["stackingMode"] = state ? state.stackingMode : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["validFrom"] = state ? state.validFrom : undefined;
            resourceInputs["validUntil"] = state ? state.validUntil : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CartDiscountArgs | undefined;
            if ((!args || args.predicate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'predicate'");
            }
            if ((!args || args.sortOrder === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sortOrder'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isActive"] = args ? args.isActive : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["predicate"] = args ? args.predicate : undefined;
            resourceInputs["requiresDiscountCode"] = args ? args.requiresDiscountCode : undefined;
            resourceInputs["sortOrder"] = args ? args.sortOrder : undefined;
            resourceInputs["stackingMode"] = args ? args.stackingMode : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["validFrom"] = args ? args.validFrom : undefined;
            resourceInputs["validUntil"] = args ? args.validUntil : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CartDiscount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CartDiscount resources.
 */
export interface CartDiscountState {
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    description?: pulumi.Input<{[key: string]: any}>;
    /**
     * Only active discount can be applied to the cart
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * User-specific unique identifier for a cart discount. Must be unique across a project
     */
    key?: pulumi.Input<string>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    name?: pulumi.Input<{[key: string]: any}>;
    /**
     * A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)
     */
    predicate?: pulumi.Input<string>;
    /**
     * States whether the discount can only be used in a connection with a
     * [DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)
     */
    requiresDiscountCode?: pulumi.Input<boolean>;
    /**
     * The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined
     * by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort
     * order is unambiguous among all cart discounts
     */
    sortOrder?: pulumi.Input<string>;
    /**
     * Specifies whether the application of this discount causes the following discounts to be ignored
     */
    stackingMode?: pulumi.Input<string>;
    /**
     * Empty when the value has type giftLineItem, otherwise a
     * [CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)
     */
    target?: pulumi.Input<inputs.CartDiscountTarget>;
    validFrom?: pulumi.Input<string>;
    validUntil?: pulumi.Input<string>;
    /**
     * Defines the effect the discount will have.
     * [CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)
     */
    value?: pulumi.Input<inputs.CartDiscountValue>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CartDiscount resource.
 */
export interface CartDiscountArgs {
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    description?: pulumi.Input<{[key: string]: any}>;
    /**
     * Only active discount can be applied to the cart
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * User-specific unique identifier for a cart discount. Must be unique across a project
     */
    key?: pulumi.Input<string>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    name?: pulumi.Input<{[key: string]: any}>;
    /**
     * A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)
     */
    predicate: pulumi.Input<string>;
    /**
     * States whether the discount can only be used in a connection with a
     * [DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)
     */
    requiresDiscountCode?: pulumi.Input<boolean>;
    /**
     * The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined
     * by this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort
     * order is unambiguous among all cart discounts
     */
    sortOrder: pulumi.Input<string>;
    /**
     * Specifies whether the application of this discount causes the following discounts to be ignored
     */
    stackingMode?: pulumi.Input<string>;
    /**
     * Empty when the value has type giftLineItem, otherwise a
     * [CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)
     */
    target?: pulumi.Input<inputs.CartDiscountTarget>;
    validFrom?: pulumi.Input<string>;
    validUntil?: pulumi.Input<string>;
    /**
     * Defines the effect the discount will have.
     * [CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)
     */
    value: pulumi.Input<inputs.CartDiscountValue>;
}
