// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApiExtensionDestination {
    accessKey?: pulumi.Input<string>;
    accessSecret?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    authorizationHeader?: pulumi.Input<string>;
    azureAuthentication?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ApiExtensionTrigger {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    condition?: pulumi.Input<string>;
    resourceTypeId: pulumi.Input<string>;
}

export interface AttributeGroupAttribute {
    key: pulumi.Input<string>;
}

export interface CartDiscountCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface CartDiscountTarget {
    discountedQuantity?: pulumi.Input<number>;
    maxOccurrence?: pulumi.Input<number>;
    predicate?: pulumi.Input<string>;
    selectionMode?: pulumi.Input<string>;
    triggerQuantity?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CartDiscountValue {
    distributionChannelId?: pulumi.Input<string>;
    monies?: pulumi.Input<pulumi.Input<inputs.CartDiscountValueMoney>[]>;
    permyriad?: pulumi.Input<number>;
    productId?: pulumi.Input<string>;
    supplyChannelId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    variantId?: pulumi.Input<number>;
}

export interface CartDiscountValueMoney {
    centAmount: pulumi.Input<number>;
    currencyCode: pulumi.Input<string>;
}

export interface CategoryAsset {
    description?: pulumi.Input<{[key: string]: any}>;
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name: pulumi.Input<{[key: string]: any}>;
    sources?: pulumi.Input<pulumi.Input<inputs.CategoryAssetSource>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CategoryAssetSource {
    contentType?: pulumi.Input<string>;
    dimensions?: pulumi.Input<inputs.CategoryAssetSourceDimensions>;
    key?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface CategoryAssetSourceDimensions {
    h: pulumi.Input<number>;
    w: pulumi.Input<number>;
}

export interface CategoryCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface ChannelAddress {
    additionalAddressInfo?: pulumi.Input<string>;
    additionalStreetInfo?: pulumi.Input<string>;
    apartment?: pulumi.Input<string>;
    building?: pulumi.Input<string>;
    city?: pulumi.Input<string>;
    company?: pulumi.Input<string>;
    country: pulumi.Input<string>;
    department?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    fax?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    mobile?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    poBox?: pulumi.Input<string>;
    postalCode?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    salutation?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    streetName?: pulumi.Input<string>;
    streetNumber?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}

export interface ChannelCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface ChannelGeolocation {
    coordinates: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CustomerGroupCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface DiscountCodeCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface ProductDiscountValue {
    monies?: pulumi.Input<pulumi.Input<inputs.ProductDiscountValueMoney>[]>;
    permyriad?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface ProductDiscountValueMoney {
    centAmount: pulumi.Input<number>;
    currencyCode: pulumi.Input<string>;
    fractionDigits?: pulumi.Input<number>;
}

export interface ProductTypeAttribute {
    constraint?: pulumi.Input<string>;
    inputHint?: pulumi.Input<string>;
    inputTip?: pulumi.Input<{[key: string]: any}>;
    label: pulumi.Input<{[key: string]: any}>;
    name: pulumi.Input<string>;
    required?: pulumi.Input<boolean>;
    searchable?: pulumi.Input<boolean>;
    type: pulumi.Input<inputs.ProductTypeAttributeType>;
}

export interface ProductTypeAttributeType {
    ElementType2?: pulumi.Input<inputs.ProductTypeAttributeTypeElementType2>;
    localizedValues?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttributeTypeLocalizedValue>[]>;
    name: pulumi.Input<string>;
    referenceTypeId?: pulumi.Input<string>;
    typeReference?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttributeTypeValue>[]>;
}

export interface ProductTypeAttributeTypeElementType2 {
    localizedValues?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttributeTypeElementType2LocalizedValue>[]>;
    name: pulumi.Input<string>;
    referenceTypeId?: pulumi.Input<string>;
    typeReference?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttributeTypeElementType2Value>[]>;
}

export interface ProductTypeAttributeTypeElementType2LocalizedValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<{[key: string]: any}>;
}

export interface ProductTypeAttributeTypeElementType2Value {
    key: pulumi.Input<string>;
    label: pulumi.Input<string>;
}

export interface ProductTypeAttributeTypeLocalizedValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<{[key: string]: any}>;
}

export interface ProductTypeAttributeTypeValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<string>;
}

export interface ProjectSettingsCarts {
    countryTaxRateFallbackEnabled?: pulumi.Input<boolean>;
    deleteDaysAfterLastModification?: pulumi.Input<number>;
}

export interface ProjectSettingsExternalOauth {
    authorizationHeader?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ProjectSettingsMessages {
    deleteDaysAfterCreation?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface ProjectSettingsShippingRateCartClassificationValue {
    key: pulumi.Input<string>;
    label?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ShippingMethodCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface ShippingZoneLocation {
    country: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface ShippingZoneRateFreeAbove {
    centAmount: pulumi.Input<number>;
    currencyCode: pulumi.Input<string>;
}

export interface ShippingZoneRatePrice {
    centAmount: pulumi.Input<number>;
    currencyCode: pulumi.Input<string>;
}

export interface ShippingZoneRateShippingRatePriceTier {
    minimumCentAmount?: pulumi.Input<number>;
    price?: pulumi.Input<inputs.ShippingZoneRateShippingRatePriceTierPrice>;
    priceFunction?: pulumi.Input<inputs.ShippingZoneRateShippingRatePriceTierPriceFunction>;
    score?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ShippingZoneRateShippingRatePriceTierPrice {
    centAmount: pulumi.Input<number>;
    currencyCode: pulumi.Input<string>;
}

export interface ShippingZoneRateShippingRatePriceTierPriceFunction {
    currencyCode: pulumi.Input<string>;
    function: pulumi.Input<string>;
}

export interface StoreCustom {
    fields?: pulumi.Input<{[key: string]: any}>;
    typeId: pulumi.Input<string>;
}

export interface StoreProductSelection {
    active: pulumi.Input<boolean>;
    productSelectionId: pulumi.Input<string>;
}

export interface SubscriptionChange {
    resourceTypeIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SubscriptionDestination {
    accessKey?: pulumi.Input<string>;
    accessSecret?: pulumi.Input<string>;
    accountId?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    queueUrl?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
    topicArn?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface SubscriptionFormat {
    cloudEventsVersion?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface SubscriptionMessage {
    resourceTypeId: pulumi.Input<string>;
    types: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TaxCategoryRateSubRate {
    amount: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface TypeField {
    inputHint?: pulumi.Input<string>;
    label: pulumi.Input<{[key: string]: any}>;
    name: pulumi.Input<string>;
    required?: pulumi.Input<boolean>;
    type: pulumi.Input<inputs.TypeFieldType>;
}

export interface TypeFieldType {
    ElementType2?: pulumi.Input<inputs.TypeFieldTypeElementType2>;
    localizedValues?: pulumi.Input<pulumi.Input<inputs.TypeFieldTypeLocalizedValue>[]>;
    name: pulumi.Input<string>;
    referenceTypeId?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TypeFieldTypeValue>[]>;
}

export interface TypeFieldTypeElementType2 {
    localizedValues?: pulumi.Input<pulumi.Input<inputs.TypeFieldTypeElementType2LocalizedValue>[]>;
    name: pulumi.Input<string>;
    referenceTypeId?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TypeFieldTypeElementType2Value>[]>;
}

export interface TypeFieldTypeElementType2LocalizedValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<{[key: string]: any}>;
}

export interface TypeFieldTypeElementType2Value {
    key: pulumi.Input<string>;
    label: pulumi.Input<string>;
}

export interface TypeFieldTypeLocalizedValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<{[key: string]: any}>;
}

export interface TypeFieldTypeValue {
    key: pulumi.Input<string>;
    label: pulumi.Input<string>;
}
