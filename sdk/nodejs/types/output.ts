// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApiExtensionDestination {
    accessKey?: string;
    accessSecret?: string;
    arn?: string;
    authorizationHeader?: string;
    azureAuthentication?: string;
    type: string;
    url?: string;
}

export interface ApiExtensionTrigger {
    actions: string[];
    condition?: string;
    resourceTypeId: string;
}

export interface AttributeGroupAttribute {
    key: string;
}

export interface CartDiscountCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface CartDiscountTarget {
    discountedQuantity?: number;
    maxOccurrence?: number;
    predicate?: string;
    selectionMode?: string;
    triggerQuantity?: number;
    type: string;
}

export interface CartDiscountValue {
    distributionChannelId?: string;
    monies?: outputs.CartDiscountValueMoney[];
    permyriad?: number;
    productId?: string;
    supplyChannelId?: string;
    type: string;
    variantId?: number;
}

export interface CartDiscountValueMoney {
    centAmount: number;
    currencyCode: string;
}

export interface CategoryAsset {
    description?: {[key: string]: any};
    id: string;
    key?: string;
    name: {[key: string]: any};
    sources?: outputs.CategoryAssetSource[];
    tags?: string[];
}

export interface CategoryAssetSource {
    contentType?: string;
    dimensions?: outputs.CategoryAssetSourceDimensions;
    key?: string;
    uri: string;
}

export interface CategoryAssetSourceDimensions {
    h: number;
    w: number;
}

export interface CategoryCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface ChannelAddress {
    additionalAddressInfo?: string;
    additionalStreetInfo?: string;
    apartment?: string;
    building?: string;
    city?: string;
    company?: string;
    country: string;
    department?: string;
    email?: string;
    externalId?: string;
    fax?: string;
    firstName?: string;
    id: string;
    key?: string;
    lastName?: string;
    mobile?: string;
    phone?: string;
    poBox?: string;
    postalCode?: string;
    region?: string;
    salutation?: string;
    state?: string;
    streetName?: string;
    streetNumber?: string;
    title?: string;
}

export interface ChannelCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface ChannelGeolocation {
    coordinates: number[];
}

export interface CustomerGroupCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface DiscountCodeCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface ProductDiscountValue {
    monies?: outputs.ProductDiscountValueMoney[];
    permyriad?: number;
    type: string;
}

export interface ProductDiscountValueMoney {
    centAmount: number;
    currencyCode: string;
    fractionDigits: number;
}

export interface ProductTypeAttribute {
    constraint?: string;
    inputHint?: string;
    inputTip?: {[key: string]: any};
    label: {[key: string]: any};
    name: string;
    required?: boolean;
    searchable?: boolean;
    type: outputs.ProductTypeAttributeType;
}

export interface ProductTypeAttributeType {
    ElementType2?: outputs.ProductTypeAttributeTypeElementType2;
    localizedValues?: outputs.ProductTypeAttributeTypeLocalizedValue[];
    name: string;
    referenceTypeId?: string;
    typeReference?: string;
    values?: outputs.ProductTypeAttributeTypeValue[];
}

export interface ProductTypeAttributeTypeElementType2 {
    localizedValues?: outputs.ProductTypeAttributeTypeElementType2LocalizedValue[];
    name: string;
    referenceTypeId?: string;
    typeReference?: string;
    values?: outputs.ProductTypeAttributeTypeElementType2Value[];
}

export interface ProductTypeAttributeTypeElementType2LocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface ProductTypeAttributeTypeElementType2Value {
    key: string;
    label: string;
}

export interface ProductTypeAttributeTypeLocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface ProductTypeAttributeTypeValue {
    key: string;
    label: string;
}

export interface ProjectSettingsCarts {
    countryTaxRateFallbackEnabled?: boolean;
    deleteDaysAfterLastModification?: number;
}

export interface ProjectSettingsExternalOauth {
    authorizationHeader?: string;
    url?: string;
}

export interface ProjectSettingsMessages {
    deleteDaysAfterCreation?: number;
    enabled?: boolean;
}

export interface ProjectSettingsShippingRateCartClassificationValue {
    key: string;
    label?: {[key: string]: string};
}

export interface ShippingMethodCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface ShippingZoneLocation {
    country: string;
    state?: string;
}

export interface ShippingZoneRateFreeAbove {
    centAmount: number;
    currencyCode: string;
}

export interface ShippingZoneRatePrice {
    centAmount: number;
    currencyCode: string;
}

export interface ShippingZoneRateShippingRatePriceTier {
    minimumCentAmount?: number;
    price?: outputs.ShippingZoneRateShippingRatePriceTierPrice;
    priceFunction?: outputs.ShippingZoneRateShippingRatePriceTierPriceFunction;
    score?: number;
    type: string;
    value?: string;
}

export interface ShippingZoneRateShippingRatePriceTierPrice {
    centAmount: number;
    currencyCode: string;
}

export interface ShippingZoneRateShippingRatePriceTierPriceFunction {
    currencyCode: string;
    function: string;
}

export interface StoreCustom {
    fields?: {[key: string]: any};
    typeId: string;
}

export interface SubscriptionChange {
    resourceTypeIds: string[];
}

export interface SubscriptionDestination {
    accessKey?: string;
    accessSecret?: string;
    accountId?: string;
    connectionString?: string;
    projectId?: string;
    queueUrl?: string;
    region?: string;
    topic?: string;
    topicArn?: string;
    type: string;
    uri?: string;
}

export interface SubscriptionFormat {
    cloudEventsVersion?: string;
    type?: string;
}

export interface SubscriptionMessage {
    resourceTypeId: string;
    types: string[];
}

export interface TaxCategoryRateSubRate {
    amount: number;
    name: string;
}

export interface TypeField {
    inputHint?: string;
    label: {[key: string]: any};
    name: string;
    required?: boolean;
    type: outputs.TypeFieldType;
}

export interface TypeFieldType {
    ElementType2?: outputs.TypeFieldTypeElementType2;
    localizedValues?: outputs.TypeFieldTypeLocalizedValue[];
    name: string;
    referenceTypeId?: string;
    values?: outputs.TypeFieldTypeValue[];
}

export interface TypeFieldTypeElementType2 {
    localizedValues?: outputs.TypeFieldTypeElementType2LocalizedValue[];
    name: string;
    referenceTypeId?: string;
    values?: outputs.TypeFieldTypeElementType2Value[];
}

export interface TypeFieldTypeElementType2LocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface TypeFieldTypeElementType2Value {
    key: string;
    label: string;
}

export interface TypeFieldTypeLocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface TypeFieldTypeValue {
    key: string;
    label: string;
}

