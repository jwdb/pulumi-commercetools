// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Store extends pulumi.CustomResource {
    /**
     * Get an existing Store resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StoreState, opts?: pulumi.CustomResourceOptions): Store {
        return new Store(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/store:Store';

    /**
     * Returns true if the given object is an instance of Store.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Store {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Store.__pulumiType;
    }

    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    public readonly countries!: pulumi.Output<string[] | undefined>;
    public readonly custom!: pulumi.Output<outputs.StoreCustom | undefined>;
    /**
     * Set of ResourceIdentifier to a Channel with ProductDistribution
     */
    public readonly distributionChannels!: pulumi.Output<string[] | undefined>;
    /**
     * User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    public readonly languages!: pulumi.Output<string[] | undefined>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    public readonly name!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Controls availability of Products for this Store via Product Selections
     */
    public readonly productSelections!: pulumi.Output<outputs.StoreProductSelection[] | undefined>;
    /**
     * Set of ResourceIdentifier of Channels with InventorySupply
     */
    public readonly supplyChannels!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a Store resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StoreArgs | StoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StoreState | undefined;
            resourceInputs["countries"] = state ? state.countries : undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["distributionChannels"] = state ? state.distributionChannels : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["languages"] = state ? state.languages : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["productSelections"] = state ? state.productSelections : undefined;
            resourceInputs["supplyChannels"] = state ? state.supplyChannels : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as StoreArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["countries"] = args ? args.countries : undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["distributionChannels"] = args ? args.distributionChannels : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["languages"] = args ? args.languages : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["productSelections"] = args ? args.productSelections : undefined;
            resourceInputs["supplyChannels"] = args ? args.supplyChannels : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Store.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Store resources.
 */
export interface StoreState {
    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    custom?: pulumi.Input<inputs.StoreCustom>;
    /**
     * Set of ResourceIdentifier to a Channel with ProductDistribution
     */
    distributionChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store
     */
    key?: pulumi.Input<string>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    languages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    name?: pulumi.Input<{[key: string]: any}>;
    /**
     * Controls availability of Products for this Store via Product Selections
     */
    productSelections?: pulumi.Input<pulumi.Input<inputs.StoreProductSelection>[]>;
    /**
     * Set of ResourceIdentifier of Channels with InventorySupply
     */
    supplyChannels?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Store resource.
 */
export interface StoreArgs {
    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    custom?: pulumi.Input<inputs.StoreCustom>;
    /**
     * Set of ResourceIdentifier to a Channel with ProductDistribution
     */
    distributionChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store
     */
    key: pulumi.Input<string>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    languages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [LocalizedString](https://docs.commercetools.com/api/types#localizedstring)
     */
    name?: pulumi.Input<{[key: string]: any}>;
    /**
     * Controls availability of Products for this Store via Product Selections
     */
    productSelections?: pulumi.Input<pulumi.Input<inputs.StoreProductSelection>[]>;
    /**
     * Set of ResourceIdentifier of Channels with InventorySupply
     */
    supplyChannels?: pulumi.Input<pulumi.Input<string>[]>;
}
