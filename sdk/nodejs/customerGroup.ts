// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CustomerGroup extends pulumi.CustomResource {
    /**
     * Get an existing CustomerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerGroupState, opts?: pulumi.CustomResourceOptions): CustomerGroup {
        return new CustomerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/customerGroup:CustomerGroup';

    /**
     * Returns true if the given object is an instance of CustomerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerGroup.__pulumiType;
    }

    public readonly custom!: pulumi.Output<outputs.CustomerGroupCustom | undefined>;
    /**
     * User-specific unique identifier for the customer group
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * Unique within the project
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CustomerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CustomerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerGroupArgs | CustomerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerGroupState | undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CustomerGroupArgs | undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomerGroup resources.
 */
export interface CustomerGroupState {
    custom?: pulumi.Input<inputs.CustomerGroupCustom>;
    /**
     * User-specific unique identifier for the customer group
     */
    key?: pulumi.Input<string>;
    /**
     * Unique within the project
     */
    name?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CustomerGroup resource.
 */
export interface CustomerGroupArgs {
    custom?: pulumi.Input<inputs.CustomerGroupCustom>;
    /**
     * User-specific unique identifier for the customer group
     */
    key?: pulumi.Input<string>;
    /**
     * Unique within the project
     */
    name?: pulumi.Input<string>;
}
