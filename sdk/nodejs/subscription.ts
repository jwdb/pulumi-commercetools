// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Subscription extends pulumi.CustomResource {
    /**
     * Get an existing Subscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubscriptionState, opts?: pulumi.CustomResourceOptions): Subscription {
        return new Subscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/subscription:Subscription';

    /**
     * Returns true if the given object is an instance of Subscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subscription.__pulumiType;
    }

    /**
     * The change notifications subscribed to
     */
    public readonly changes!: pulumi.Output<outputs.SubscriptionChange[] | undefined>;
    public readonly destination!: pulumi.Output<outputs.SubscriptionDestination | undefined>;
    /**
     * The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered
     */
    public readonly format!: pulumi.Output<outputs.SubscriptionFormat | undefined>;
    /**
     * Timestamp of the last Terraform update of the order.
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * The messages subscribed to
     */
    public readonly messages!: pulumi.Output<outputs.SubscriptionMessage[] | undefined>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a Subscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubscriptionArgs | SubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubscriptionState | undefined;
            resourceInputs["changes"] = state ? state.changes : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as SubscriptionArgs | undefined;
            resourceInputs["changes"] = args ? args.changes : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["messages"] = args ? args.messages : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Subscription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subscription resources.
 */
export interface SubscriptionState {
    /**
     * The change notifications subscribed to
     */
    changes?: pulumi.Input<pulumi.Input<inputs.SubscriptionChange>[]>;
    destination?: pulumi.Input<inputs.SubscriptionDestination>;
    /**
     * The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered
     */
    format?: pulumi.Input<inputs.SubscriptionFormat>;
    /**
     * Timestamp of the last Terraform update of the order.
     */
    key?: pulumi.Input<string>;
    /**
     * The messages subscribed to
     */
    messages?: pulumi.Input<pulumi.Input<inputs.SubscriptionMessage>[]>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Subscription resource.
 */
export interface SubscriptionArgs {
    /**
     * The change notifications subscribed to
     */
    changes?: pulumi.Input<pulumi.Input<inputs.SubscriptionChange>[]>;
    destination?: pulumi.Input<inputs.SubscriptionDestination>;
    /**
     * The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered
     */
    format?: pulumi.Input<inputs.SubscriptionFormat>;
    /**
     * Timestamp of the last Terraform update of the order.
     */
    key?: pulumi.Input<string>;
    /**
     * The messages subscribed to
     */
    messages?: pulumi.Input<pulumi.Input<inputs.SubscriptionMessage>[]>;
}
