// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProjectSettings extends pulumi.CustomResource {
    /**
     * Get an existing ProjectSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectSettingsState, opts?: pulumi.CustomResourceOptions): ProjectSettings {
        return new ProjectSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/projectSettings:ProjectSettings';

    /**
     * Returns true if the given object is an instance of ProjectSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectSettings.__pulumiType;
    }

    /**
     * [Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)
     */
    public readonly carts!: pulumi.Output<outputs.ProjectSettingsCarts | undefined>;
    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    public readonly countries!: pulumi.Output<string[]>;
    /**
     * A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
     */
    public readonly currencies!: pulumi.Output<string[]>;
    /**
     * Enable the Search Indexing of orders
     */
    public readonly enableSearchIndexOrders!: pulumi.Output<boolean>;
    /**
     * Enable the Search Indexing of products
     */
    public readonly enableSearchIndexProducts!: pulumi.Output<boolean>;
    /**
     * [External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)
     */
    public readonly externalOauth!: pulumi.Output<outputs.ProjectSettingsExternalOauth | undefined>;
    /**
     * The unique key of the project
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    public readonly languages!: pulumi.Output<string[]>;
    /**
     * The change notifications subscribed to
     */
    public readonly messages!: pulumi.Output<outputs.ProjectSettingsMessages | undefined>;
    /**
     * The name of the project
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined
     * inside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys
     * are checked for uniqueness and the request is rejected if keys are not unique
     */
    public readonly shippingRateCartClassificationValues!: pulumi.Output<outputs.ProjectSettingsShippingRateCartClassificationValue[] | undefined>;
    /**
     * Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,
     * whereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier
     */
    public readonly shippingRateInputType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ProjectSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProjectSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectSettingsArgs | ProjectSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectSettingsState | undefined;
            resourceInputs["carts"] = state ? state.carts : undefined;
            resourceInputs["countries"] = state ? state.countries : undefined;
            resourceInputs["currencies"] = state ? state.currencies : undefined;
            resourceInputs["enableSearchIndexOrders"] = state ? state.enableSearchIndexOrders : undefined;
            resourceInputs["enableSearchIndexProducts"] = state ? state.enableSearchIndexProducts : undefined;
            resourceInputs["externalOauth"] = state ? state.externalOauth : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["languages"] = state ? state.languages : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shippingRateCartClassificationValues"] = state ? state.shippingRateCartClassificationValues : undefined;
            resourceInputs["shippingRateInputType"] = state ? state.shippingRateInputType : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ProjectSettingsArgs | undefined;
            resourceInputs["carts"] = args ? args.carts : undefined;
            resourceInputs["countries"] = args ? args.countries : undefined;
            resourceInputs["currencies"] = args ? args.currencies : undefined;
            resourceInputs["enableSearchIndexOrders"] = args ? args.enableSearchIndexOrders : undefined;
            resourceInputs["enableSearchIndexProducts"] = args ? args.enableSearchIndexProducts : undefined;
            resourceInputs["externalOauth"] = args ? args.externalOauth : undefined;
            resourceInputs["languages"] = args ? args.languages : undefined;
            resourceInputs["messages"] = args ? args.messages : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shippingRateCartClassificationValues"] = args ? args.shippingRateCartClassificationValues : undefined;
            resourceInputs["shippingRateInputType"] = args ? args.shippingRateInputType : undefined;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProjectSettings resources.
 */
export interface ProjectSettingsState {
    /**
     * [Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)
     */
    carts?: pulumi.Input<inputs.ProjectSettingsCarts>;
    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
     */
    currencies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable the Search Indexing of orders
     */
    enableSearchIndexOrders?: pulumi.Input<boolean>;
    /**
     * Enable the Search Indexing of products
     */
    enableSearchIndexProducts?: pulumi.Input<boolean>;
    /**
     * [External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)
     */
    externalOauth?: pulumi.Input<inputs.ProjectSettingsExternalOauth>;
    /**
     * The unique key of the project
     */
    key?: pulumi.Input<string>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    languages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The change notifications subscribed to
     */
    messages?: pulumi.Input<inputs.ProjectSettingsMessages>;
    /**
     * The name of the project
     */
    name?: pulumi.Input<string>;
    /**
     * If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined
     * inside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys
     * are checked for uniqueness and the request is rejected if keys are not unique
     */
    shippingRateCartClassificationValues?: pulumi.Input<pulumi.Input<inputs.ProjectSettingsShippingRateCartClassificationValue>[]>;
    /**
     * Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,
     * whereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier
     */
    shippingRateInputType?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ProjectSettings resource.
 */
export interface ProjectSettingsArgs {
    /**
     * [Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)
     */
    carts?: pulumi.Input<inputs.ProjectSettingsCarts>;
    /**
     * A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
     */
    currencies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable the Search Indexing of orders
     */
    enableSearchIndexOrders?: pulumi.Input<boolean>;
    /**
     * Enable the Search Indexing of products
     */
    enableSearchIndexProducts?: pulumi.Input<boolean>;
    /**
     * [External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)
     */
    externalOauth?: pulumi.Input<inputs.ProjectSettingsExternalOauth>;
    /**
     * [IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     */
    languages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The change notifications subscribed to
     */
    messages?: pulumi.Input<inputs.ProjectSettingsMessages>;
    /**
     * The name of the project
     */
    name?: pulumi.Input<string>;
    /**
     * If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined
     * inside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys
     * are checked for uniqueness and the request is rejected if keys are not unique
     */
    shippingRateCartClassificationValues?: pulumi.Input<pulumi.Input<inputs.ProjectSettingsShippingRateCartClassificationValue>[]>;
    /**
     * Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,
     * whereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier
     */
    shippingRateInputType?: pulumi.Input<string>;
}
