// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ShippingZoneRate extends pulumi.CustomResource {
    /**
     * Get an existing ShippingZoneRate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ShippingZoneRateState, opts?: pulumi.CustomResourceOptions): ShippingZoneRate {
        return new ShippingZoneRate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/shippingZoneRate:ShippingZoneRate';

    /**
     * Returns true if the given object is an instance of ShippingZoneRate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ShippingZoneRate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ShippingZoneRate.__pulumiType;
    }

    /**
     * The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value
     */
    public readonly freeAbove!: pulumi.Output<outputs.ShippingZoneRateFreeAbove | undefined>;
    public readonly price!: pulumi.Output<outputs.ShippingZoneRatePrice>;
    public readonly shippingMethodId!: pulumi.Output<string>;
    /**
     * A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no
     * tiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier
     * API Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)
     */
    public readonly shippingRatePriceTiers!: pulumi.Output<outputs.ShippingZoneRateShippingRatePriceTier[] | undefined>;
    public readonly shippingZoneId!: pulumi.Output<string>;

    /**
     * Create a ShippingZoneRate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ShippingZoneRateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ShippingZoneRateArgs | ShippingZoneRateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ShippingZoneRateState | undefined;
            resourceInputs["freeAbove"] = state ? state.freeAbove : undefined;
            resourceInputs["price"] = state ? state.price : undefined;
            resourceInputs["shippingMethodId"] = state ? state.shippingMethodId : undefined;
            resourceInputs["shippingRatePriceTiers"] = state ? state.shippingRatePriceTiers : undefined;
            resourceInputs["shippingZoneId"] = state ? state.shippingZoneId : undefined;
        } else {
            const args = argsOrState as ShippingZoneRateArgs | undefined;
            if ((!args || args.price === undefined) && !opts.urn) {
                throw new Error("Missing required property 'price'");
            }
            if ((!args || args.shippingMethodId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shippingMethodId'");
            }
            if ((!args || args.shippingZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shippingZoneId'");
            }
            resourceInputs["freeAbove"] = args ? args.freeAbove : undefined;
            resourceInputs["price"] = args ? args.price : undefined;
            resourceInputs["shippingMethodId"] = args ? args.shippingMethodId : undefined;
            resourceInputs["shippingRatePriceTiers"] = args ? args.shippingRatePriceTiers : undefined;
            resourceInputs["shippingZoneId"] = args ? args.shippingZoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ShippingZoneRate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ShippingZoneRate resources.
 */
export interface ShippingZoneRateState {
    /**
     * The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value
     */
    freeAbove?: pulumi.Input<inputs.ShippingZoneRateFreeAbove>;
    price?: pulumi.Input<inputs.ShippingZoneRatePrice>;
    shippingMethodId?: pulumi.Input<string>;
    /**
     * A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no
     * tiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier
     * API Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)
     */
    shippingRatePriceTiers?: pulumi.Input<pulumi.Input<inputs.ShippingZoneRateShippingRatePriceTier>[]>;
    shippingZoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ShippingZoneRate resource.
 */
export interface ShippingZoneRateArgs {
    /**
     * The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value
     */
    freeAbove?: pulumi.Input<inputs.ShippingZoneRateFreeAbove>;
    price: pulumi.Input<inputs.ShippingZoneRatePrice>;
    shippingMethodId: pulumi.Input<string>;
    /**
     * A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no
     * tiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier
     * API Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)
     */
    shippingRatePriceTiers?: pulumi.Input<pulumi.Input<inputs.ShippingZoneRateShippingRatePriceTier>[]>;
    shippingZoneId: pulumi.Input<string>;
}
